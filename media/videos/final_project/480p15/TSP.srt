1
00:00:00,000 --> 00:00:03,942
For a dataset with n cities, the time complexity of applying kNN

2
00:00:04,042 --> 00:00:07,352
to TSP is O of n squared. Even though it's better than

3
00:00:07,452 --> 00:00:10,510
using Branch and Bound with O of 2 to the power of

4
00:00:10,610 --> 00:00:13,921
n - 1 in most cases we won't find the optimal shortest

5
00:00:14,021 --> 00:00:17,900
path. Still it performs better then the christofides algorithm.

6
00:00:20,000 --> 00:00:23,034
In this video, we showed you different methods to

7
00:00:23,134 --> 00:00:26,935
solve the traveling salesperson problem. Every method has its

8
00:00:27,035 --> 00:00:30,901
own advantages and disadvantages. The brute force algorithm is

9
00:00:31,001 --> 00:00:33,844
the most accurate, but it is also the slowest.

10
00:00:35,000 --> 00:00:37,414
The branch and bound method is faster, but

11
00:00:37,514 --> 00:00:39,988
it is still not efficient for large graphs.

12
00:00:40,066 --> 00:00:43,722
The Christofides algorithm is a heuristic algorithm, which means

13
00:00:43,822 --> 00:00:46,656
it is not guaranteed to find the optimal solution,

14
00:00:46,756 --> 00:00:49,590
but it is much faster than the previous solutions.

15
00:00:49,666 --> 00:00:54,252
The k-nearest neighbor algorithm is also a heuristic algorithm. Even though

16
00:00:54,352 --> 00:00:58,625
it is faster than the Christofides algorithm, results are often worse.

17
00:00:58,725 --> 00:01:01,749
In the end depending on the size of the graph, you

18
00:01:01,849 --> 00:01:05,622
have to decide which solution is best suited for your problem.

19
00:01:05,666 --> 00:01:09,046
Thanks for joining us today! If you enjoyed the video

20
00:01:09,146 --> 00:01:12,526
and learned something new, please give it a thumbs up

21
00:01:13,066 --> 00:01:17,442
Don't forget to subscribe and hit the bell so you won't miss

22
00:01:17,542 --> 00:01:22,590
our next adventure. Until next time, stay curious and take care. Bye!

