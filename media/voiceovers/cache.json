[
  {
    "input_text": "Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.",
    "input_data": {
      "input_text": "Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 450,
        "text_offset": 0,
        "word_length": 7,
        "text": "Welcome",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 262,
        "text_offset": 8,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8125000,
        "duration_milliseconds": 487,
        "text_offset": 13,
        "word_length": 4,
        "text": "guys",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 100,
        "text_offset": 17,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 21750000,
        "duration_milliseconds": 412,
        "text_offset": 19,
        "word_length": 5,
        "text": "Today",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26875000,
        "duration_milliseconds": 125,
        "text_offset": 24,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 28125000,
        "duration_milliseconds": 137,
        "text_offset": 26,
        "word_length": 5,
        "text": "we're",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 375,
        "text_offset": 32,
        "word_length": 6,
        "text": "diving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 150,
        "text_offset": 39,
        "word_length": 4,
        "text": "into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 112,
        "text_offset": 44,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36750000,
        "duration_milliseconds": 425,
        "text_offset": 48,
        "word_length": 9,
        "text": "Traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41250000,
        "duration_milliseconds": 712,
        "text_offset": 58,
        "word_length": 11,
        "text": "Salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 450,
        "text_offset": 70,
        "word_length": 7,
        "text": "Problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53250000,
        "duration_milliseconds": 100,
        "text_offset": 77,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "welcome-back-guys-today-we-re-diving-into-the-d4a4871f.mp3",
    "final_audio": "welcome-back-guys-today-we-re-diving-into-the-d4a4871f.mp3"
  },
  {
    "input_text": "Imagine we have a traveling salesperson - tasked with selling your products in various cities.",
    "input_data": {
      "input_text": "Imagine we have a traveling salesperson - tasked with selling your products in various cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Imagine we have a traveling salesperson - tasked with selling your products in various cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Imagine we have a traveling salesperson - tasked with selling your products in various cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 512,
        "text_offset": 0,
        "word_length": 7,
        "text": "Imagine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 112,
        "text_offset": 8,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 137,
        "text_offset": 11,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 62,
        "text_offset": 16,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 425,
        "text_offset": 18,
        "word_length": 9,
        "text": "traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13875000,
        "duration_milliseconds": 712,
        "text_offset": 28,
        "word_length": 11,
        "text": "salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 350,
        "text_offset": 42,
        "word_length": 6,
        "text": "tasked",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25875000,
        "duration_milliseconds": 112,
        "text_offset": 49,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 312,
        "text_offset": 54,
        "word_length": 7,
        "text": "selling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 137,
        "text_offset": 62,
        "word_length": 4,
        "text": "your",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32250000,
        "duration_milliseconds": 437,
        "text_offset": 67,
        "word_length": 8,
        "text": "products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36875000,
        "duration_milliseconds": 125,
        "text_offset": 76,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38375000,
        "duration_milliseconds": 375,
        "text_offset": 79,
        "word_length": 7,
        "text": "various",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 450,
        "text_offset": 87,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47125000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "imagine-we-have-a-traveling-salesperson-tasked-0830d9fe.mp3",
    "final_audio": "imagine-we-have-a-traveling-salesperson-tasked-0830d9fe.mp3"
  },
  {
    "input_text": "This guy is Alex, a salesperson with a big challenge.",
    "input_data": {
      "input_text": "This guy is Alex, a salesperson with a big challenge.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This guy is Alex, a salesperson with a big challenge.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This guy is Alex, a salesperson with a big challenge.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 175,
        "text_offset": 5,
        "word_length": 3,
        "text": "guy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 150,
        "text_offset": 9,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 362,
        "text_offset": 12,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 62,
        "text_offset": 16,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 62,
        "text_offset": 18,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 712,
        "text_offset": 20,
        "word_length": 11,
        "text": "salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "duration_milliseconds": 137,
        "text_offset": 32,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 62,
        "text_offset": 37,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 200,
        "text_offset": 39,
        "word_length": 3,
        "text": "big",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24625000,
        "duration_milliseconds": 550,
        "text_offset": 43,
        "word_length": 9,
        "text": "challenge",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 100,
        "text_offset": 52,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-guy-is-alex-a-salesperson-with-a-big-339dcb93.mp3",
    "final_audio": "this-guy-is-alex-a-salesperson-with-a-big-339dcb93.mp3"
  },
  {
    "input_text": "Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.",
    "input_data": {
      "input_text": "Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 375,
        "text_offset": 0,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 175,
        "text_offset": 5,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 87,
        "text_offset": 9,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 237,
        "text_offset": 12,
        "word_length": 4,
        "text": "sell",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 425,
        "text_offset": 17,
        "word_length": 8,
        "text": "products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 112,
        "text_offset": 26,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 375,
        "text_offset": 29,
        "word_length": 7,
        "text": "various",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20125000,
        "duration_milliseconds": 337,
        "text_offset": 37,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 100,
        "text_offset": 44,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24875000,
        "duration_milliseconds": 237,
        "text_offset": 48,
        "word_length": 5,
        "text": "wants",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27500000,
        "duration_milliseconds": 87,
        "text_offset": 54,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 200,
        "text_offset": 57,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30875000,
        "duration_milliseconds": 87,
        "text_offset": 62,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 437,
        "text_offset": 66,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36500000,
        "duration_milliseconds": 175,
        "text_offset": 75,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38500000,
        "duration_milliseconds": 100,
        "text_offset": 81,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39625000,
        "duration_milliseconds": 262,
        "text_offset": 84,
        "word_length": 4,
        "text": "save",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 375,
        "text_offset": 89,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46375000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 150,
        "text_offset": 95,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56750000,
        "duration_milliseconds": 125,
        "text_offset": 99,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58125000,
        "duration_milliseconds": 200,
        "text_offset": 103,
        "word_length": 4,
        "text": "does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60375000,
        "duration_milliseconds": 375,
        "text_offset": 108,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64375000,
        "duration_milliseconds": 362,
        "text_offset": 113,
        "word_length": 6,
        "text": "figure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68250000,
        "duration_milliseconds": 125,
        "text_offset": 120,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69750000,
        "duration_milliseconds": 100,
        "text_offset": 124,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70875000,
        "duration_milliseconds": 250,
        "text_offset": 128,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73625000,
        "duration_milliseconds": 362,
        "text_offset": 133,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 100,
        "text_offset": 138,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 85875000,
        "duration_milliseconds": 300,
        "text_offset": 140,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "duration_milliseconds": 300,
        "text_offset": 146,
        "word_length": 4,
        "text": "dive",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92250000,
        "duration_milliseconds": 162,
        "text_offset": 151,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "duration_milliseconds": 87,
        "text_offset": 154,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95125000,
        "duration_milliseconds": 212,
        "text_offset": 158,
        "word_length": 4,
        "text": "help",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 350,
        "text_offset": 163,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101250000,
        "duration_milliseconds": 250,
        "text_offset": 168,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103875000,
        "duration_milliseconds": 175,
        "text_offset": 174,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105750000,
        "duration_milliseconds": 462,
        "text_offset": 179,
        "word_length": 6,
        "text": "puzzle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110625000,
        "duration_milliseconds": 100,
        "text_offset": 185,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "alex-has-to-sell-products-in-various-cities-and-575f7417.mp3",
    "final_audio": "alex-has-to-sell-products-in-various-cities-and-575f7417.mp3"
  },
  {
    "input_text": "Let's say he needs to visit 4 cities.",
    "input_data": {
      "input_text": "Let's say he needs to visit 4 cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's say he needs to visit 4 cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's say he needs to visit 4 cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 187,
        "text_offset": 6,
        "word_length": 3,
        "text": "say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 125,
        "text_offset": 10,
        "word_length": 2,
        "text": "he",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 262,
        "text_offset": 13,
        "word_length": 5,
        "text": "needs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 100,
        "text_offset": 19,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 312,
        "text_offset": 22,
        "word_length": 5,
        "text": "visit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 225,
        "text_offset": 28,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17125000,
        "duration_milliseconds": 512,
        "text_offset": 30,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-say-he-needs-to-visit-4-cities-62950463.mp3",
    "final_audio": "let-s-say-he-needs-to-visit-4-cities-62950463.mp3"
  },
  {
    "input_text": "Sounds straightforward, right? What do you think happens if we add one more city to Alex's route?",
    "input_data": {
      "input_text": "Sounds straightforward, right? What do you think happens if we add one more city to Alex's route?",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Sounds straightforward, right? What do you think happens if we add one more city to Alex's route?</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Sounds straightforward, right? What do you think happens if we add one more city to Alex's route?</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 387,
        "text_offset": 0,
        "word_length": 6,
        "text": "Sounds",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 787,
        "text_offset": 7,
        "word_length": 15,
        "text": "straightforward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 100,
        "text_offset": 22,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 387,
        "text_offset": 24,
        "word_length": 5,
        "text": "right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18250000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26750000,
        "duration_milliseconds": 200,
        "text_offset": 31,
        "word_length": 4,
        "text": "What",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28875000,
        "duration_milliseconds": 62,
        "text_offset": 36,
        "word_length": 2,
        "text": "do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29625000,
        "duration_milliseconds": 100,
        "text_offset": 39,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30875000,
        "duration_milliseconds": 212,
        "text_offset": 43,
        "word_length": 5,
        "text": "think",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33250000,
        "duration_milliseconds": 412,
        "text_offset": 49,
        "word_length": 7,
        "text": "happens",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37625000,
        "duration_milliseconds": 112,
        "text_offset": 57,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39000000,
        "duration_milliseconds": 137,
        "text_offset": 60,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40500000,
        "duration_milliseconds": 162,
        "text_offset": 63,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 212,
        "text_offset": 67,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44750000,
        "duration_milliseconds": 175,
        "text_offset": 71,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 287,
        "text_offset": 76,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49875000,
        "duration_milliseconds": 125,
        "text_offset": 81,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51250000,
        "duration_milliseconds": 487,
        "text_offset": 84,
        "word_length": 6,
        "text": "Alex's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56375000,
        "duration_milliseconds": 362,
        "text_offset": 91,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60125000,
        "duration_milliseconds": 100,
        "text_offset": 96,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "sounds-straightforward-right-what-do-you-think-75c55cb4.mp3",
    "final_audio": "sounds-straightforward-right-what-do-you-think-75c55cb4.mp3"
  },
  {
    "input_text": "Of course, if we add more cities it get's more complex. So how do you determine the shortest possible route that connects all these cities?",
    "input_data": {
      "input_text": "Of course, if we add more cities it get's more complex. So how do you determine the shortest possible route that connects all these cities?",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Of course, if we add more cities it get's more complex. So how do you determine the shortest possible route that connects all these cities?</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Of course, if we add more cities it get's more complex. So how do you determine the shortest possible route that connects all these cities?</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "Of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 325,
        "text_offset": 3,
        "word_length": 6,
        "text": "course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 12,
        "text_offset": 9,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 112,
        "text_offset": 11,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 137,
        "text_offset": 14,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9750000,
        "duration_milliseconds": 150,
        "text_offset": 17,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 187,
        "text_offset": 21,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 375,
        "text_offset": 26,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 87,
        "text_offset": 33,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 212,
        "text_offset": 36,
        "word_length": 5,
        "text": "get's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "duration_milliseconds": 200,
        "text_offset": 42,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 625,
        "text_offset": 47,
        "word_length": 7,
        "text": "complex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29500000,
        "duration_milliseconds": 100,
        "text_offset": 54,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 38000000,
        "duration_milliseconds": 187,
        "text_offset": 56,
        "word_length": 2,
        "text": "So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "duration_milliseconds": 125,
        "text_offset": 59,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41375000,
        "duration_milliseconds": 75,
        "text_offset": 63,
        "word_length": 2,
        "text": "do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42250000,
        "duration_milliseconds": 87,
        "text_offset": 66,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43250000,
        "duration_milliseconds": 462,
        "text_offset": 70,
        "word_length": 9,
        "text": "determine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 87,
        "text_offset": 80,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49125000,
        "duration_milliseconds": 437,
        "text_offset": 84,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53625000,
        "duration_milliseconds": 487,
        "text_offset": 93,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58750000,
        "duration_milliseconds": 200,
        "text_offset": 102,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "duration_milliseconds": 137,
        "text_offset": 108,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62625000,
        "duration_milliseconds": 375,
        "text_offset": 113,
        "word_length": 8,
        "text": "connects",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66625000,
        "duration_milliseconds": 137,
        "text_offset": 122,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68250000,
        "duration_milliseconds": 187,
        "text_offset": 126,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 475,
        "text_offset": 132,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75250000,
        "duration_milliseconds": 100,
        "text_offset": 138,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "of-course-if-we-add-more-cities-it-get-s-more-d1f1b866.mp3",
    "final_audio": "of-course-if-we-add-more-cities-it-get-s-more-d1f1b866.mp3"
  },
  {
    "input_text": "One approach is to try out every possible route. But here lies the problem: Complexity! So, with every new city Alex adds to the trip, the challenge of finding the shortest route grows significantly.",
    "input_data": {
      "input_text": "One approach is to try out every possible route. But here lies the problem: Complexity! So, with every new city Alex adds to the trip, the challenge of finding the shortest route grows significantly.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">One approach is to try out every possible route. But here lies the problem: Complexity! So, with every new city Alex adds to the trip, the challenge of finding the shortest route grows significantly.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">One approach is to try out every possible route. But here lies the problem: Complexity! So, with every new city Alex adds to the trip, the challenge of finding the shortest route grows significantly.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 262,
        "text_offset": 0,
        "word_length": 3,
        "text": "One",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 375,
        "text_offset": 4,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 87,
        "text_offset": 16,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 275,
        "text_offset": 19,
        "word_length": 3,
        "text": "try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 175,
        "text_offset": 23,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 237,
        "text_offset": 27,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17375000,
        "duration_milliseconds": 512,
        "text_offset": 33,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22750000,
        "duration_milliseconds": 337,
        "text_offset": 42,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26375000,
        "duration_milliseconds": 100,
        "text_offset": 47,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 162,
        "text_offset": 49,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36750000,
        "duration_milliseconds": 187,
        "text_offset": 53,
        "word_length": 4,
        "text": "here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38875000,
        "duration_milliseconds": 250,
        "text_offset": 58,
        "word_length": 4,
        "text": "lies",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41625000,
        "duration_milliseconds": 112,
        "text_offset": 63,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "duration_milliseconds": 462,
        "text_offset": 67,
        "word_length": 7,
        "text": "problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 62,
        "text_offset": 74,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 49375000,
        "duration_milliseconds": 800,
        "text_offset": 76,
        "word_length": 10,
        "text": "Complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57625000,
        "duration_milliseconds": 100,
        "text_offset": 86,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 325,
        "text_offset": 88,
        "word_length": 2,
        "text": "So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70375000,
        "duration_milliseconds": 75,
        "text_offset": 90,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 71125000,
        "duration_milliseconds": 162,
        "text_offset": 92,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73000000,
        "duration_milliseconds": 212,
        "text_offset": 97,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75375000,
        "duration_milliseconds": 137,
        "text_offset": 103,
        "word_length": 3,
        "text": "new",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77000000,
        "duration_milliseconds": 312,
        "text_offset": 107,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80250000,
        "duration_milliseconds": 337,
        "text_offset": 112,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83750000,
        "duration_milliseconds": 250,
        "text_offset": 117,
        "word_length": 4,
        "text": "adds",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86375000,
        "duration_milliseconds": 87,
        "text_offset": 122,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87500000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88625000,
        "duration_milliseconds": 300,
        "text_offset": 129,
        "word_length": 4,
        "text": "trip",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92500000,
        "duration_milliseconds": 187,
        "text_offset": 133,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 94375000,
        "duration_milliseconds": 112,
        "text_offset": 135,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95625000,
        "duration_milliseconds": 400,
        "text_offset": 139,
        "word_length": 9,
        "text": "challenge",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99750000,
        "duration_milliseconds": 75,
        "text_offset": 149,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100750000,
        "duration_milliseconds": 350,
        "text_offset": 152,
        "word_length": 7,
        "text": "finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104500000,
        "duration_milliseconds": 87,
        "text_offset": 160,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105500000,
        "duration_milliseconds": 450,
        "text_offset": 164,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110250000,
        "duration_milliseconds": 187,
        "text_offset": 173,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112375000,
        "duration_milliseconds": 275,
        "text_offset": 179,
        "word_length": 5,
        "text": "grows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115375000,
        "duration_milliseconds": 800,
        "text_offset": 185,
        "word_length": 13,
        "text": "significantly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123625000,
        "duration_milliseconds": 100,
        "text_offset": 198,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "one-approach-is-to-try-out-every-possible-route-313d974f.mp3",
    "final_audio": "one-approach-is-to-try-out-every-possible-route-313d974f.mp3"
  },
  {
    "input_text": "The Problem to find the shortest way between multiple points is called the Traveling Salesperson Problem (TSP). Alex goal is to keep the distance traveled as low as possible.",
    "input_data": {
      "input_text": "The Problem to find the shortest way between multiple points is called the Traveling Salesperson Problem (TSP). Alex goal is to keep the distance traveled as low as possible.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Problem to find the shortest way between multiple points is called the Traveling Salesperson Problem (TSP). Alex goal is to keep the distance traveled as low as possible.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Problem to find the shortest way between multiple points is called the Traveling Salesperson Problem (TSP). Alex goal is to keep the distance traveled as low as possible.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 387,
        "text_offset": 4,
        "word_length": 7,
        "text": "Problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6250000,
        "duration_milliseconds": 100,
        "text_offset": 12,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 262,
        "text_offset": 15,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10375000,
        "duration_milliseconds": 75,
        "text_offset": 20,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 462,
        "text_offset": 24,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 137,
        "text_offset": 33,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17750000,
        "duration_milliseconds": 350,
        "text_offset": 37,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21500000,
        "duration_milliseconds": 462,
        "text_offset": 45,
        "word_length": 8,
        "text": "multiple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26375000,
        "duration_milliseconds": 350,
        "text_offset": 54,
        "word_length": 6,
        "text": "points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30125000,
        "duration_milliseconds": 112,
        "text_offset": 61,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 237,
        "text_offset": 64,
        "word_length": 6,
        "text": "called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34125000,
        "duration_milliseconds": 75,
        "text_offset": 71,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35000000,
        "duration_milliseconds": 425,
        "text_offset": 75,
        "word_length": 9,
        "text": "Traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 700,
        "text_offset": 85,
        "word_length": 11,
        "text": "Salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 437,
        "text_offset": 97,
        "word_length": 7,
        "text": "Problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "duration_milliseconds": 37,
        "text_offset": 105,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 52375000,
        "duration_milliseconds": 687,
        "text_offset": 106,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59500000,
        "duration_milliseconds": 100,
        "text_offset": 110,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 68125000,
        "duration_milliseconds": 387,
        "text_offset": 112,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72125000,
        "duration_milliseconds": 275,
        "text_offset": 117,
        "word_length": 4,
        "text": "goal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75125000,
        "duration_milliseconds": 100,
        "text_offset": 122,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76375000,
        "duration_milliseconds": 112,
        "text_offset": 125,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77750000,
        "duration_milliseconds": 200,
        "text_offset": 128,
        "word_length": 4,
        "text": "keep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "duration_milliseconds": 112,
        "text_offset": 133,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81375000,
        "duration_milliseconds": 400,
        "text_offset": 137,
        "word_length": 8,
        "text": "distance",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85500000,
        "duration_milliseconds": 375,
        "text_offset": 146,
        "word_length": 8,
        "text": "traveled",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89500000,
        "duration_milliseconds": 125,
        "text_offset": 155,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91000000,
        "duration_milliseconds": 187,
        "text_offset": 158,
        "word_length": 3,
        "text": "low",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93125000,
        "duration_milliseconds": 100,
        "text_offset": 162,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94250000,
        "duration_milliseconds": 587,
        "text_offset": 165,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100250000,
        "duration_milliseconds": 100,
        "text_offset": 173,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-problem-to-find-the-shortest-way-between-54944622.mp3",
    "final_audio": "the-problem-to-find-the-shortest-way-between-54944622.mp3"
  },
  {
    "input_text": "There are 2 main conditions: He needs to visit every city exactly once, starting from a specific one and returning to the starting city.",
    "input_data": {
      "input_text": "There are 2 main conditions: He needs to visit every city exactly once, starting from a specific one and returning to the starting city.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">There are 2 main conditions: He needs to visit every city exactly once, starting from a specific one and returning to the starting city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">There are 2 main conditions: He needs to visit every city exactly once, starting from a specific one and returning to the starting city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 5,
        "text": "There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 100,
        "text_offset": 6,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3625000,
        "duration_milliseconds": 162,
        "text_offset": 10,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 212,
        "text_offset": 12,
        "word_length": 4,
        "text": "main",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 562,
        "text_offset": 17,
        "word_length": 10,
        "text": "conditions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14125000,
        "duration_milliseconds": 150,
        "text_offset": 27,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 87,
        "text_offset": 29,
        "word_length": 2,
        "text": "He",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16875000,
        "duration_milliseconds": 237,
        "text_offset": 32,
        "word_length": 5,
        "text": "needs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19500000,
        "duration_milliseconds": 87,
        "text_offset": 38,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "duration_milliseconds": 312,
        "text_offset": 41,
        "word_length": 5,
        "text": "visit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 237,
        "text_offset": 47,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 287,
        "text_offset": 53,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29625000,
        "duration_milliseconds": 487,
        "text_offset": 58,
        "word_length": 7,
        "text": "exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34750000,
        "duration_milliseconds": 325,
        "text_offset": 66,
        "word_length": 4,
        "text": "once",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39000000,
        "duration_milliseconds": 187,
        "text_offset": 70,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 40875000,
        "duration_milliseconds": 362,
        "text_offset": 72,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44625000,
        "duration_milliseconds": 150,
        "text_offset": 81,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 50,
        "text_offset": 86,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46875000,
        "duration_milliseconds": 487,
        "text_offset": 88,
        "word_length": 8,
        "text": "specific",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "duration_milliseconds": 225,
        "text_offset": 97,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54500000,
        "duration_milliseconds": 87,
        "text_offset": 101,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55625000,
        "duration_milliseconds": 425,
        "text_offset": 105,
        "word_length": 9,
        "text": "returning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60000000,
        "duration_milliseconds": 87,
        "text_offset": 115,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61125000,
        "duration_milliseconds": 100,
        "text_offset": 118,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62375000,
        "duration_milliseconds": 362,
        "text_offset": 122,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 412,
        "text_offset": 131,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70625000,
        "duration_milliseconds": 100,
        "text_offset": 135,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "there-are-2-main-conditions-he-needs-to-visit-c7cf1ee3.mp3",
    "final_audio": "there-are-2-main-conditions-he-needs-to-visit-c7cf1ee3.mp3"
  },
  {
    "input_text": "To solve it, we'll think of each city as a point, or 'node', on a graph. The edges symbolize possible paths Alex can take.",
    "input_data": {
      "input_text": "To solve it, we'll think of each city as a point, or 'node', on a graph. The edges symbolize possible paths Alex can take.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">To solve it, we'll think of each city as a point, or 'node', on a graph. The edges symbolize possible paths Alex can take.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">To solve it, we'll think of each city as a point, or 'node', on a graph. The edges symbolize possible paths Alex can take.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 125,
        "text_offset": 0,
        "word_length": 2,
        "text": "To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1875000,
        "duration_milliseconds": 300,
        "text_offset": 3,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 100,
        "text_offset": 9,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 62,
        "text_offset": 11,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 150,
        "text_offset": 13,
        "word_length": 5,
        "text": "we'll",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 212,
        "text_offset": 19,
        "word_length": 5,
        "text": "think",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11625000,
        "duration_milliseconds": 100,
        "text_offset": 25,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 175,
        "text_offset": 28,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14875000,
        "duration_milliseconds": 287,
        "text_offset": 33,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19375000,
        "duration_milliseconds": 62,
        "text_offset": 41,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 300,
        "text_offset": 43,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24250000,
        "duration_milliseconds": 100,
        "text_offset": 48,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 25250000,
        "duration_milliseconds": 112,
        "text_offset": 50,
        "word_length": 2,
        "text": "or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26625000,
        "duration_milliseconds": 300,
        "text_offset": 54,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 87,
        "text_offset": 59,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 112,
        "text_offset": 61,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32875000,
        "duration_milliseconds": 50,
        "text_offset": 64,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 637,
        "text_offset": 66,
        "word_length": 5,
        "text": "graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40250000,
        "duration_milliseconds": 100,
        "text_offset": 71,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 48875000,
        "duration_milliseconds": 137,
        "text_offset": 73,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50500000,
        "duration_milliseconds": 312,
        "text_offset": 77,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53875000,
        "duration_milliseconds": 475,
        "text_offset": 83,
        "word_length": 9,
        "text": "symbolize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58750000,
        "duration_milliseconds": 500,
        "text_offset": 93,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64000000,
        "duration_milliseconds": 400,
        "text_offset": 102,
        "word_length": 5,
        "text": "paths",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68125000,
        "duration_milliseconds": 325,
        "text_offset": 108,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71500000,
        "duration_milliseconds": 150,
        "text_offset": 113,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73250000,
        "duration_milliseconds": 387,
        "text_offset": 117,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 100,
        "text_offset": 121,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "to-solve-it-we-ll-think-of-each-city-as-a-point-or-d1b3759d.mp3",
    "final_audio": "to-solve-it-we-ll-think-of-each-city-as-a-point-or-d1b3759d.mp3"
  },
  {
    "input_text": "It's complete, this means there's a direct path from every city to every other city.",
    "input_data": {
      "input_text": "It's complete, this means there's a direct path from every city to every other city.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">It's complete, this means there's a direct path from every city to every other city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">It's complete, this means there's a direct path from every city to every other city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 200,
        "text_offset": 0,
        "word_length": 4,
        "text": "It's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2750000,
        "duration_milliseconds": 462,
        "text_offset": 5,
        "word_length": 8,
        "text": "complete",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 150,
        "text_offset": 13,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 187,
        "text_offset": 15,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 237,
        "text_offset": 20,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 200,
        "text_offset": 26,
        "word_length": 7,
        "text": "there's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 62,
        "text_offset": 34,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 337,
        "text_offset": 36,
        "word_length": 6,
        "text": "direct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 300,
        "text_offset": 43,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "duration_milliseconds": 175,
        "text_offset": 48,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 250,
        "text_offset": 53,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29250000,
        "duration_milliseconds": 300,
        "text_offset": 59,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32500000,
        "duration_milliseconds": 137,
        "text_offset": 64,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34125000,
        "duration_milliseconds": 300,
        "text_offset": 67,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 212,
        "text_offset": 73,
        "word_length": 5,
        "text": "other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39750000,
        "duration_milliseconds": 412,
        "text_offset": 79,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44125000,
        "duration_milliseconds": 100,
        "text_offset": 83,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "it-s-complete-this-means-there-s-a-direct-path-ddb2d54b.mp3",
    "final_audio": "it-s-complete-this-means-there-s-a-direct-path-ddb2d54b.mp3"
  },
  {
    "input_text": "Our TSP is symmetric. It means the distance from city A to B is identical to the distance from B to A.",
    "input_data": {
      "input_text": "Our TSP is symmetric. It means the distance from city A to B is identical to the distance from B to A.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Our TSP is symmetric. It means the distance from city A to B is identical to the distance from B to A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Our TSP is symmetric. It means the distance from city A to B is identical to the distance from B to A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 3,
        "text": "Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 700,
        "text_offset": 4,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 150,
        "text_offset": 8,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 637,
        "text_offset": 11,
        "word_length": 9,
        "text": "symmetric",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 100,
        "text_offset": 20,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 27000000,
        "duration_milliseconds": 175,
        "text_offset": 22,
        "word_length": 2,
        "text": "It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 262,
        "text_offset": 25,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 125,
        "text_offset": 31,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33250000,
        "duration_milliseconds": 425,
        "text_offset": 35,
        "word_length": 8,
        "text": "distance",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 200,
        "text_offset": 44,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "duration_milliseconds": 337,
        "text_offset": 49,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 112,
        "text_offset": 54,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "duration_milliseconds": 100,
        "text_offset": 56,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46125000,
        "duration_milliseconds": 125,
        "text_offset": 59,
        "word_length": 1,
        "text": "B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 125,
        "text_offset": 61,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49125000,
        "duration_milliseconds": 562,
        "text_offset": 64,
        "word_length": 9,
        "text": "identical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 87,
        "text_offset": 74,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 125,
        "text_offset": 77,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57375000,
        "duration_milliseconds": 412,
        "text_offset": 81,
        "word_length": 8,
        "text": "distance",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61750000,
        "duration_milliseconds": 187,
        "text_offset": 90,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63875000,
        "duration_milliseconds": 150,
        "text_offset": 95,
        "word_length": 1,
        "text": "B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65625000,
        "duration_milliseconds": 125,
        "text_offset": 97,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "duration_milliseconds": 312,
        "text_offset": 100,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 100,
        "text_offset": 101,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "our-tsp-is-symmetric-it-means-the-distance-from-c8a15b03.mp3",
    "final_audio": "our-tsp-is-symmetric-it-means-the-distance-from-c8a15b03.mp3"
  },
  {
    "input_text": "Also, in our model, the direct path between any two cities is always the shortest. This means for two cities A and B there is no path with an added point that is shorter than the direct connection. adhering to the triangle inequality principle.",
    "input_data": {
      "input_text": "Also, in our model, the direct path between any two cities is always the shortest. This means for two cities A and B there is no path with an added point that is shorter than the direct connection. adhering to the triangle inequality principle.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Also, in our model, the direct path between any two cities is always the shortest. This means for two cities A and B there is no path with an added point that is shorter than the direct connection. adhering to the triangle inequality principle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Also, in our model, the direct path between any two cities is always the shortest. This means for two cities A and B there is no path with an added point that is shorter than the direct connection. adhering to the triangle inequality principle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 462,
        "text_offset": 0,
        "word_length": 4,
        "text": "Also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 87,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 112,
        "text_offset": 6,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 100,
        "text_offset": 9,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 362,
        "text_offset": 13,
        "word_length": 5,
        "text": "model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14125000,
        "duration_milliseconds": 62,
        "text_offset": 18,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 112,
        "text_offset": 20,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 350,
        "text_offset": 24,
        "word_length": 6,
        "text": "direct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 300,
        "text_offset": 31,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 387,
        "text_offset": 36,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 187,
        "text_offset": 44,
        "word_length": 3,
        "text": "any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 175,
        "text_offset": 48,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 400,
        "text_offset": 52,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35500000,
        "duration_milliseconds": 125,
        "text_offset": 59,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 337,
        "text_offset": 62,
        "word_length": 6,
        "text": "always",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40625000,
        "duration_milliseconds": 87,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41625000,
        "duration_milliseconds": 537,
        "text_offset": 73,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47250000,
        "duration_milliseconds": 100,
        "text_offset": 81,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 55750000,
        "duration_milliseconds": 200,
        "text_offset": 83,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57875000,
        "duration_milliseconds": 225,
        "text_offset": 88,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60375000,
        "duration_milliseconds": 150,
        "text_offset": 94,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62125000,
        "duration_milliseconds": 175,
        "text_offset": 98,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64125000,
        "duration_milliseconds": 412,
        "text_offset": 102,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68500000,
        "duration_milliseconds": 150,
        "text_offset": 109,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 112,
        "text_offset": 111,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71625000,
        "duration_milliseconds": 137,
        "text_offset": 115,
        "word_length": 1,
        "text": "B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73125000,
        "duration_milliseconds": 187,
        "text_offset": 117,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75250000,
        "duration_milliseconds": 125,
        "text_offset": 123,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76750000,
        "duration_milliseconds": 175,
        "text_offset": 126,
        "word_length": 2,
        "text": "no",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78625000,
        "duration_milliseconds": 325,
        "text_offset": 129,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82125000,
        "duration_milliseconds": 125,
        "text_offset": 134,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83500000,
        "duration_milliseconds": 100,
        "text_offset": 139,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84750000,
        "duration_milliseconds": 300,
        "text_offset": 142,
        "word_length": 5,
        "text": "added",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88000000,
        "duration_milliseconds": 262,
        "text_offset": 148,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90875000,
        "duration_milliseconds": 125,
        "text_offset": 154,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92250000,
        "duration_milliseconds": 75,
        "text_offset": 159,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93250000,
        "duration_milliseconds": 350,
        "text_offset": 162,
        "word_length": 7,
        "text": "shorter",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96875000,
        "duration_milliseconds": 125,
        "text_offset": 170,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98375000,
        "duration_milliseconds": 87,
        "text_offset": 175,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99500000,
        "duration_milliseconds": 325,
        "text_offset": 179,
        "word_length": 6,
        "text": "direct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103000000,
        "duration_milliseconds": 550,
        "text_offset": 186,
        "word_length": 10,
        "text": "connection",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108750000,
        "duration_milliseconds": 100,
        "text_offset": 196,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 117375000,
        "duration_milliseconds": 500,
        "text_offset": 198,
        "word_length": 8,
        "text": "adhering",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122500000,
        "duration_milliseconds": 100,
        "text_offset": 207,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123750000,
        "duration_milliseconds": 125,
        "text_offset": 210,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125250000,
        "duration_milliseconds": 587,
        "text_offset": 214,
        "word_length": 8,
        "text": "triangle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131250000,
        "duration_milliseconds": 637,
        "text_offset": 223,
        "word_length": 10,
        "text": "inequality",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137875000,
        "duration_milliseconds": 675,
        "text_offset": 234,
        "word_length": 9,
        "text": "principle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144750000,
        "duration_milliseconds": 100,
        "text_offset": 243,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "also-in-our-model-the-direct-path-between-any-two-449168ee.mp3",
    "final_audio": "also-in-our-model-the-direct-path-between-any-two-449168ee.mp3"
  },
  {
    "input_text": "With these rules in mind, let's explore how Alex can find the shortest route.",
    "input_data": {
      "input_text": "With these rules in mind, let's explore how Alex can find the shortest route.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">With these rules in mind, let's explore how Alex can find the shortest route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">With these rules in mind, let's explore how Alex can find the shortest route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 4,
        "text": "With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 187,
        "text_offset": 5,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 262,
        "text_offset": 11,
        "word_length": 5,
        "text": "rules",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 87,
        "text_offset": 17,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 337,
        "text_offset": 20,
        "word_length": 4,
        "text": "mind",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 112,
        "text_offset": 24,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 162,
        "text_offset": 26,
        "word_length": 5,
        "text": "let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 450,
        "text_offset": 32,
        "word_length": 7,
        "text": "explore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 137,
        "text_offset": 40,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22500000,
        "duration_milliseconds": 362,
        "text_offset": 44,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26375000,
        "duration_milliseconds": 137,
        "text_offset": 49,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28000000,
        "duration_milliseconds": 262,
        "text_offset": 53,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30750000,
        "duration_milliseconds": 62,
        "text_offset": 58,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 437,
        "text_offset": 62,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36125000,
        "duration_milliseconds": 312,
        "text_offset": 71,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 100,
        "text_offset": 76,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "with-these-rules-in-mind-let-s-explore-how-alex-6f913760.mp3",
    "final_audio": "with-these-rules-in-mind-let-s-explore-how-alex-6f913760.mp3"
  },
  {
    "input_text": "There are symmetrical and asymmetrical TSPs.",
    "input_data": {
      "input_text": "There are symmetrical and asymmetrical TSPs.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">There are symmetrical and asymmetrical TSPs.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">There are symmetrical and asymmetrical TSPs.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 5,
        "text": "There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2750000,
        "duration_milliseconds": 112,
        "text_offset": 6,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 675,
        "text_offset": 10,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11125000,
        "duration_milliseconds": 162,
        "text_offset": 22,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 775,
        "text_offset": 26,
        "word_length": 12,
        "text": "asymmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 900,
        "text_offset": 39,
        "word_length": 4,
        "text": "TSPs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30125000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "there-are-symmetrical-and-asymmetrical-tsps-4db852ac.mp3",
    "final_audio": "there-are-symmetrical-and-asymmetrical-tsps-4db852ac.mp3"
  },
  {
    "input_text": "First we will explain the symmetrical TSP",
    "input_data": {
      "input_text": "First we will explain the symmetrical TSP",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">First we will explain the symmetrical TSP</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">First we will explain the symmetrical TSP</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 400,
        "text_offset": 0,
        "word_length": 5,
        "text": "First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 125,
        "text_offset": 6,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6250000,
        "duration_milliseconds": 137,
        "text_offset": 9,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7875000,
        "duration_milliseconds": 425,
        "text_offset": 14,
        "word_length": 7,
        "text": "explain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 100,
        "text_offset": 22,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13500000,
        "duration_milliseconds": 650,
        "text_offset": 26,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 800,
        "text_offset": 38,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "first-we-will-explain-the-symmetrical-tsp-a7a12429.mp3",
    "final_audio": "first-we-will-explain-the-symmetrical-tsp-a7a12429.mp3"
  },
  {
    "input_text": "A TSP is called symmetrical, if the edges between two nodes have the same value in both directions. This means the way form one town to another would be exact the same in both directions. This isn't really accurate in real life because of conditions of the landscape or construction sites.",
    "input_data": {
      "input_text": "A TSP is called symmetrical, if the edges between two nodes have the same value in both directions. This means the way form one town to another would be exact the same in both directions. This isn't really accurate in real life because of conditions of the landscape or construction sites.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">A TSP is called symmetrical, if the edges between two nodes have the same value in both directions. This means the way form one town to another would be exact the same in both directions. This isn't really accurate in real life because of conditions of the landscape or construction sites.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">A TSP is called symmetrical, if the edges between two nodes have the same value in both directions. This means the way form one town to another would be exact the same in both directions. This isn't really accurate in real life because of conditions of the landscape or construction sites.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 512,
        "text_offset": 2,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 125,
        "text_offset": 6,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 225,
        "text_offset": 9,
        "word_length": 6,
        "text": "called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11375000,
        "duration_milliseconds": 625,
        "text_offset": 16,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 100,
        "text_offset": 27,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 19500000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 87,
        "text_offset": 32,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21875000,
        "duration_milliseconds": 312,
        "text_offset": 36,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25250000,
        "duration_milliseconds": 350,
        "text_offset": 42,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 187,
        "text_offset": 50,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31125000,
        "duration_milliseconds": 312,
        "text_offset": 54,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34500000,
        "duration_milliseconds": 125,
        "text_offset": 60,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36000000,
        "duration_milliseconds": 87,
        "text_offset": 65,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 275,
        "text_offset": 69,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "duration_milliseconds": 387,
        "text_offset": 74,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44125000,
        "duration_milliseconds": 100,
        "text_offset": 80,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45375000,
        "duration_milliseconds": 212,
        "text_offset": 83,
        "word_length": 4,
        "text": "both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 650,
        "text_offset": 88,
        "word_length": 10,
        "text": "directions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54375000,
        "duration_milliseconds": 100,
        "text_offset": 98,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 63000000,
        "duration_milliseconds": 237,
        "text_offset": 100,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65500000,
        "duration_milliseconds": 237,
        "text_offset": 105,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68125000,
        "duration_milliseconds": 112,
        "text_offset": 111,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69375000,
        "duration_milliseconds": 150,
        "text_offset": 115,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71000000,
        "duration_milliseconds": 287,
        "text_offset": 119,
        "word_length": 4,
        "text": "form",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74125000,
        "duration_milliseconds": 187,
        "text_offset": 124,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76250000,
        "duration_milliseconds": 275,
        "text_offset": 128,
        "word_length": 4,
        "text": "town",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79250000,
        "duration_milliseconds": 125,
        "text_offset": 133,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80750000,
        "duration_milliseconds": 362,
        "text_offset": 136,
        "word_length": 7,
        "text": "another",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84625000,
        "duration_milliseconds": 112,
        "text_offset": 144,
        "word_length": 5,
        "text": "would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86000000,
        "duration_milliseconds": 125,
        "text_offset": 150,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87500000,
        "duration_milliseconds": 412,
        "text_offset": 153,
        "word_length": 5,
        "text": "exact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91750000,
        "duration_milliseconds": 87,
        "text_offset": 159,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92875000,
        "duration_milliseconds": 325,
        "text_offset": 163,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96250000,
        "duration_milliseconds": 100,
        "text_offset": 168,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 212,
        "text_offset": 171,
        "word_length": 4,
        "text": "both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99750000,
        "duration_milliseconds": 650,
        "text_offset": 176,
        "word_length": 10,
        "text": "directions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106500000,
        "duration_milliseconds": 100,
        "text_offset": 186,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 115000000,
        "duration_milliseconds": 212,
        "text_offset": 188,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117375000,
        "duration_milliseconds": 250,
        "text_offset": 193,
        "word_length": 5,
        "text": "isn't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "duration_milliseconds": 262,
        "text_offset": 199,
        "word_length": 6,
        "text": "really",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122750000,
        "duration_milliseconds": 425,
        "text_offset": 206,
        "word_length": 8,
        "text": "accurate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127125000,
        "duration_milliseconds": 112,
        "text_offset": 215,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128500000,
        "duration_milliseconds": 187,
        "text_offset": 218,
        "word_length": 4,
        "text": "real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130625000,
        "duration_milliseconds": 262,
        "text_offset": 223,
        "word_length": 4,
        "text": "life",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133375000,
        "duration_milliseconds": 325,
        "text_offset": 228,
        "word_length": 7,
        "text": "because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136750000,
        "duration_milliseconds": 75,
        "text_offset": 236,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137750000,
        "duration_milliseconds": 537,
        "text_offset": 239,
        "word_length": 10,
        "text": "conditions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143375000,
        "duration_milliseconds": 75,
        "text_offset": 250,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144375000,
        "duration_milliseconds": 100,
        "text_offset": 253,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145625000,
        "duration_milliseconds": 500,
        "text_offset": 257,
        "word_length": 9,
        "text": "landscape",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150750000,
        "duration_milliseconds": 125,
        "text_offset": 267,
        "word_length": 2,
        "text": "or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152250000,
        "duration_milliseconds": 625,
        "text_offset": 270,
        "word_length": 12,
        "text": "construction",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158750000,
        "duration_milliseconds": 462,
        "text_offset": 283,
        "word_length": 5,
        "text": "sites",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163500000,
        "duration_milliseconds": 100,
        "text_offset": 288,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "a-tsp-is-called-symmetrical-if-the-edges-between-39c7fed0.mp3",
    "final_audio": "a-tsp-is-called-symmetrical-if-the-edges-between-39c7fed0.mp3"
  },
  {
    "input_text": "Thats why there is also a asymmetrical TSP.",
    "input_data": {
      "input_text": "Thats why there is also a asymmetrical TSP.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Thats why there is also a asymmetrical TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Thats why there is also a asymmetrical TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 5,
        "text": "Thats",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 137,
        "text_offset": 6,
        "word_length": 3,
        "text": "why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 187,
        "text_offset": 10,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7000000,
        "duration_milliseconds": 125,
        "text_offset": 16,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 275,
        "text_offset": 19,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 87,
        "text_offset": 24,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 775,
        "text_offset": 26,
        "word_length": 12,
        "text": "asymmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "duration_milliseconds": 762,
        "text_offset": 39,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28375000,
        "duration_milliseconds": 100,
        "text_offset": 42,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "thats-why-there-is-also-a-asymmetrical-tsp-cecea753.mp3",
    "final_audio": "thats-why-there-is-also-a-asymmetrical-tsp-cecea753.mp3"
  },
  {
    "input_text": "The TSP is called asymmetrical if there are two edges between every node and they don't have the same weight. As you can see the graph is then directed. This is way more accurate to the real world, but this is also twice as complex to solve then the symmetrical. This is why we only observe symmetrical TSPs in the following.",
    "input_data": {
      "input_text": "The TSP is called asymmetrical if there are two edges between every node and they don't have the same weight. As you can see the graph is then directed. This is way more accurate to the real world, but this is also twice as complex to solve then the symmetrical. This is why we only observe symmetrical TSPs in the following.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The TSP is called asymmetrical if there are two edges between every node and they don't have the same weight. As you can see the graph is then directed. This is way more accurate to the real world, but this is also twice as complex to solve then the symmetrical. This is why we only observe symmetrical TSPs in the following.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The TSP is called asymmetrical if there are two edges between every node and they don't have the same weight. As you can see the graph is then directed. This is way more accurate to the real world, but this is also twice as complex to solve then the symmetrical. This is why we only observe symmetrical TSPs in the following.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 500,
        "text_offset": 4,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 125,
        "text_offset": 8,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 262,
        "text_offset": 11,
        "word_length": 6,
        "text": "called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11625000,
        "duration_milliseconds": 737,
        "text_offset": 18,
        "word_length": 12,
        "text": "asymmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19250000,
        "duration_milliseconds": 100,
        "text_offset": 31,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 150,
        "text_offset": 34,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22000000,
        "duration_milliseconds": 100,
        "text_offset": 40,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 225,
        "text_offset": 44,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25625000,
        "duration_milliseconds": 300,
        "text_offset": 48,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28875000,
        "duration_milliseconds": 350,
        "text_offset": 54,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32625000,
        "duration_milliseconds": 225,
        "text_offset": 62,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35125000,
        "duration_milliseconds": 312,
        "text_offset": 68,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38375000,
        "duration_milliseconds": 100,
        "text_offset": 73,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39625000,
        "duration_milliseconds": 100,
        "text_offset": 77,
        "word_length": 4,
        "text": "they",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40750000,
        "duration_milliseconds": 187,
        "text_offset": 82,
        "word_length": 5,
        "text": "don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42875000,
        "duration_milliseconds": 162,
        "text_offset": 88,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44750000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 262,
        "text_offset": 97,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 350,
        "text_offset": 102,
        "word_length": 6,
        "text": "weight",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52250000,
        "duration_milliseconds": 100,
        "text_offset": 108,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 60875000,
        "duration_milliseconds": 212,
        "text_offset": 110,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63250000,
        "duration_milliseconds": 112,
        "text_offset": 113,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64625000,
        "duration_milliseconds": 162,
        "text_offset": 117,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66500000,
        "duration_milliseconds": 200,
        "text_offset": 121,
        "word_length": 3,
        "text": "see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 125,
        "text_offset": 125,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 362,
        "text_offset": 129,
        "word_length": 5,
        "text": "graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74000000,
        "duration_milliseconds": 125,
        "text_offset": 135,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75500000,
        "duration_milliseconds": 175,
        "text_offset": 138,
        "word_length": 4,
        "text": "then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 575,
        "text_offset": 143,
        "word_length": 8,
        "text": "directed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83375000,
        "duration_milliseconds": 100,
        "text_offset": 151,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 91875000,
        "duration_milliseconds": 212,
        "text_offset": 153,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94250000,
        "duration_milliseconds": 112,
        "text_offset": 158,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95625000,
        "duration_milliseconds": 175,
        "text_offset": 161,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 262,
        "text_offset": 165,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100250000,
        "duration_milliseconds": 375,
        "text_offset": 170,
        "word_length": 8,
        "text": "accurate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104250000,
        "duration_milliseconds": 87,
        "text_offset": 179,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105375000,
        "duration_milliseconds": 100,
        "text_offset": 182,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106500000,
        "duration_milliseconds": 250,
        "text_offset": 186,
        "word_length": 4,
        "text": "real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109250000,
        "duration_milliseconds": 275,
        "text_offset": 191,
        "word_length": 5,
        "text": "world",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112875000,
        "duration_milliseconds": 100,
        "text_offset": 196,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 113875000,
        "duration_milliseconds": 137,
        "text_offset": 198,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115500000,
        "duration_milliseconds": 162,
        "text_offset": 202,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117250000,
        "duration_milliseconds": 125,
        "text_offset": 207,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118750000,
        "duration_milliseconds": 250,
        "text_offset": 210,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121375000,
        "duration_milliseconds": 325,
        "text_offset": 215,
        "word_length": 5,
        "text": "twice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124875000,
        "duration_milliseconds": 112,
        "text_offset": 221,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126250000,
        "duration_milliseconds": 475,
        "text_offset": 224,
        "word_length": 7,
        "text": "complex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131250000,
        "duration_milliseconds": 100,
        "text_offset": 232,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132500000,
        "duration_milliseconds": 300,
        "text_offset": 235,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135750000,
        "duration_milliseconds": 137,
        "text_offset": 241,
        "word_length": 4,
        "text": "then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137375000,
        "duration_milliseconds": 87,
        "text_offset": 246,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138375000,
        "duration_milliseconds": 662,
        "text_offset": 250,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145125000,
        "duration_milliseconds": 100,
        "text_offset": 261,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 153750000,
        "duration_milliseconds": 237,
        "text_offset": 263,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156375000,
        "duration_milliseconds": 112,
        "text_offset": 268,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 157750000,
        "duration_milliseconds": 162,
        "text_offset": 271,
        "word_length": 3,
        "text": "why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 159625000,
        "duration_milliseconds": 162,
        "text_offset": 275,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 161500000,
        "duration_milliseconds": 275,
        "text_offset": 278,
        "word_length": 4,
        "text": "only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 164500000,
        "duration_milliseconds": 387,
        "text_offset": 283,
        "word_length": 7,
        "text": "observe",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168625000,
        "duration_milliseconds": 637,
        "text_offset": 291,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175250000,
        "duration_milliseconds": 700,
        "text_offset": 303,
        "word_length": 4,
        "text": "TSPs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 182500000,
        "duration_milliseconds": 75,
        "text_offset": 308,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183500000,
        "duration_milliseconds": 87,
        "text_offset": 311,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184625000,
        "duration_milliseconds": 512,
        "text_offset": 315,
        "word_length": 9,
        "text": "following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190000000,
        "duration_milliseconds": 100,
        "text_offset": 324,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-tsp-is-called-asymmetrical-if-there-are-two-34e6abe5.mp3",
    "final_audio": "the-tsp-is-called-asymmetrical-if-there-are-two-34e6abe5.mp3"
  },
  {
    "input_text": "now we go on with the next topic",
    "input_data": {
      "input_text": "now we go on with the next topic",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">now we go on with the next topic</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">now we go on with the next topic</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 3,
        "text": "now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 137,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 250,
        "text_offset": 7,
        "word_length": 2,
        "text": "go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 125,
        "text_offset": 13,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 87,
        "text_offset": 18,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 250,
        "text_offset": 22,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 437,
        "text_offset": 27,
        "word_length": 5,
        "text": "topic",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "now-we-go-on-with-the-next-topic-f94b96a8.mp3",
    "final_audio": "now-we-go-on-with-the-next-topic-f94b96a8.mp3"
  },
  {
    "input_text": "We need to point out how good is our approximated solution compared to the optimum. In some business cases there is a treshold given by the supervisor so you don't need to know how near the solution is to the optimum but in a theroetic case we want to know this. As we know to determine the optimum is not economically sensible so we need to find an other value to measure our solution.",
    "input_data": {
      "input_text": "We need to point out how good is our approximated solution compared to the optimum. In some business cases there is a treshold given by the supervisor so you don't need to know how near the solution is to the optimum but in a theroetic case we want to know this. As we know to determine the optimum is not economically sensible so we need to find an other value to measure our solution.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We need to point out how good is our approximated solution compared to the optimum. In some business cases there is a treshold given by the supervisor so you don't need to know how near the solution is to the optimum but in a theroetic case we want to know this. As we know to determine the optimum is not economically sensible so we need to find an other value to measure our solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We need to point out how good is our approximated solution compared to the optimum. In some business cases there is a treshold given by the supervisor so you don't need to know how near the solution is to the optimum but in a theroetic case we want to know this. As we know to determine the optimum is not economically sensible so we need to find an other value to measure our solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 150,
        "text_offset": 3,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 87,
        "text_offset": 8,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 237,
        "text_offset": 11,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7875000,
        "duration_milliseconds": 162,
        "text_offset": 17,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9750000,
        "duration_milliseconds": 150,
        "text_offset": 21,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 225,
        "text_offset": 25,
        "word_length": 4,
        "text": "good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14000000,
        "duration_milliseconds": 137,
        "text_offset": 30,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15625000,
        "duration_milliseconds": 125,
        "text_offset": 33,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17000000,
        "duration_milliseconds": 725,
        "text_offset": 37,
        "word_length": 12,
        "text": "approximated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "duration_milliseconds": 462,
        "text_offset": 50,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 400,
        "text_offset": 59,
        "word_length": 8,
        "text": "compared",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 75,
        "text_offset": 68,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34500000,
        "duration_milliseconds": 125,
        "text_offset": 71,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36000000,
        "duration_milliseconds": 487,
        "text_offset": 75,
        "word_length": 7,
        "text": "optimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41125000,
        "duration_milliseconds": 100,
        "text_offset": 82,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 49750000,
        "duration_milliseconds": 187,
        "text_offset": 84,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51875000,
        "duration_milliseconds": 225,
        "text_offset": 87,
        "word_length": 4,
        "text": "some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54375000,
        "duration_milliseconds": 375,
        "text_offset": 92,
        "word_length": 8,
        "text": "business",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58375000,
        "duration_milliseconds": 400,
        "text_offset": 101,
        "word_length": 5,
        "text": "cases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62625000,
        "duration_milliseconds": 162,
        "text_offset": 107,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64375000,
        "duration_milliseconds": 100,
        "text_offset": 113,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65625000,
        "duration_milliseconds": 62,
        "text_offset": 116,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66500000,
        "duration_milliseconds": 475,
        "text_offset": 118,
        "word_length": 8,
        "text": "treshold",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71500000,
        "duration_milliseconds": 287,
        "text_offset": 127,
        "word_length": 5,
        "text": "given",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74625000,
        "duration_milliseconds": 112,
        "text_offset": 133,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75875000,
        "duration_milliseconds": 100,
        "text_offset": 136,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77125000,
        "duration_milliseconds": 700,
        "text_offset": 140,
        "word_length": 10,
        "text": "supervisor",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84375000,
        "duration_milliseconds": 100,
        "text_offset": 151,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85500000,
        "duration_milliseconds": 100,
        "text_offset": 154,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86750000,
        "duration_milliseconds": 200,
        "text_offset": 158,
        "word_length": 5,
        "text": "don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88875000,
        "duration_milliseconds": 137,
        "text_offset": 164,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90375000,
        "duration_milliseconds": 75,
        "text_offset": 169,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91250000,
        "duration_milliseconds": 150,
        "text_offset": 172,
        "word_length": 4,
        "text": "know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92875000,
        "duration_milliseconds": 150,
        "text_offset": 177,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94625000,
        "duration_milliseconds": 212,
        "text_offset": 181,
        "word_length": 4,
        "text": "near",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97000000,
        "duration_milliseconds": 100,
        "text_offset": 186,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98125000,
        "duration_milliseconds": 437,
        "text_offset": 190,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102625000,
        "duration_milliseconds": 125,
        "text_offset": 199,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104125000,
        "duration_milliseconds": 87,
        "text_offset": 202,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105250000,
        "duration_milliseconds": 112,
        "text_offset": 205,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106625000,
        "duration_milliseconds": 462,
        "text_offset": 209,
        "word_length": 7,
        "text": "optimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111500000,
        "duration_milliseconds": 150,
        "text_offset": 217,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113125000,
        "duration_milliseconds": 100,
        "text_offset": 221,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114375000,
        "duration_milliseconds": 50,
        "text_offset": 224,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115125000,
        "duration_milliseconds": 525,
        "text_offset": 226,
        "word_length": 9,
        "text": "theroetic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120625000,
        "duration_milliseconds": 287,
        "text_offset": 236,
        "word_length": 4,
        "text": "case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123625000,
        "duration_milliseconds": 100,
        "text_offset": 241,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124750000,
        "duration_milliseconds": 200,
        "text_offset": 244,
        "word_length": 4,
        "text": "want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126875000,
        "duration_milliseconds": 62,
        "text_offset": 249,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127625000,
        "duration_milliseconds": 162,
        "text_offset": 252,
        "word_length": 4,
        "text": "know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129375000,
        "duration_milliseconds": 337,
        "text_offset": 257,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133000000,
        "duration_milliseconds": 100,
        "text_offset": 261,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 141625000,
        "duration_milliseconds": 200,
        "text_offset": 263,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143875000,
        "duration_milliseconds": 112,
        "text_offset": 266,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145250000,
        "duration_milliseconds": 150,
        "text_offset": 269,
        "word_length": 4,
        "text": "know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146875000,
        "duration_milliseconds": 100,
        "text_offset": 274,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148000000,
        "duration_milliseconds": 462,
        "text_offset": 277,
        "word_length": 9,
        "text": "determine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152875000,
        "duration_milliseconds": 112,
        "text_offset": 287,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154250000,
        "duration_milliseconds": 462,
        "text_offset": 291,
        "word_length": 7,
        "text": "optimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 159000000,
        "duration_milliseconds": 125,
        "text_offset": 299,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160500000,
        "duration_milliseconds": 225,
        "text_offset": 302,
        "word_length": 3,
        "text": "not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 162875000,
        "duration_milliseconds": 700,
        "text_offset": 306,
        "word_length": 12,
        "text": "economically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170125000,
        "duration_milliseconds": 550,
        "text_offset": 319,
        "word_length": 8,
        "text": "sensible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175875000,
        "duration_milliseconds": 112,
        "text_offset": 328,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177250000,
        "duration_milliseconds": 100,
        "text_offset": 331,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178500000,
        "duration_milliseconds": 150,
        "text_offset": 334,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180125000,
        "duration_milliseconds": 75,
        "text_offset": 339,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181000000,
        "duration_milliseconds": 262,
        "text_offset": 342,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183750000,
        "duration_milliseconds": 100,
        "text_offset": 347,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 185000000,
        "duration_milliseconds": 237,
        "text_offset": 350,
        "word_length": 5,
        "text": "other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187625000,
        "duration_milliseconds": 362,
        "text_offset": 356,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191500000,
        "duration_milliseconds": 100,
        "text_offset": 362,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192625000,
        "duration_milliseconds": 325,
        "text_offset": 365,
        "word_length": 7,
        "text": "measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196125000,
        "duration_milliseconds": 112,
        "text_offset": 373,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197500000,
        "duration_milliseconds": 550,
        "text_offset": 377,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203250000,
        "duration_milliseconds": 100,
        "text_offset": 385,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-need-to-point-out-how-good-is-our-approximated-cbdb01d9.mp3",
    "final_audio": "we-need-to-point-out-how-good-is-our-approximated-cbdb01d9.mp3"
  },
  {
    "input_text": "So lets imagine we have these nodes as a tsp",
    "input_data": {
      "input_text": "So lets imagine we have these nodes as a tsp",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">So lets imagine we have these nodes as a tsp</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">So lets imagine we have these nodes as a tsp</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 2,
        "text": "So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 200,
        "text_offset": 3,
        "word_length": 4,
        "text": "lets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 450,
        "text_offset": 8,
        "word_length": 7,
        "text": "imagine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9750000,
        "duration_milliseconds": 125,
        "text_offset": 16,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 225,
        "text_offset": 19,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13750000,
        "duration_milliseconds": 187,
        "text_offset": 24,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 325,
        "text_offset": 30,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19375000,
        "duration_milliseconds": 125,
        "text_offset": 36,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 62,
        "text_offset": 39,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21750000,
        "duration_milliseconds": 737,
        "text_offset": 41,
        "word_length": 3,
        "text": "tsp",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "so-lets-imagine-we-have-these-nodes-as-a-tsp-4c148834.mp3",
    "final_audio": "so-lets-imagine-we-have-these-nodes-as-a-tsp-4c148834.mp3"
  },
  {
    "input_text": "and this is our approximated solution.",
    "input_data": {
      "input_text": "and this is our approximated solution.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">and this is our approximated solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">and this is our approximated solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 225,
        "text_offset": 4,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 162,
        "text_offset": 9,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 175,
        "text_offset": 12,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8625000,
        "duration_milliseconds": 787,
        "text_offset": 16,
        "word_length": 12,
        "text": "approximated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 600,
        "text_offset": 29,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22875000,
        "duration_milliseconds": 100,
        "text_offset": 37,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "and-this-is-our-approximated-solution-3ffadfe9.mp3",
    "final_audio": "and-this-is-our-approximated-solution-3ffadfe9.mp3"
  },
  {
    "input_text": "We take a look at all the weights and sum them up.",
    "input_data": {
      "input_text": "We take a look at all the weights and sum them up.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We take a look at all the weights and sum them up.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We take a look at all the weights and sum them up.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 200,
        "text_offset": 3,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 62,
        "text_offset": 8,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 237,
        "text_offset": 10,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7875000,
        "duration_milliseconds": 87,
        "text_offset": 15,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9000000,
        "duration_milliseconds": 150,
        "text_offset": 18,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10750000,
        "duration_milliseconds": 100,
        "text_offset": 22,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 312,
        "text_offset": 26,
        "word_length": 7,
        "text": "weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15125000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16500000,
        "duration_milliseconds": 200,
        "text_offset": 38,
        "word_length": 3,
        "text": "sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 137,
        "text_offset": 42,
        "word_length": 4,
        "text": "them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 262,
        "text_offset": 47,
        "word_length": 2,
        "text": "up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 100,
        "text_offset": 49,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-take-a-look-at-all-the-weights-and-sum-them-up-ffb8b391.mp3",
    "final_audio": "we-take-a-look-at-all-the-weights-and-sum-them-up-ffb8b391.mp3"
  },
  {
    "input_text": "This is the value for our approximated solution.",
    "input_data": {
      "input_text": "This is the value for our approximated solution.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is the value for our approximated solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is the value for our approximated solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 137,
        "text_offset": 5,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 100,
        "text_offset": 8,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6250000,
        "duration_milliseconds": 400,
        "text_offset": 12,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 200,
        "text_offset": 18,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 137,
        "text_offset": 22,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 787,
        "text_offset": 26,
        "word_length": 12,
        "text": "approximated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 587,
        "text_offset": 39,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28375000,
        "duration_milliseconds": 100,
        "text_offset": 47,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-is-the-value-for-our-approximated-solution-a4b8d73a.mp3",
    "final_audio": "this-is-the-value-for-our-approximated-solution-a4b8d73a.mp3"
  },
  {
    "input_text": "But now we still don't now how good this is compared to the optimum.",
    "input_data": {
      "input_text": "But now we still don't now how good this is compared to the optimum.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">But now we still don't now how good this is compared to the optimum.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">But now we still don't now how good this is compared to the optimum.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 150,
        "text_offset": 4,
        "word_length": 3,
        "text": "now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 137,
        "text_offset": 8,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5750000,
        "duration_milliseconds": 262,
        "text_offset": 11,
        "word_length": 5,
        "text": "still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 187,
        "text_offset": 17,
        "word_length": 5,
        "text": "don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 162,
        "text_offset": 23,
        "word_length": 3,
        "text": "now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 187,
        "text_offset": 27,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 225,
        "text_offset": 31,
        "word_length": 4,
        "text": "good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16875000,
        "duration_milliseconds": 175,
        "text_offset": 36,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 125,
        "text_offset": 41,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20125000,
        "duration_milliseconds": 412,
        "text_offset": 44,
        "word_length": 8,
        "text": "compared",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24375000,
        "duration_milliseconds": 75,
        "text_offset": 53,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25375000,
        "duration_milliseconds": 112,
        "text_offset": 56,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26750000,
        "duration_milliseconds": 487,
        "text_offset": 60,
        "word_length": 7,
        "text": "optimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 100,
        "text_offset": 67,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "but-now-we-still-don-t-now-how-good-this-is-6d2d6ffe.mp3",
    "final_audio": "but-now-we-still-don-t-now-how-good-this-is-6d2d6ffe.mp3"
  },
  {
    "input_text": "For this we use the lower bound.",
    "input_data": {
      "input_text": "For this we use the lower bound.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For this we use the lower bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For this we use the lower bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 212,
        "text_offset": 4,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5125000,
        "duration_milliseconds": 125,
        "text_offset": 9,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 262,
        "text_offset": 12,
        "word_length": 3,
        "text": "use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 112,
        "text_offset": 16,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 312,
        "text_offset": 20,
        "word_length": 5,
        "text": "lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 475,
        "text_offset": 26,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19250000,
        "duration_milliseconds": 100,
        "text_offset": 31,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-this-we-use-the-lower-bound-448c5c17.mp3",
    "final_audio": "for-this-we-use-the-lower-bound-448c5c17.mp3"
  },
  {
    "input_text": "The lower bound is the value of the sum of every weight of every edge in a minimum spanning tree.",
    "input_data": {
      "input_text": "The lower bound is the value of the sum of every weight of every edge in a minimum spanning tree.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The lower bound is the value of the sum of every weight of every edge in a minimum spanning tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The lower bound is the value of the sum of every weight of every edge in a minimum spanning tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 300,
        "text_offset": 4,
        "word_length": 5,
        "text": "lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 337,
        "text_offset": 10,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 112,
        "text_offset": 16,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 100,
        "text_offset": 19,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 375,
        "text_offset": 23,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15500000,
        "duration_milliseconds": 87,
        "text_offset": 29,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16625000,
        "duration_milliseconds": 100,
        "text_offset": 32,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17875000,
        "duration_milliseconds": 200,
        "text_offset": 36,
        "word_length": 3,
        "text": "sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "duration_milliseconds": 100,
        "text_offset": 40,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 237,
        "text_offset": 43,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 212,
        "text_offset": 49,
        "word_length": 6,
        "text": "weight",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26125000,
        "duration_milliseconds": 87,
        "text_offset": 56,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 250,
        "text_offset": 59,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29875000,
        "duration_milliseconds": 225,
        "text_offset": 65,
        "word_length": 4,
        "text": "edge",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32375000,
        "duration_milliseconds": 100,
        "text_offset": 70,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 50,
        "text_offset": 73,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34375000,
        "duration_milliseconds": 375,
        "text_offset": 75,
        "word_length": 7,
        "text": "minimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38375000,
        "duration_milliseconds": 375,
        "text_offset": 83,
        "word_length": 8,
        "text": "spanning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42250000,
        "duration_milliseconds": 337,
        "text_offset": 92,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 100,
        "text_offset": 96,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-lower-bound-is-the-value-of-the-sum-of-every-9d214c4c.mp3",
    "final_audio": "the-lower-bound-is-the-value-of-the-sum-of-every-9d214c4c.mp3"
  },
  {
    "input_text": "So imagine we have these nodes from before.",
    "input_data": {
      "input_text": "So imagine we have these nodes from before.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">So imagine we have these nodes from before.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">So imagine we have these nodes from before.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 250,
        "text_offset": 0,
        "word_length": 2,
        "text": "So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 450,
        "text_offset": 3,
        "word_length": 7,
        "text": "imagine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 125,
        "text_offset": 11,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 212,
        "text_offset": 14,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 187,
        "text_offset": 19,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14000000,
        "duration_milliseconds": 287,
        "text_offset": 25,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17125000,
        "duration_milliseconds": 175,
        "text_offset": 31,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19000000,
        "duration_milliseconds": 562,
        "text_offset": 36,
        "word_length": 6,
        "text": "before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24875000,
        "duration_milliseconds": 100,
        "text_offset": 42,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "so-imagine-we-have-these-nodes-from-before-9c6df581.mp3",
    "final_audio": "so-imagine-we-have-these-nodes-from-before-9c6df581.mp3"
  },
  {
    "input_text": "We add the edges and their weights to the nodes so we get our minimal spanning tree.",
    "input_data": {
      "input_text": "We add the edges and their weights to the nodes so we get our minimal spanning tree.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We add the edges and their weights to the nodes so we get our minimal spanning tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We add the edges and their weights to the nodes so we get our minimal spanning tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 200,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2750000,
        "duration_milliseconds": 175,
        "text_offset": 3,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 100,
        "text_offset": 7,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 387,
        "text_offset": 11,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 87,
        "text_offset": 17,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 150,
        "text_offset": 21,
        "word_length": 5,
        "text": "their",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "duration_milliseconds": 237,
        "text_offset": 27,
        "word_length": 7,
        "text": "weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15500000,
        "duration_milliseconds": 87,
        "text_offset": 35,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16625000,
        "duration_milliseconds": 100,
        "text_offset": 38,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17750000,
        "duration_milliseconds": 325,
        "text_offset": 42,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 112,
        "text_offset": 48,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 125,
        "text_offset": 51,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24000000,
        "duration_milliseconds": 187,
        "text_offset": 54,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26125000,
        "duration_milliseconds": 112,
        "text_offset": 58,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27375000,
        "duration_milliseconds": 362,
        "text_offset": 62,
        "word_length": 7,
        "text": "minimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31250000,
        "duration_milliseconds": 400,
        "text_offset": 70,
        "word_length": 8,
        "text": "spanning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35500000,
        "duration_milliseconds": 337,
        "text_offset": 79,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39125000,
        "duration_milliseconds": 100,
        "text_offset": 83,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-add-the-edges-and-their-weights-to-the-nodes-so-9d3190d6.mp3",
    "final_audio": "we-add-the-edges-and-their-weights-to-the-nodes-so-9d3190d6.mp3"
  },
  {
    "input_text": "We take again a look at all the weights and sum them up.",
    "input_data": {
      "input_text": "We take again a look at all the weights and sum them up.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We take again a look at all the weights and sum them up.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We take again a look at all the weights and sum them up.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 200,
        "text_offset": 3,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 275,
        "text_offset": 8,
        "word_length": 5,
        "text": "again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 62,
        "text_offset": 14,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 212,
        "text_offset": 16,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 87,
        "text_offset": 21,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 137,
        "text_offset": 24,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 100,
        "text_offset": 28,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 312,
        "text_offset": 32,
        "word_length": 7,
        "text": "weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "duration_milliseconds": 112,
        "text_offset": 40,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19375000,
        "duration_milliseconds": 200,
        "text_offset": 44,
        "word_length": 3,
        "text": "sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 137,
        "text_offset": 48,
        "word_length": 4,
        "text": "them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 262,
        "text_offset": 53,
        "word_length": 2,
        "text": "up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 100,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-take-again-a-look-at-all-the-weights-and-sum-a227a4b0.mp3",
    "final_audio": "we-take-again-a-look-at-all-the-weights-and-sum-a227a4b0.mp3"
  },
  {
    "input_text": "This is the value of our lower bound.",
    "input_data": {
      "input_text": "This is the value of our lower bound.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is the value of our lower bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is the value of our lower bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 125,
        "text_offset": 5,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 100,
        "text_offset": 8,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 425,
        "text_offset": 12,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 112,
        "text_offset": 18,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 150,
        "text_offset": 21,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 325,
        "text_offset": 25,
        "word_length": 5,
        "text": "lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17125000,
        "duration_milliseconds": 462,
        "text_offset": 31,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22000000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-is-the-value-of-our-lower-bound-c74de0d4.mp3",
    "final_audio": "this-is-the-value-of-our-lower-bound-c74de0d4.mp3"
  },
  {
    "input_text": "Now we have a value which we can compare to our approximated solution and we know how good it is!",
    "input_data": {
      "input_text": "Now we have a value which we can compare to our approximated solution and we know how good it is!",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we have a value which we can compare to our approximated solution and we know how good it is!</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we have a value which we can compare to our approximated solution and we know how good it is!</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4375000,
        "duration_milliseconds": 150,
        "text_offset": 7,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 62,
        "text_offset": 12,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 387,
        "text_offset": 14,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 175,
        "text_offset": 20,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 125,
        "text_offset": 26,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 150,
        "text_offset": 29,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 375,
        "text_offset": 33,
        "word_length": 7,
        "text": "compare",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20125000,
        "duration_milliseconds": 125,
        "text_offset": 41,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 137,
        "text_offset": 44,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 700,
        "text_offset": 48,
        "word_length": 12,
        "text": "approximated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30375000,
        "duration_milliseconds": 450,
        "text_offset": 61,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35125000,
        "duration_milliseconds": 100,
        "text_offset": 70,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36375000,
        "duration_milliseconds": 112,
        "text_offset": 74,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 162,
        "text_offset": 77,
        "word_length": 4,
        "text": "know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 162,
        "text_offset": 82,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41375000,
        "duration_milliseconds": 162,
        "text_offset": 86,
        "word_length": 4,
        "text": "good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43250000,
        "duration_milliseconds": 87,
        "text_offset": 91,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44375000,
        "duration_milliseconds": 325,
        "text_offset": 94,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47875000,
        "duration_milliseconds": 100,
        "text_offset": 96,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-have-a-value-which-we-can-compare-to-our-c93ccf40.mp3",
    "final_audio": "now-we-have-a-value-which-we-can-compare-to-our-c93ccf40.mp3"
  },
  {
    "input_text": "Now we go on with the next topic",
    "input_data": {
      "input_text": "Now we go on with the next topic",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we go on with the next topic</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we go on with the next topic</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 137,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 250,
        "text_offset": 7,
        "word_length": 2,
        "text": "go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 125,
        "text_offset": 13,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 87,
        "text_offset": 18,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 250,
        "text_offset": 22,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 437,
        "text_offset": 27,
        "word_length": 5,
        "text": "topic",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "now-we-go-on-with-the-next-topic-a0c0909b.mp3",
    "final_audio": "now-we-go-on-with-the-next-topic-a0c0909b.mp3"
  },
  {
    "input_text": "To solve TSP, we have two primary approaches: the Optimal and the Approximation methods.",
    "input_data": {
      "input_text": "To solve TSP, we have two primary approaches: the Optimal and the Approximation methods.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">To solve TSP, we have two primary approaches: the Optimal and the Approximation methods.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">To solve TSP, we have two primary approaches: the Optimal and the Approximation methods.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 125,
        "text_offset": 0,
        "word_length": 2,
        "text": "To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "duration_milliseconds": 300,
        "text_offset": 3,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 600,
        "text_offset": 9,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 100,
        "text_offset": 12,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 100,
        "text_offset": 14,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 150,
        "text_offset": 17,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16250000,
        "duration_milliseconds": 187,
        "text_offset": 22,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18375000,
        "duration_milliseconds": 512,
        "text_offset": 26,
        "word_length": 7,
        "text": "primary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 562,
        "text_offset": 34,
        "word_length": 10,
        "text": "approaches",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 100,
        "text_offset": 44,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 112,
        "text_offset": 46,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 437,
        "text_offset": 50,
        "word_length": 7,
        "text": "Optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 75,
        "text_offset": 58,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38375000,
        "duration_milliseconds": 100,
        "text_offset": 62,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 775,
        "text_offset": 66,
        "word_length": 13,
        "text": "Approximation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47375000,
        "duration_milliseconds": 462,
        "text_offset": 80,
        "word_length": 7,
        "text": "methods",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52125000,
        "duration_milliseconds": 100,
        "text_offset": 87,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "to-solve-tsp-we-have-two-primary-approaches-the-8f4d7a7e.mp3",
    "final_audio": "to-solve-tsp-we-have-two-primary-approaches-the-8f4d7a7e.mp3"
  },
  {
    "input_text": "In the Optimal category, we have two prominent algorithms: Brute Force and Branch and Bound.",
    "input_data": {
      "input_text": "In the Optimal category, we have two prominent algorithms: Brute Force and Branch and Bound.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">In the Optimal category, we have two prominent algorithms: Brute Force and Branch and Bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">In the Optimal category, we have two prominent algorithms: Brute Force and Branch and Bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3625000,
        "duration_milliseconds": 412,
        "text_offset": 7,
        "word_length": 7,
        "text": "Optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 550,
        "text_offset": 15,
        "word_length": 8,
        "text": "category",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 125,
        "text_offset": 23,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 15625000,
        "duration_milliseconds": 100,
        "text_offset": 25,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 150,
        "text_offset": 28,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 187,
        "text_offset": 33,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 450,
        "text_offset": 37,
        "word_length": 9,
        "text": "prominent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25375000,
        "duration_milliseconds": 662,
        "text_offset": 47,
        "word_length": 10,
        "text": "algorithms",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 150,
        "text_offset": 57,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 34500000,
        "duration_milliseconds": 225,
        "text_offset": 59,
        "word_length": 5,
        "text": "Brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 325,
        "text_offset": 65,
        "word_length": 5,
        "text": "Force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40375000,
        "duration_milliseconds": 112,
        "text_offset": 71,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41750000,
        "duration_milliseconds": 350,
        "text_offset": 75,
        "word_length": 6,
        "text": "Branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45375000,
        "duration_milliseconds": 100,
        "text_offset": 82,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46625000,
        "duration_milliseconds": 450,
        "text_offset": 86,
        "word_length": 5,
        "text": "Bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51375000,
        "duration_milliseconds": 100,
        "text_offset": 91,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "in-the-optimal-category-we-have-two-prominent-2ecc4a51.mp3",
    "final_audio": "in-the-optimal-category-we-have-two-prominent-2ecc4a51.mp3"
  },
  {
    "input_text": "Moving on to the Approximation approach, we'll explain the algorithms k nearest neighbors (kNN) and Christofides. But let's start with the optimal solutions first.",
    "input_data": {
      "input_text": "Moving on to the Approximation approach, we'll explain the algorithms k nearest neighbors (kNN) and Christofides. But let's start with the optimal solutions first.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Moving on to the Approximation approach, we'll explain the algorithms k nearest neighbors (kNN) and Christofides. But let's start with the optimal solutions first.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Moving on to the Approximation approach, we'll explain the algorithms k nearest neighbors (kNN) and Christofides. But let's start with the optimal solutions first.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 350,
        "text_offset": 0,
        "word_length": 6,
        "text": "Moving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 100,
        "text_offset": 7,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5500000,
        "duration_milliseconds": 87,
        "text_offset": 10,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7875000,
        "duration_milliseconds": 762,
        "text_offset": 17,
        "word_length": 13,
        "text": "Approximation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 412,
        "text_offset": 31,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 137,
        "text_offset": 39,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 137,
        "text_offset": 41,
        "word_length": 5,
        "text": "we'll",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 387,
        "text_offset": 47,
        "word_length": 7,
        "text": "explain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28000000,
        "duration_milliseconds": 112,
        "text_offset": 55,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 600,
        "text_offset": 59,
        "word_length": 10,
        "text": "algorithms",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35625000,
        "duration_milliseconds": 200,
        "text_offset": 70,
        "word_length": 1,
        "text": "k",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 337,
        "text_offset": 72,
        "word_length": 7,
        "text": "nearest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41250000,
        "duration_milliseconds": 425,
        "text_offset": 80,
        "word_length": 9,
        "text": "neighbors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46375000,
        "duration_milliseconds": 12,
        "text_offset": 90,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 512,
        "text_offset": 91,
        "word_length": 3,
        "text": "kNN",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52875000,
        "duration_milliseconds": 62,
        "text_offset": 94,
        "word_length": 1,
        "text": ")",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 53500000,
        "duration_milliseconds": 112,
        "text_offset": 96,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54875000,
        "duration_milliseconds": 862,
        "text_offset": 100,
        "word_length": 12,
        "text": "Christofides",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63750000,
        "duration_milliseconds": 100,
        "text_offset": 112,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 72375000,
        "duration_milliseconds": 175,
        "text_offset": 114,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74375000,
        "duration_milliseconds": 212,
        "text_offset": 118,
        "word_length": 5,
        "text": "let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76625000,
        "duration_milliseconds": 312,
        "text_offset": 124,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "duration_milliseconds": 125,
        "text_offset": 130,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81500000,
        "duration_milliseconds": 100,
        "text_offset": 135,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82750000,
        "duration_milliseconds": 425,
        "text_offset": 139,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87250000,
        "duration_milliseconds": 525,
        "text_offset": 147,
        "word_length": 9,
        "text": "solutions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92750000,
        "duration_milliseconds": 500,
        "text_offset": 157,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "duration_milliseconds": 100,
        "text_offset": 162,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "moving-on-to-the-approximation-approach-we-ll-185a1c28.mp3",
    "final_audio": "moving-on-to-the-approximation-approach-we-ll-185a1c28.mp3"
  },
  {
    "input_text": "The Brute Force method is a straightforward but time-consuming approach to solve the TSP. It involves trying out all possible orders in which the cities can be visited.",
    "input_data": {
      "input_text": "The Brute Force method is a straightforward but time-consuming approach to solve the TSP. It involves trying out all possible orders in which the cities can be visited.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solve the TSP. It involves trying out all possible orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solve the TSP. It involves trying out all possible orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "duration_milliseconds": 225,
        "text_offset": 4,
        "word_length": 5,
        "text": "Brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 262,
        "text_offset": 10,
        "word_length": 5,
        "text": "Force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 325,
        "text_offset": 16,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 100,
        "text_offset": 23,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12125000,
        "duration_milliseconds": 62,
        "text_offset": 26,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 725,
        "text_offset": 28,
        "word_length": 15,
        "text": "straightforward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 150,
        "text_offset": 44,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 712,
        "text_offset": 48,
        "word_length": 14,
        "text": "time-consuming",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29500000,
        "duration_milliseconds": 387,
        "text_offset": 63,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 100,
        "text_offset": 72,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 325,
        "text_offset": 75,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38250000,
        "duration_milliseconds": 100,
        "text_offset": 81,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39375000,
        "duration_milliseconds": 712,
        "text_offset": 85,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 100,
        "text_offset": 88,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 55375000,
        "duration_milliseconds": 162,
        "text_offset": 90,
        "word_length": 2,
        "text": "It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57250000,
        "duration_milliseconds": 400,
        "text_offset": 93,
        "word_length": 8,
        "text": "involves",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61500000,
        "duration_milliseconds": 300,
        "text_offset": 102,
        "word_length": 6,
        "text": "trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64750000,
        "duration_milliseconds": 162,
        "text_offset": 109,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66625000,
        "duration_milliseconds": 200,
        "text_offset": 113,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 512,
        "text_offset": 117,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74125000,
        "duration_milliseconds": 350,
        "text_offset": 126,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77875000,
        "duration_milliseconds": 112,
        "text_offset": 133,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79250000,
        "duration_milliseconds": 200,
        "text_offset": 136,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81375000,
        "duration_milliseconds": 112,
        "text_offset": 142,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82625000,
        "duration_milliseconds": 375,
        "text_offset": 146,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86625000,
        "duration_milliseconds": 137,
        "text_offset": 153,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88125000,
        "duration_milliseconds": 112,
        "text_offset": 157,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89500000,
        "duration_milliseconds": 500,
        "text_offset": 160,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94625000,
        "duration_milliseconds": 100,
        "text_offset": 167,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-brute-force-method-is-a-straightforward-but-ff1ee3a1.mp3",
    "final_audio": "the-brute-force-method-is-a-straightforward-but-ff1ee3a1.mp3"
  },
  {
    "input_text": "As the first step in our Brute-Force algorithm, we generate all possible permutations of the cities. This means creating every possible order in which the cities can be visited.",
    "input_data": {
      "input_text": "As the first step in our Brute-Force algorithm, we generate all possible permutations of the cities. This means creating every possible order in which the cities can be visited.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As the first step in our Brute-Force algorithm, we generate all possible permutations of the cities. This means creating every possible order in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As the first step in our Brute-Force algorithm, we generate all possible permutations of the cities. This means creating every possible order in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 275,
        "text_offset": 7,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 237,
        "text_offset": 13,
        "word_length": 4,
        "text": "step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9750000,
        "duration_milliseconds": 100,
        "text_offset": 18,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 125,
        "text_offset": 21,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 487,
        "text_offset": 25,
        "word_length": 11,
        "text": "Brute-Force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 625,
        "text_offset": 37,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24750000,
        "duration_milliseconds": 162,
        "text_offset": 46,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 112,
        "text_offset": 48,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 462,
        "text_offset": 51,
        "word_length": 8,
        "text": "generate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32500000,
        "duration_milliseconds": 250,
        "text_offset": 60,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35125000,
        "duration_milliseconds": 500,
        "text_offset": 64,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40375000,
        "duration_milliseconds": 800,
        "text_offset": 73,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 62,
        "text_offset": 86,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49500000,
        "duration_milliseconds": 100,
        "text_offset": 89,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50750000,
        "duration_milliseconds": 475,
        "text_offset": 93,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55750000,
        "duration_milliseconds": 100,
        "text_offset": 99,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 64250000,
        "duration_milliseconds": 250,
        "text_offset": 101,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "duration_milliseconds": 262,
        "text_offset": 106,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69875000,
        "duration_milliseconds": 512,
        "text_offset": 112,
        "word_length": 8,
        "text": "creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75125000,
        "duration_milliseconds": 237,
        "text_offset": 121,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77750000,
        "duration_milliseconds": 512,
        "text_offset": 127,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83125000,
        "duration_milliseconds": 300,
        "text_offset": 136,
        "word_length": 5,
        "text": "order",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86375000,
        "duration_milliseconds": 125,
        "text_offset": 142,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87875000,
        "duration_milliseconds": 212,
        "text_offset": 145,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90250000,
        "duration_milliseconds": 125,
        "text_offset": 151,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91625000,
        "duration_milliseconds": 387,
        "text_offset": 155,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95750000,
        "duration_milliseconds": 162,
        "text_offset": 162,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 112,
        "text_offset": 166,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98875000,
        "duration_milliseconds": 500,
        "text_offset": 169,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104125000,
        "duration_milliseconds": 100,
        "text_offset": 176,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "as-the-first-step-in-our-brute-force-algorithm-we-7d626424.mp3",
    "final_audio": "as-the-first-step-in-our-brute-force-algorithm-we-7d626424.mp3"
  },
  {
    "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
    "input_data": {
      "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 362,
        "text_offset": 0,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 162,
        "text_offset": 6,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 562,
        "text_offset": 15,
        "word_length": 9,
        "text": "generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 725,
        "text_offset": 25,
        "word_length": 11,
        "text": "permutation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24000000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 550,
        "text_offset": 41,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 112,
        "text_offset": 51,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 250,
        "text_offset": 55,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36250000,
        "duration_milliseconds": 87,
        "text_offset": 62,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 100,
        "text_offset": 65,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38625000,
        "duration_milliseconds": 312,
        "text_offset": 69,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "duration_milliseconds": 137,
        "text_offset": 74,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 362,
        "text_offset": 77,
        "word_length": 7,
        "text": "summing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 112,
        "text_offset": 85,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48750000,
        "duration_milliseconds": 562,
        "text_offset": 89,
        "word_length": 9,
        "text": "distances",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54625000,
        "duration_milliseconds": 337,
        "text_offset": 99,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58250000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59375000,
        "duration_milliseconds": 400,
        "text_offset": 111,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 487,
        "text_offset": 119,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "then-for-each-generated-permutation-we-calculate-e0cb741a.mp3",
    "final_audio": "then-for-each-generated-permutation-we-calculate-e0cb741a.mp3"
  },
  {
    "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours. This is the optimal solution to the Traveling Salesperson Problem.",
    "input_data": {
      "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours. This is the optimal solution to the Traveling Salesperson Problem.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours. This is the optimal solution to the Traveling Salesperson Problem.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours. This is the optimal solution to the Traveling Salesperson Problem.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 350,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 112,
        "text_offset": 5,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 150,
        "text_offset": 8,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 587,
        "text_offset": 16,
        "word_length": 8,
        "text": "Identify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 125,
        "text_offset": 25,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 312,
        "text_offset": 29,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "duration_milliseconds": 125,
        "text_offset": 34,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22500000,
        "duration_milliseconds": 87,
        "text_offset": 39,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23500000,
        "duration_milliseconds": 500,
        "text_offset": 43,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28750000,
        "duration_milliseconds": 262,
        "text_offset": 52,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31625000,
        "duration_milliseconds": 287,
        "text_offset": 59,
        "word_length": 5,
        "text": "among",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34750000,
        "duration_milliseconds": 137,
        "text_offset": 65,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36375000,
        "duration_milliseconds": 112,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 650,
        "text_offset": 73,
        "word_length": 10,
        "text": "calculated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "duration_milliseconds": 475,
        "text_offset": 84,
        "word_length": 5,
        "text": "tours",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49500000,
        "duration_milliseconds": 100,
        "text_offset": 89,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 58125000,
        "duration_milliseconds": 250,
        "text_offset": 91,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60875000,
        "duration_milliseconds": 112,
        "text_offset": 96,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62250000,
        "duration_milliseconds": 125,
        "text_offset": 99,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63750000,
        "duration_milliseconds": 437,
        "text_offset": 103,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68375000,
        "duration_milliseconds": 475,
        "text_offset": 111,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73375000,
        "duration_milliseconds": 87,
        "text_offset": 120,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74375000,
        "duration_milliseconds": 112,
        "text_offset": 123,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75750000,
        "duration_milliseconds": 412,
        "text_offset": 127,
        "word_length": 9,
        "text": "Traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80125000,
        "duration_milliseconds": 712,
        "text_offset": 137,
        "word_length": 11,
        "text": "Salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87500000,
        "duration_milliseconds": 475,
        "text_offset": 149,
        "word_length": 7,
        "text": "Problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92375000,
        "duration_milliseconds": 100,
        "text_offset": 156,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-need-to-identify-the-tour-with-the-shortest-ca60383f.mp3",
    "final_audio": "now-we-need-to-identify-the-tour-with-the-shortest-ca60383f.mp3"
  },
  {
    "input_text": "We can calculate the number of possible paths as the number of possible permutations of n elements when each permutation is counted as a separate operation",
    "input_data": {
      "input_text": "We can calculate the number of possible paths as the number of possible permutations of n elements when each permutation is counted as a separate operation",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We can calculate the number of possible paths as the number of possible permutations of n elements when each permutation is counted as a separate operation</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We can calculate the number of possible paths as the number of possible permutations of n elements when each permutation is counted as a separate operation</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 162,
        "text_offset": 3,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 562,
        "text_offset": 7,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 100,
        "text_offset": 17,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 325,
        "text_offset": 21,
        "word_length": 6,
        "text": "number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 100,
        "text_offset": 28,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16000000,
        "duration_milliseconds": 500,
        "text_offset": 31,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 400,
        "text_offset": 40,
        "word_length": 5,
        "text": "paths",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25500000,
        "duration_milliseconds": 137,
        "text_offset": 46,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27125000,
        "duration_milliseconds": 100,
        "text_offset": 49,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28375000,
        "duration_milliseconds": 325,
        "text_offset": 53,
        "word_length": 6,
        "text": "number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 100,
        "text_offset": 60,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 500,
        "text_offset": 63,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38250000,
        "duration_milliseconds": 787,
        "text_offset": 72,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 87,
        "text_offset": 85,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47375000,
        "duration_milliseconds": 137,
        "text_offset": 88,
        "word_length": 1,
        "text": "n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "duration_milliseconds": 425,
        "text_offset": 90,
        "word_length": 8,
        "text": "elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53500000,
        "duration_milliseconds": 162,
        "text_offset": 99,
        "word_length": 4,
        "text": "when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55375000,
        "duration_milliseconds": 175,
        "text_offset": 104,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57375000,
        "duration_milliseconds": 687,
        "text_offset": 109,
        "word_length": 11,
        "text": "permutation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64500000,
        "duration_milliseconds": 112,
        "text_offset": 121,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65875000,
        "duration_milliseconds": 375,
        "text_offset": 124,
        "word_length": 7,
        "text": "counted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69875000,
        "duration_milliseconds": 137,
        "text_offset": 132,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71500000,
        "duration_milliseconds": 62,
        "text_offset": 135,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72250000,
        "duration_milliseconds": 400,
        "text_offset": 137,
        "word_length": 8,
        "text": "separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76500000,
        "duration_milliseconds": 662,
        "text_offset": 146,
        "word_length": 9,
        "text": "operation",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "we-can-calculate-the-number-of-possible-paths-as-bfdc720d.mp3",
    "final_audio": "we-can-calculate-the-number-of-possible-paths-as-bfdc720d.mp3"
  },
  {
    "input_text": "For the example we've seen before we used 5 nodes, so we get 12 possible routes.",
    "input_data": {
      "input_text": "For the example we've seen before we used 5 nodes, so we get 12 possible routes.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For the example we've seen before we used 5 nodes, so we get 12 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For the example we've seen before we used 5 nodes, so we get 12 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 62,
        "text_offset": 4,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 525,
        "text_offset": 8,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8625000,
        "duration_milliseconds": 162,
        "text_offset": 16,
        "word_length": 5,
        "text": "we've",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 250,
        "text_offset": 22,
        "word_length": 4,
        "text": "seen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 325,
        "text_offset": 27,
        "word_length": 6,
        "text": "before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18125000,
        "duration_milliseconds": 212,
        "text_offset": 37,
        "word_length": 4,
        "text": "used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "duration_milliseconds": 262,
        "text_offset": 42,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23250000,
        "duration_milliseconds": 362,
        "text_offset": 44,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 137,
        "text_offset": 49,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 29125000,
        "duration_milliseconds": 100,
        "text_offset": 51,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 112,
        "text_offset": 54,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 175,
        "text_offset": 57,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33375000,
        "duration_milliseconds": 300,
        "text_offset": 61,
        "word_length": 2,
        "text": "12",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36625000,
        "duration_milliseconds": 475,
        "text_offset": 64,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41625000,
        "duration_milliseconds": 387,
        "text_offset": 73,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45625000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-the-example-we-ve-seen-before-we-used-5-nodes-b2fe434c.mp3",
    "final_audio": "for-the-example-we-ve-seen-before-we-used-5-nodes-b2fe434c.mp3"
  },
  {
    "input_text": "If we just increase the number of nodes by 1, we already get 60 possible routes.",
    "input_data": {
      "input_text": "If we just increase the number of nodes by 1, we already get 60 possible routes.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">If we just increase the number of nodes by 1, we already get 60 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">If we just increase the number of nodes by 1, we already get 60 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3875000,
        "duration_milliseconds": 237,
        "text_offset": 6,
        "word_length": 4,
        "text": "just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 375,
        "text_offset": 11,
        "word_length": 8,
        "text": "increase",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 100,
        "text_offset": 20,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11750000,
        "duration_milliseconds": 300,
        "text_offset": 24,
        "word_length": 6,
        "text": "number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 75,
        "text_offset": 31,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16000000,
        "duration_milliseconds": 262,
        "text_offset": 34,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 125,
        "text_offset": 40,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 312,
        "text_offset": 43,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24250000,
        "duration_milliseconds": 162,
        "text_offset": 44,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 112,
        "text_offset": 46,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 387,
        "text_offset": 49,
        "word_length": 7,
        "text": "already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 175,
        "text_offset": 57,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33375000,
        "duration_milliseconds": 412,
        "text_offset": 61,
        "word_length": 2,
        "text": "60",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37625000,
        "duration_milliseconds": 487,
        "text_offset": 64,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42750000,
        "duration_milliseconds": 387,
        "text_offset": 73,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "if-we-just-increase-the-number-of-nodes-by-1-we-0db7743e.mp3",
    "final_audio": "if-we-just-increase-the-number-of-nodes-by-1-we-0db7743e.mp3"
  },
  {
    "input_text": "For 10 nodes, it's already 181440 potential shortest paths!!",
    "input_data": {
      "input_text": "For 10 nodes, it's already 181440 potential shortest paths!!",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For 10 nodes, it's already 181440 potential shortest paths!!</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For 10 nodes, it's already 181440 potential shortest paths!!</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 212,
        "text_offset": 4,
        "word_length": 2,
        "text": "10",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 337,
        "text_offset": 7,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 75,
        "text_offset": 12,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 137,
        "text_offset": 14,
        "word_length": 4,
        "text": "it's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 362,
        "text_offset": 19,
        "word_length": 7,
        "text": "already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 537,
        "text_offset": 27,
        "word_length": 6,
        "text": "181440",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41000000,
        "duration_milliseconds": 500,
        "text_offset": 34,
        "word_length": 9,
        "text": "potential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 362,
        "text_offset": 44,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50125000,
        "duration_milliseconds": 475,
        "text_offset": 53,
        "word_length": 5,
        "text": "paths",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 100,
        "text_offset": 58,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-10-nodes-it-s-already-181440-potential-0eb159b8.mp3",
    "final_audio": "for-10-nodes-it-s-already-181440-potential-0eb159b8.mp3"
  },
  {
    "input_text": "This is because we got an exponential time complexity.",
    "input_data": {
      "input_text": "This is because we got an exponential time complexity.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is because we got an exponential time complexity.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is because we got an exponential time complexity.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 137,
        "text_offset": 5,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 325,
        "text_offset": 8,
        "word_length": 7,
        "text": "because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 112,
        "text_offset": 16,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9625000,
        "duration_milliseconds": 212,
        "text_offset": 19,
        "word_length": 3,
        "text": "got",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 112,
        "text_offset": 23,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 712,
        "text_offset": 26,
        "word_length": 11,
        "text": "exponential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 262,
        "text_offset": 38,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23375000,
        "duration_milliseconds": 812,
        "text_offset": 43,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31625000,
        "duration_milliseconds": 100,
        "text_offset": 53,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-is-because-we-got-an-exponential-time-0e9cea1c.mp3",
    "final_audio": "this-is-because-we-got-an-exponential-time-0e9cea1c.mp3"
  },
  {
    "input_text": "Another way of solving the TSP is with the help of the branch and bound method. Let's start with a simple TSP example. Again we have a set of cities and need to find the shortest possible route visiting each city exactly once.",
    "input_data": {
      "input_text": "Another way of solving the TSP is with the help of the branch and bound method. Let's start with a simple TSP example. Again we have a set of cities and need to find the shortest possible route visiting each city exactly once.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Another way of solving the TSP is with the help of the branch and bound method. Let's start with a simple TSP example. Again we have a set of cities and need to find the shortest possible route visiting each city exactly once.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Another way of solving the TSP is with the help of the branch and bound method. Let's start with a simple TSP example. Again we have a set of cities and need to find the shortest possible route visiting each city exactly once.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 412,
        "text_offset": 0,
        "word_length": 7,
        "text": "Another",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 137,
        "text_offset": 8,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 100,
        "text_offset": 12,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7750000,
        "duration_milliseconds": 400,
        "text_offset": 15,
        "word_length": 7,
        "text": "solving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 100,
        "text_offset": 23,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 575,
        "text_offset": 27,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19000000,
        "duration_milliseconds": 125,
        "text_offset": 31,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "duration_milliseconds": 137,
        "text_offset": 34,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 100,
        "text_offset": 39,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23375000,
        "duration_milliseconds": 225,
        "text_offset": 43,
        "word_length": 4,
        "text": "help",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25750000,
        "duration_milliseconds": 87,
        "text_offset": 48,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26875000,
        "duration_milliseconds": 100,
        "text_offset": 51,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28125000,
        "duration_milliseconds": 350,
        "text_offset": 55,
        "word_length": 6,
        "text": "branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 100,
        "text_offset": 62,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 262,
        "text_offset": 66,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35750000,
        "duration_milliseconds": 425,
        "text_offset": 72,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40125000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 48750000,
        "duration_milliseconds": 262,
        "text_offset": 80,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51625000,
        "duration_milliseconds": 287,
        "text_offset": 86,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54750000,
        "duration_milliseconds": 137,
        "text_offset": 92,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56375000,
        "duration_milliseconds": 62,
        "text_offset": 97,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57125000,
        "duration_milliseconds": 387,
        "text_offset": 99,
        "word_length": 6,
        "text": "simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61250000,
        "duration_milliseconds": 562,
        "text_offset": 106,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67125000,
        "duration_milliseconds": 662,
        "text_offset": 110,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73875000,
        "duration_milliseconds": 100,
        "text_offset": 117,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 82500000,
        "duration_milliseconds": 412,
        "text_offset": 119,
        "word_length": 5,
        "text": "Again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86875000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88125000,
        "duration_milliseconds": 150,
        "text_offset": 128,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89750000,
        "duration_milliseconds": 62,
        "text_offset": 133,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90625000,
        "duration_milliseconds": 212,
        "text_offset": 135,
        "word_length": 3,
        "text": "set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93000000,
        "duration_milliseconds": 87,
        "text_offset": 139,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94125000,
        "duration_milliseconds": 375,
        "text_offset": 142,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98125000,
        "duration_milliseconds": 87,
        "text_offset": 149,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99250000,
        "duration_milliseconds": 150,
        "text_offset": 153,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100875000,
        "duration_milliseconds": 75,
        "text_offset": 158,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101875000,
        "duration_milliseconds": 250,
        "text_offset": 161,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104500000,
        "duration_milliseconds": 75,
        "text_offset": 166,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105375000,
        "duration_milliseconds": 437,
        "text_offset": 170,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109875000,
        "duration_milliseconds": 475,
        "text_offset": 179,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114875000,
        "duration_milliseconds": 187,
        "text_offset": 188,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116875000,
        "duration_milliseconds": 450,
        "text_offset": 194,
        "word_length": 8,
        "text": "visiting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121500000,
        "duration_milliseconds": 150,
        "text_offset": 203,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123250000,
        "duration_milliseconds": 287,
        "text_offset": 208,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126375000,
        "duration_milliseconds": 500,
        "text_offset": 213,
        "word_length": 7,
        "text": "exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131625000,
        "duration_milliseconds": 437,
        "text_offset": 221,
        "word_length": 4,
        "text": "once",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136125000,
        "duration_milliseconds": 100,
        "text_offset": 225,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "another-way-of-solving-the-tsp-is-with-the-help-of-da5ad669.mp3",
    "final_audio": "another-way-of-solving-the-tsp-is-with-the-help-of-da5ad669.mp3"
  },
  {
    "input_text": "The Branch-and-Bound method begins by constructing a tree of all possibilities. First we need a Graph. Let's use the same graph and start at node one.",
    "input_data": {
      "input_text": "The Branch-and-Bound method begins by constructing a tree of all possibilities. First we need a Graph. Let's use the same graph and start at node one.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Branch-and-Bound method begins by constructing a tree of all possibilities. First we need a Graph. Let's use the same graph and start at node one.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Branch-and-Bound method begins by constructing a tree of all possibilities. First we need a Graph. Let's use the same graph and start at node one.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 125,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1875000,
        "duration_milliseconds": 712,
        "text_offset": 4,
        "word_length": 16,
        "text": "Branch-and-Bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9250000,
        "duration_milliseconds": 287,
        "text_offset": 21,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 412,
        "text_offset": 28,
        "word_length": 6,
        "text": "begins",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 150,
        "text_offset": 35,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 662,
        "text_offset": 38,
        "word_length": 12,
        "text": "constructing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25375000,
        "duration_milliseconds": 50,
        "text_offset": 51,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 287,
        "text_offset": 53,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 100,
        "text_offset": 58,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 175,
        "text_offset": 61,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 862,
        "text_offset": 65,
        "word_length": 13,
        "text": "possibilities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41000000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 49500000,
        "duration_milliseconds": 412,
        "text_offset": 80,
        "word_length": 5,
        "text": "First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53875000,
        "duration_milliseconds": 112,
        "text_offset": 86,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55250000,
        "duration_milliseconds": 175,
        "text_offset": 89,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57250000,
        "duration_milliseconds": 62,
        "text_offset": 94,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58000000,
        "duration_milliseconds": 650,
        "text_offset": 96,
        "word_length": 5,
        "text": "Graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64750000,
        "duration_milliseconds": 100,
        "text_offset": 101,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 73375000,
        "duration_milliseconds": 287,
        "text_offset": 103,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76500000,
        "duration_milliseconds": 175,
        "text_offset": 109,
        "word_length": 3,
        "text": "use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78500000,
        "duration_milliseconds": 112,
        "text_offset": 113,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79750000,
        "duration_milliseconds": 275,
        "text_offset": 117,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82750000,
        "duration_milliseconds": 350,
        "text_offset": 122,
        "word_length": 5,
        "text": "graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86375000,
        "duration_milliseconds": 100,
        "text_offset": 128,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87625000,
        "duration_milliseconds": 312,
        "text_offset": 132,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91000000,
        "duration_milliseconds": 100,
        "text_offset": 138,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92125000,
        "duration_milliseconds": 212,
        "text_offset": 141,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94500000,
        "duration_milliseconds": 275,
        "text_offset": 146,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 100,
        "text_offset": 149,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-branch-and-bound-method-begins-by-constructing-0e9f9083.mp3",
    "final_audio": "the-branch-and-bound-method-begins-by-constructing-0e9f9083.mp3"
  },
  {
    "input_text": "Now we have to look at the next possible nodes. In this case we have four options. We can go to node 2, 3, 4 or 5.",
    "input_data": {
      "input_text": "Now we have to look at the next possible nodes. In this case we have four options. We can go to node 2, 3, 4 or 5.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we have to look at the next possible nodes. In this case we have four options. We can go to node 2, 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we have to look at the next possible nodes. In this case we have four options. We can go to node 2, 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 250,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 125,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 175,
        "text_offset": 7,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 100,
        "text_offset": 12,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7750000,
        "duration_milliseconds": 225,
        "text_offset": 15,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 75,
        "text_offset": 20,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 100,
        "text_offset": 23,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 275,
        "text_offset": 27,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 475,
        "text_offset": 32,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 437,
        "text_offset": 41,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25000000,
        "duration_milliseconds": 100,
        "text_offset": 46,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 187,
        "text_offset": 48,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35750000,
        "duration_milliseconds": 200,
        "text_offset": 51,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "duration_milliseconds": 275,
        "text_offset": 56,
        "word_length": 4,
        "text": "case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40875000,
        "duration_milliseconds": 137,
        "text_offset": 61,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42500000,
        "duration_milliseconds": 187,
        "text_offset": 64,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44625000,
        "duration_milliseconds": 300,
        "text_offset": 69,
        "word_length": 4,
        "text": "four",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47875000,
        "duration_milliseconds": 500,
        "text_offset": 74,
        "word_length": 7,
        "text": "options",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53125000,
        "duration_milliseconds": 100,
        "text_offset": 81,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 61750000,
        "duration_milliseconds": 162,
        "text_offset": 83,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63500000,
        "duration_milliseconds": 137,
        "text_offset": 86,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65125000,
        "duration_milliseconds": 125,
        "text_offset": 90,
        "word_length": 2,
        "text": "go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66500000,
        "duration_milliseconds": 87,
        "text_offset": 93,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67500000,
        "duration_milliseconds": 237,
        "text_offset": 96,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70125000,
        "duration_milliseconds": 262,
        "text_offset": 101,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73625000,
        "duration_milliseconds": 62,
        "text_offset": 102,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 74250000,
        "duration_milliseconds": 400,
        "text_offset": 104,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79125000,
        "duration_milliseconds": 75,
        "text_offset": 105,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 79875000,
        "duration_milliseconds": 362,
        "text_offset": 107,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84500000,
        "duration_milliseconds": 125,
        "text_offset": 109,
        "word_length": 2,
        "text": "or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86000000,
        "duration_milliseconds": 500,
        "text_offset": 112,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91250000,
        "duration_milliseconds": 100,
        "text_offset": 113,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-have-to-look-at-the-next-possible-nodes-in-8e8c1e2f.mp3",
    "final_audio": "now-we-have-to-look-at-the-next-possible-nodes-in-8e8c1e2f.mp3"
  },
  {
    "input_text": "At the same time we can tranform the graph on the right to a tree with node one as the root. This tree will show all the possible routes that the salesperson can use. As explained, starting with node one the next possible nodes could be node 2, 3, 4 or 5.",
    "input_data": {
      "input_text": "At the same time we can tranform the graph on the right to a tree with node one as the root. This tree will show all the possible routes that the salesperson can use. As explained, starting with node one the next possible nodes could be node 2, 3, 4 or 5.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">At the same time we can tranform the graph on the right to a tree with node one as the root. This tree will show all the possible routes that the salesperson can use. As explained, starting with node one the next possible nodes could be node 2, 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">At the same time we can tranform the graph on the right to a tree with node one as the root. This tree will show all the possible routes that the salesperson can use. As explained, starting with node one the next possible nodes could be node 2, 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 2,
        "text": "At",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3750000,
        "duration_milliseconds": 237,
        "text_offset": 7,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6375000,
        "duration_milliseconds": 262,
        "text_offset": 12,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 112,
        "text_offset": 17,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10375000,
        "duration_milliseconds": 125,
        "text_offset": 20,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 487,
        "text_offset": 24,
        "word_length": 8,
        "text": "tranform",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17000000,
        "duration_milliseconds": 100,
        "text_offset": 33,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18250000,
        "duration_milliseconds": 300,
        "text_offset": 37,
        "word_length": 5,
        "text": "graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21500000,
        "duration_milliseconds": 87,
        "text_offset": 43,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 87,
        "text_offset": 46,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 237,
        "text_offset": 50,
        "word_length": 5,
        "text": "right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26375000,
        "duration_milliseconds": 125,
        "text_offset": 56,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 62,
        "text_offset": 59,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 225,
        "text_offset": 61,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31000000,
        "duration_milliseconds": 162,
        "text_offset": 66,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32875000,
        "duration_milliseconds": 262,
        "text_offset": 71,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35750000,
        "duration_milliseconds": 175,
        "text_offset": 76,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 112,
        "text_offset": 80,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39125000,
        "duration_milliseconds": 87,
        "text_offset": 83,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40250000,
        "duration_milliseconds": 350,
        "text_offset": 87,
        "word_length": 4,
        "text": "root",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "duration_milliseconds": 100,
        "text_offset": 91,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 52625000,
        "duration_milliseconds": 237,
        "text_offset": 93,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55125000,
        "duration_milliseconds": 200,
        "text_offset": 98,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57250000,
        "duration_milliseconds": 137,
        "text_offset": 103,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58875000,
        "duration_milliseconds": 250,
        "text_offset": 108,
        "word_length": 4,
        "text": "show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61625000,
        "duration_milliseconds": 200,
        "text_offset": 113,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63750000,
        "duration_milliseconds": 125,
        "text_offset": 117,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65125000,
        "duration_milliseconds": 450,
        "text_offset": 121,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69875000,
        "duration_milliseconds": 275,
        "text_offset": 130,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72875000,
        "duration_milliseconds": 137,
        "text_offset": 137,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74500000,
        "duration_milliseconds": 100,
        "text_offset": 142,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75625000,
        "duration_milliseconds": 712,
        "text_offset": 146,
        "word_length": 11,
        "text": "salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83000000,
        "duration_milliseconds": 150,
        "text_offset": 158,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84750000,
        "duration_milliseconds": 437,
        "text_offset": 162,
        "word_length": 3,
        "text": "use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89375000,
        "duration_milliseconds": 100,
        "text_offset": 165,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 97875000,
        "duration_milliseconds": 200,
        "text_offset": 167,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100125000,
        "duration_milliseconds": 487,
        "text_offset": 170,
        "word_length": 9,
        "text": "explained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "duration_milliseconds": 112,
        "text_offset": 179,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 107125000,
        "duration_milliseconds": 375,
        "text_offset": 181,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111000000,
        "duration_milliseconds": 150,
        "text_offset": 190,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112750000,
        "duration_milliseconds": 225,
        "text_offset": 195,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115250000,
        "duration_milliseconds": 162,
        "text_offset": 200,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117125000,
        "duration_milliseconds": 75,
        "text_offset": 204,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "duration_milliseconds": 262,
        "text_offset": 208,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120875000,
        "duration_milliseconds": 450,
        "text_offset": 213,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125625000,
        "duration_milliseconds": 275,
        "text_offset": 222,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128500000,
        "duration_milliseconds": 137,
        "text_offset": 228,
        "word_length": 5,
        "text": "could",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130125000,
        "duration_milliseconds": 100,
        "text_offset": 234,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131375000,
        "duration_milliseconds": 225,
        "text_offset": 237,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133750000,
        "duration_milliseconds": 262,
        "text_offset": 242,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137375000,
        "duration_milliseconds": 62,
        "text_offset": 243,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 138125000,
        "duration_milliseconds": 425,
        "text_offset": 245,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143250000,
        "duration_milliseconds": 62,
        "text_offset": 246,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 143875000,
        "duration_milliseconds": 362,
        "text_offset": 248,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148500000,
        "duration_milliseconds": 100,
        "text_offset": 250,
        "word_length": 2,
        "text": "or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149750000,
        "duration_milliseconds": 475,
        "text_offset": 253,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154750000,
        "duration_milliseconds": 100,
        "text_offset": 254,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "at-the-same-time-we-can-tranform-the-graph-on-the-b00d1e3b.mp3",
    "final_audio": "at-the-same-time-we-can-tranform-the-graph-on-the-b00d1e3b.mp3"
  },
  {
    "input_text": "This would be the first version of the tree. Now we have to take a look at the next steps. Let's say we choose node 2 as the second node to travel to.",
    "input_data": {
      "input_text": "This would be the first version of the tree. Now we have to take a look at the next steps. Let's say we choose node 2 as the second node to travel to.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This would be the first version of the tree. Now we have to take a look at the next steps. Let's say we choose node 2 as the second node to travel to.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This would be the first version of the tree. Now we have to take a look at the next steps. Let's say we choose node 2 as the second node to travel to.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 262,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 150,
        "text_offset": 5,
        "word_length": 5,
        "text": "would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 112,
        "text_offset": 11,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6250000,
        "duration_milliseconds": 125,
        "text_offset": 14,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 350,
        "text_offset": 18,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 375,
        "text_offset": 24,
        "word_length": 7,
        "text": "version",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 87,
        "text_offset": 32,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16375000,
        "duration_milliseconds": 100,
        "text_offset": 35,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 437,
        "text_offset": 39,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 250,
        "text_offset": 45,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33250000,
        "duration_milliseconds": 137,
        "text_offset": 49,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 175,
        "text_offset": 52,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36875000,
        "duration_milliseconds": 87,
        "text_offset": 57,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37875000,
        "duration_milliseconds": 225,
        "text_offset": 60,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40250000,
        "duration_milliseconds": 62,
        "text_offset": 65,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41125000,
        "duration_milliseconds": 262,
        "text_offset": 67,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "duration_milliseconds": 75,
        "text_offset": 72,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "duration_milliseconds": 100,
        "text_offset": 75,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46125000,
        "duration_milliseconds": 250,
        "text_offset": 79,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48875000,
        "duration_milliseconds": 487,
        "text_offset": 84,
        "word_length": 5,
        "text": "steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53875000,
        "duration_milliseconds": 100,
        "text_offset": 89,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 62500000,
        "duration_milliseconds": 262,
        "text_offset": 91,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65250000,
        "duration_milliseconds": 137,
        "text_offset": 97,
        "word_length": 3,
        "text": "say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66875000,
        "duration_milliseconds": 112,
        "text_offset": 101,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68250000,
        "duration_milliseconds": 287,
        "text_offset": 104,
        "word_length": 6,
        "text": "choose",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71375000,
        "duration_milliseconds": 237,
        "text_offset": 111,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74000000,
        "duration_milliseconds": 250,
        "text_offset": 116,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76750000,
        "duration_milliseconds": 125,
        "text_offset": 118,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78250000,
        "duration_milliseconds": 112,
        "text_offset": 121,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79625000,
        "duration_milliseconds": 350,
        "text_offset": 125,
        "word_length": 6,
        "text": "second",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83375000,
        "duration_milliseconds": 162,
        "text_offset": 132,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85125000,
        "duration_milliseconds": 62,
        "text_offset": 137,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86000000,
        "duration_milliseconds": 387,
        "text_offset": 140,
        "word_length": 6,
        "text": "travel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90125000,
        "duration_milliseconds": 237,
        "text_offset": 147,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92625000,
        "duration_milliseconds": 112,
        "text_offset": 149,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-would-be-the-first-version-of-the-tree-now-we-934aba13.mp3",
    "final_audio": "this-would-be-the-first-version-of-the-tree-now-we-934aba13.mp3"
  },
  {
    "input_text": "Starting from node 2, the next options would be node 3, 4 or 5.",
    "input_data": {
      "input_text": "Starting from node 2, the next options would be node 3, 4 or 5.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Starting from node 2, the next options would be node 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Starting from node 2, the next options would be node 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 450,
        "text_offset": 0,
        "word_length": 8,
        "text": "Starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 162,
        "text_offset": 9,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 200,
        "text_offset": 14,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 225,
        "text_offset": 19,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 50,
        "text_offset": 20,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 87,
        "text_offset": 22,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 275,
        "text_offset": 26,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 337,
        "text_offset": 31,
        "word_length": 7,
        "text": "options",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 125,
        "text_offset": 39,
        "word_length": 5,
        "text": "would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 112,
        "text_offset": 45,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 200,
        "text_offset": 48,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25875000,
        "duration_milliseconds": 325,
        "text_offset": 53,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30000000,
        "duration_milliseconds": 87,
        "text_offset": 54,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 30875000,
        "duration_milliseconds": 400,
        "text_offset": 56,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35875000,
        "duration_milliseconds": 137,
        "text_offset": 58,
        "word_length": 2,
        "text": "or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37500000,
        "duration_milliseconds": 475,
        "text_offset": 61,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42500000,
        "duration_milliseconds": 100,
        "text_offset": 62,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "starting-from-node-2-the-next-options-would-be-78225796.mp3",
    "final_audio": "starting-from-node-2-the-next-options-would-be-78225796.mp3"
  },
  {
    "input_text": "Now we can create the next step at the tree. Again the next possible nodes to travel to would be node 3, 4 and 5.",
    "input_data": {
      "input_text": "Now we can create the next step at the tree. Again the next possible nodes to travel to would be node 3, 4 and 5.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we can create the next step at the tree. Again the next possible nodes to travel to would be node 3, 4 and 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we can create the next step at the tree. Again the next possible nodes to travel to would be node 3, 4 and 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 137,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5125000,
        "duration_milliseconds": 162,
        "text_offset": 7,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7000000,
        "duration_milliseconds": 337,
        "text_offset": 11,
        "word_length": 6,
        "text": "create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10625000,
        "duration_milliseconds": 100,
        "text_offset": 18,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11750000,
        "duration_milliseconds": 262,
        "text_offset": 22,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 275,
        "text_offset": 27,
        "word_length": 4,
        "text": "step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 75,
        "text_offset": 32,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18625000,
        "duration_milliseconds": 100,
        "text_offset": 35,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 412,
        "text_offset": 39,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24125000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 312,
        "text_offset": 45,
        "word_length": 5,
        "text": "Again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36125000,
        "duration_milliseconds": 75,
        "text_offset": 51,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 262,
        "text_offset": 55,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39875000,
        "duration_milliseconds": 450,
        "text_offset": 60,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44625000,
        "duration_milliseconds": 262,
        "text_offset": 69,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47375000,
        "duration_milliseconds": 87,
        "text_offset": 75,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48500000,
        "duration_milliseconds": 337,
        "text_offset": 78,
        "word_length": 6,
        "text": "travel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52125000,
        "duration_milliseconds": 87,
        "text_offset": 85,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53125000,
        "duration_milliseconds": 125,
        "text_offset": 88,
        "word_length": 5,
        "text": "would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54625000,
        "duration_milliseconds": 112,
        "text_offset": 94,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 225,
        "text_offset": 97,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58500000,
        "duration_milliseconds": 337,
        "text_offset": 102,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62750000,
        "duration_milliseconds": 75,
        "text_offset": 103,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 63500000,
        "duration_milliseconds": 337,
        "text_offset": 105,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69125000,
        "duration_milliseconds": 487,
        "text_offset": 111,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74250000,
        "duration_milliseconds": 100,
        "text_offset": 112,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-can-create-the-next-step-at-the-tree-again-38548e14.mp3",
    "final_audio": "now-we-can-create-the-next-step-at-the-tree-again-38548e14.mp3"
  },
  {
    "input_text": "Let's continue creating one possible route. We decide to travel to node 5 as our next city.",
    "input_data": {
      "input_text": "Let's continue creating one possible route. We decide to travel to node 5 as our next city.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's continue creating one possible route. We decide to travel to node 5 as our next city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's continue creating one possible route. We decide to travel to node 5 as our next city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 250,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 500,
        "text_offset": 6,
        "word_length": 8,
        "text": "continue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 462,
        "text_offset": 15,
        "word_length": 8,
        "text": "creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 212,
        "text_offset": 24,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15500000,
        "duration_milliseconds": 500,
        "text_offset": 28,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 337,
        "text_offset": 37,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24375000,
        "duration_milliseconds": 100,
        "text_offset": 42,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 162,
        "text_offset": 44,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34750000,
        "duration_milliseconds": 387,
        "text_offset": 47,
        "word_length": 6,
        "text": "decide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38875000,
        "duration_milliseconds": 75,
        "text_offset": 54,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39875000,
        "duration_milliseconds": 375,
        "text_offset": 57,
        "word_length": 6,
        "text": "travel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43875000,
        "duration_milliseconds": 87,
        "text_offset": 64,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44875000,
        "duration_milliseconds": 237,
        "text_offset": 67,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 387,
        "text_offset": 72,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51625000,
        "duration_milliseconds": 112,
        "text_offset": 74,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53000000,
        "duration_milliseconds": 112,
        "text_offset": 77,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54375000,
        "duration_milliseconds": 250,
        "text_offset": 81,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57000000,
        "duration_milliseconds": 375,
        "text_offset": 86,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "duration_milliseconds": 100,
        "text_offset": 90,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-continue-creating-one-possible-route-we-4250b805.mp3",
    "final_audio": "let-s-continue-creating-one-possible-route-we-4250b805.mp3"
  },
  {
    "input_text": "Starting from node 5, there are two cities left that have not been visited yet. Node 3 and 4.",
    "input_data": {
      "input_text": "Starting from node 5, there are two cities left that have not been visited yet. Node 3 and 4.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Starting from node 5, there are two cities left that have not been visited yet. Node 3 and 4.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Starting from node 5, there are two cities left that have not been visited yet. Node 3 and 4.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 462,
        "text_offset": 0,
        "word_length": 8,
        "text": "Starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 162,
        "text_offset": 9,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 200,
        "text_offset": 14,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 375,
        "text_offset": 19,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 100,
        "text_offset": 20,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 162,
        "text_offset": 22,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17000000,
        "duration_milliseconds": 112,
        "text_offset": 28,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18250000,
        "duration_milliseconds": 212,
        "text_offset": 32,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 387,
        "text_offset": 36,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24750000,
        "duration_milliseconds": 275,
        "text_offset": 43,
        "word_length": 4,
        "text": "left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 100,
        "text_offset": 48,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 137,
        "text_offset": 53,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30500000,
        "duration_milliseconds": 237,
        "text_offset": 58,
        "word_length": 3,
        "text": "not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 150,
        "text_offset": 62,
        "word_length": 4,
        "text": "been",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34750000,
        "duration_milliseconds": 425,
        "text_offset": 67,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39250000,
        "duration_milliseconds": 300,
        "text_offset": 75,
        "word_length": 3,
        "text": "yet",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 337,
        "text_offset": 80,
        "word_length": 4,
        "text": "Node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54500000,
        "duration_milliseconds": 275,
        "text_offset": 85,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57500000,
        "duration_milliseconds": 100,
        "text_offset": 87,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58625000,
        "duration_milliseconds": 500,
        "text_offset": 91,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63875000,
        "duration_milliseconds": 100,
        "text_offset": 92,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "starting-from-node-5-there-are-two-cities-left-c58b3488.mp3",
    "final_audio": "starting-from-node-5-there-are-two-cities-left-c58b3488.mp3"
  },
  {
    "input_text": "Let's go back to the tree and add the last two options, node 3 and 4",
    "input_data": {
      "input_text": "Let's go back to the tree and add the last two options, node 3 and 4",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's go back to the tree and add the last two options, node 3 and 4</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's go back to the tree and add the last two options, node 3 and 4</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 112,
        "text_offset": 6,
        "word_length": 2,
        "text": "go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 212,
        "text_offset": 9,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6375000,
        "duration_milliseconds": 87,
        "text_offset": 14,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 112,
        "text_offset": 17,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 237,
        "text_offset": 21,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11375000,
        "duration_milliseconds": 87,
        "text_offset": 26,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 162,
        "text_offset": 30,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 87,
        "text_offset": 34,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 262,
        "text_offset": 38,
        "word_length": 4,
        "text": "last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18250000,
        "duration_milliseconds": 175,
        "text_offset": 43,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 412,
        "text_offset": 47,
        "word_length": 7,
        "text": "options",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25250000,
        "duration_milliseconds": 137,
        "text_offset": 54,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26750000,
        "duration_milliseconds": 212,
        "text_offset": 56,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 212,
        "text_offset": 61,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 87,
        "text_offset": 63,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32500000,
        "duration_milliseconds": 450,
        "text_offset": 67,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "let-s-go-back-to-the-tree-and-add-the-last-two-674aad1d.mp3",
    "final_audio": "let-s-go-back-to-the-tree-and-add-the-last-two-674aad1d.mp3"
  },
  {
    "input_text": "This time we choose node 3 as the next city.",
    "input_data": {
      "input_text": "This time we choose node 3 as the next city.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This time we choose node 3 as the next city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This time we choose node 3 as the next city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 225,
        "text_offset": 5,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5500000,
        "duration_milliseconds": 112,
        "text_offset": 10,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 287,
        "text_offset": 13,
        "word_length": 6,
        "text": "choose",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 212,
        "text_offset": 20,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 325,
        "text_offset": 25,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 137,
        "text_offset": 27,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 87,
        "text_offset": 30,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 237,
        "text_offset": 34,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "duration_milliseconds": 387,
        "text_offset": 39,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-time-we-choose-node-3-as-the-next-city-4919d50c.mp3",
    "final_audio": "this-time-we-choose-node-3-as-the-next-city-4919d50c.mp3"
  },
  {
    "input_text": "As you can see the last city, that we have not visited is city 4.",
    "input_data": {
      "input_text": "As you can see the last city, that we have not visited is city 4.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As you can see the last city, that we have not visited is city 4.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As you can see the last city, that we have not visited is city 4.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 150,
        "text_offset": 7,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 200,
        "text_offset": 11,
        "word_length": 3,
        "text": "see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 125,
        "text_offset": 15,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9625000,
        "duration_milliseconds": 275,
        "text_offset": 19,
        "word_length": 4,
        "text": "last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12625000,
        "duration_milliseconds": 287,
        "text_offset": 24,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16375000,
        "duration_milliseconds": 62,
        "text_offset": 28,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 137,
        "text_offset": 30,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 100,
        "text_offset": 35,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "duration_milliseconds": 137,
        "text_offset": 38,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 212,
        "text_offset": 43,
        "word_length": 3,
        "text": "not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 437,
        "text_offset": 47,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28500000,
        "duration_milliseconds": 125,
        "text_offset": 55,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30000000,
        "duration_milliseconds": 250,
        "text_offset": 58,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 412,
        "text_offset": 63,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37125000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "as-you-can-see-the-last-city-that-we-have-not-6891ee7e.mp3",
    "final_audio": "as-you-can-see-the-last-city-that-we-have-not-6891ee7e.mp3"
  },
  {
    "input_text": "Let's also add node 4 in the tree. Now we have visited every city.",
    "input_data": {
      "input_text": "Let's also add node 4 in the tree. Now we have visited every city.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's also add node 4 in the tree. Now we have visited every city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's also add node 4 in the tree. Now we have visited every city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 250,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 300,
        "text_offset": 6,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 162,
        "text_offset": 11,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 212,
        "text_offset": 15,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10750000,
        "duration_milliseconds": 275,
        "text_offset": 20,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13750000,
        "duration_milliseconds": 62,
        "text_offset": 22,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 87,
        "text_offset": 25,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 412,
        "text_offset": 29,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20125000,
        "duration_milliseconds": 100,
        "text_offset": 33,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 312,
        "text_offset": 35,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "duration_milliseconds": 162,
        "text_offset": 39,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33875000,
        "duration_milliseconds": 175,
        "text_offset": 42,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35875000,
        "duration_milliseconds": 475,
        "text_offset": 47,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40750000,
        "duration_milliseconds": 262,
        "text_offset": 55,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 437,
        "text_offset": 61,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 100,
        "text_offset": 65,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-also-add-node-4-in-the-tree-now-we-have-e2892f1e.mp3",
    "final_audio": "let-s-also-add-node-4-in-the-tree-now-we-have-e2892f1e.mp3"
  },
  {
    "input_text": "At the end we have to travel to the city where we started the tour. Let's finish our route by traveling back to city 1.",
    "input_data": {
      "input_text": "At the end we have to travel to the city where we started the tour. Let's finish our route by traveling back to city 1.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">At the end we have to travel to the city where we started the tour. Let's finish our route by traveling back to city 1.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">At the end we have to travel to the city where we started the tour. Let's finish our route by traveling back to city 1.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 2,
        "text": "At",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4000000,
        "duration_milliseconds": 287,
        "text_offset": 7,
        "word_length": 3,
        "text": "end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 112,
        "text_offset": 11,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 150,
        "text_offset": 14,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 87,
        "text_offset": 19,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 375,
        "text_offset": 22,
        "word_length": 6,
        "text": "travel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15125000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16250000,
        "duration_milliseconds": 125,
        "text_offset": 32,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17750000,
        "duration_milliseconds": 325,
        "text_offset": 36,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 212,
        "text_offset": 41,
        "word_length": 5,
        "text": "where",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 125,
        "text_offset": 47,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 350,
        "text_offset": 50,
        "word_length": 7,
        "text": "started",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28875000,
        "duration_milliseconds": 100,
        "text_offset": 58,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30125000,
        "duration_milliseconds": 450,
        "text_offset": 62,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 100,
        "text_offset": 66,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 43500000,
        "duration_milliseconds": 287,
        "text_offset": 68,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46500000,
        "duration_milliseconds": 325,
        "text_offset": 74,
        "word_length": 6,
        "text": "finish",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "duration_milliseconds": 125,
        "text_offset": 81,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51500000,
        "duration_milliseconds": 212,
        "text_offset": 85,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53875000,
        "duration_milliseconds": 112,
        "text_offset": 91,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55250000,
        "duration_milliseconds": 437,
        "text_offset": 94,
        "word_length": 9,
        "text": "traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59875000,
        "duration_milliseconds": 237,
        "text_offset": 104,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62375000,
        "duration_milliseconds": 75,
        "text_offset": 109,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63375000,
        "duration_milliseconds": 300,
        "text_offset": 112,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66625000,
        "duration_milliseconds": 337,
        "text_offset": 117,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 100,
        "text_offset": 118,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "at-the-end-we-have-to-travel-to-the-city-where-we-1f2f997a.mp3",
    "final_audio": "at-the-end-we-have-to-travel-to-the-city-where-we-1f2f997a.mp3"
  },
  {
    "input_text": "Now we can also finish our route on the tree by adding node 1 as our last node.",
    "input_data": {
      "input_text": "Now we can also finish our route on the tree by adding node 1 as our last node.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we can also finish our route on the tree by adding node 1 as our last node.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we can also finish our route on the tree by adding node 1 as our last node.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 137,
        "text_offset": 7,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 262,
        "text_offset": 11,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 312,
        "text_offset": 16,
        "word_length": 6,
        "text": "finish",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12125000,
        "duration_milliseconds": 137,
        "text_offset": 23,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13750000,
        "duration_milliseconds": 175,
        "text_offset": 27,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 100,
        "text_offset": 33,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16875000,
        "duration_milliseconds": 87,
        "text_offset": 36,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "duration_milliseconds": 262,
        "text_offset": 40,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 162,
        "text_offset": 45,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22500000,
        "duration_milliseconds": 325,
        "text_offset": 48,
        "word_length": 6,
        "text": "adding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 200,
        "text_offset": 55,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28250000,
        "duration_milliseconds": 175,
        "text_offset": 60,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 125,
        "text_offset": 62,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 125,
        "text_offset": 65,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33250000,
        "duration_milliseconds": 262,
        "text_offset": 69,
        "word_length": 4,
        "text": "last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36000000,
        "duration_milliseconds": 325,
        "text_offset": 74,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-can-also-finish-our-route-on-the-tree-by-6dd97e31.mp3",
    "final_audio": "now-we-can-also-finish-our-route-on-the-tree-by-6dd97e31.mp3"
  },
  {
    "input_text": "As you can see this is one possible route and the tree is not complete. Let's create the complete tree.",
    "input_data": {
      "input_text": "As you can see this is one possible route and the tree is not complete. Let's create the complete tree.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As you can see this is one possible route and the tree is not complete. Let's create the complete tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As you can see this is one possible route and the tree is not complete. Let's create the complete tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 162,
        "text_offset": 7,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 212,
        "text_offset": 11,
        "word_length": 3,
        "text": "see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 187,
        "text_offset": 15,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 137,
        "text_offset": 20,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 250,
        "text_offset": 23,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 512,
        "text_offset": 27,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 275,
        "text_offset": 36,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22875000,
        "duration_milliseconds": 75,
        "text_offset": 42,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 87,
        "text_offset": 46,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24875000,
        "duration_milliseconds": 225,
        "text_offset": 50,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 112,
        "text_offset": 55,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28500000,
        "duration_milliseconds": 175,
        "text_offset": 58,
        "word_length": 3,
        "text": "not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30500000,
        "duration_milliseconds": 537,
        "text_offset": 62,
        "word_length": 8,
        "text": "complete",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36125000,
        "duration_milliseconds": 100,
        "text_offset": 70,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 44750000,
        "duration_milliseconds": 275,
        "text_offset": 72,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 350,
        "text_offset": 78,
        "word_length": 6,
        "text": "create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51375000,
        "duration_milliseconds": 112,
        "text_offset": 85,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52750000,
        "duration_milliseconds": 400,
        "text_offset": 89,
        "word_length": 8,
        "text": "complete",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57000000,
        "duration_milliseconds": 437,
        "text_offset": 98,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61625000,
        "duration_milliseconds": 100,
        "text_offset": 102,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "as-you-can-see-this-is-one-possible-route-and-the-68209a8c.mp3",
    "final_audio": "as-you-can-see-this-is-one-possible-route-and-the-68209a8c.mp3"
  },
  {
    "input_text": "This tree shows every possible route, if you start from node one. Here we can now see that there are 24 possible routes to get to the last node. But is you take a closer look at the first and last route, you can see that the routes are identical, if we have a symmetrical TSP. That means if we have a symmetrical TSP, as in our example, we can ignore half of the routes.",
    "input_data": {
      "input_text": "This tree shows every possible route, if you start from node one. Here we can now see that there are 24 possible routes to get to the last node. But is you take a closer look at the first and last route, you can see that the routes are identical, if we have a symmetrical TSP. That means if we have a symmetrical TSP, as in our example, we can ignore half of the routes.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This tree shows every possible route, if you start from node one. Here we can now see that there are 24 possible routes to get to the last node. But is you take a closer look at the first and last route, you can see that the routes are identical, if we have a symmetrical TSP. That means if we have a symmetrical TSP, as in our example, we can ignore half of the routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This tree shows every possible route, if you start from node one. Here we can now see that there are 24 possible routes to get to the last node. But is you take a closer look at the first and last route, you can see that the routes are identical, if we have a symmetrical TSP. That means if we have a symmetrical TSP, as in our example, we can ignore half of the routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 200,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 187,
        "text_offset": 5,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 300,
        "text_offset": 10,
        "word_length": 5,
        "text": "shows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7750000,
        "duration_milliseconds": 225,
        "text_offset": 16,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 487,
        "text_offset": 22,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 262,
        "text_offset": 31,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18875000,
        "duration_milliseconds": 137,
        "text_offset": 36,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 100,
        "text_offset": 41,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22875000,
        "duration_milliseconds": 312,
        "text_offset": 45,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26250000,
        "duration_milliseconds": 175,
        "text_offset": 51,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28250000,
        "duration_milliseconds": 212,
        "text_offset": 56,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 262,
        "text_offset": 61,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 42000000,
        "duration_milliseconds": 225,
        "text_offset": 66,
        "word_length": 4,
        "text": "Here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "duration_milliseconds": 112,
        "text_offset": 71,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 150,
        "text_offset": 74,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 175,
        "text_offset": 78,
        "word_length": 3,
        "text": "now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49500000,
        "duration_milliseconds": 237,
        "text_offset": 82,
        "word_length": 3,
        "text": "see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "duration_milliseconds": 150,
        "text_offset": 86,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53750000,
        "duration_milliseconds": 150,
        "text_offset": 91,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55500000,
        "duration_milliseconds": 100,
        "text_offset": 97,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56625000,
        "duration_milliseconds": 512,
        "text_offset": 101,
        "word_length": 2,
        "text": "24",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61875000,
        "duration_milliseconds": 475,
        "text_offset": 104,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66875000,
        "duration_milliseconds": 287,
        "text_offset": 113,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "duration_milliseconds": 100,
        "text_offset": 120,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71250000,
        "duration_milliseconds": 150,
        "text_offset": 123,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72875000,
        "duration_milliseconds": 75,
        "text_offset": 127,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73875000,
        "duration_milliseconds": 100,
        "text_offset": 130,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75000000,
        "duration_milliseconds": 275,
        "text_offset": 134,
        "word_length": 4,
        "text": "last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77875000,
        "duration_milliseconds": 312,
        "text_offset": 139,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81250000,
        "duration_milliseconds": 100,
        "text_offset": 143,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 89750000,
        "duration_milliseconds": 162,
        "text_offset": 145,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91500000,
        "duration_milliseconds": 112,
        "text_offset": 149,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92875000,
        "duration_milliseconds": 87,
        "text_offset": 152,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "duration_milliseconds": 187,
        "text_offset": 156,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "duration_milliseconds": 75,
        "text_offset": 161,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97000000,
        "duration_milliseconds": 375,
        "text_offset": 163,
        "word_length": 6,
        "text": "closer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101000000,
        "duration_milliseconds": 187,
        "text_offset": 170,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103125000,
        "duration_milliseconds": 75,
        "text_offset": 175,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104125000,
        "duration_milliseconds": 100,
        "text_offset": 178,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105250000,
        "duration_milliseconds": 350,
        "text_offset": 182,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109000000,
        "duration_milliseconds": 87,
        "text_offset": 188,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110125000,
        "duration_milliseconds": 275,
        "text_offset": 192,
        "word_length": 4,
        "text": "last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113125000,
        "duration_milliseconds": 250,
        "text_offset": 197,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116625000,
        "duration_milliseconds": 125,
        "text_offset": 202,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 117875000,
        "duration_milliseconds": 112,
        "text_offset": 204,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119250000,
        "duration_milliseconds": 150,
        "text_offset": 208,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121000000,
        "duration_milliseconds": 187,
        "text_offset": 212,
        "word_length": 3,
        "text": "see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123125000,
        "duration_milliseconds": 137,
        "text_offset": 216,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124750000,
        "duration_milliseconds": 100,
        "text_offset": 221,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125875000,
        "duration_milliseconds": 250,
        "text_offset": 225,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128500000,
        "duration_milliseconds": 125,
        "text_offset": 232,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130000000,
        "duration_milliseconds": 575,
        "text_offset": 236,
        "word_length": 9,
        "text": "identical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136750000,
        "duration_milliseconds": 112,
        "text_offset": 245,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 138125000,
        "duration_milliseconds": 125,
        "text_offset": 247,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139625000,
        "duration_milliseconds": 100,
        "text_offset": 250,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 140875000,
        "duration_milliseconds": 150,
        "text_offset": 253,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 142500000,
        "duration_milliseconds": 62,
        "text_offset": 258,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143250000,
        "duration_milliseconds": 600,
        "text_offset": 260,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149500000,
        "duration_milliseconds": 750,
        "text_offset": 272,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 157250000,
        "duration_milliseconds": 100,
        "text_offset": 275,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 165875000,
        "duration_milliseconds": 225,
        "text_offset": 277,
        "word_length": 4,
        "text": "That",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168375000,
        "duration_milliseconds": 250,
        "text_offset": 282,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 171125000,
        "duration_milliseconds": 112,
        "text_offset": 288,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172500000,
        "duration_milliseconds": 112,
        "text_offset": 291,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173875000,
        "duration_milliseconds": 150,
        "text_offset": 294,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175500000,
        "duration_milliseconds": 62,
        "text_offset": 299,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176250000,
        "duration_milliseconds": 625,
        "text_offset": 301,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 182750000,
        "duration_milliseconds": 650,
        "text_offset": 313,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190125000,
        "duration_milliseconds": 125,
        "text_offset": 316,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 191375000,
        "duration_milliseconds": 150,
        "text_offset": 318,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 193125000,
        "duration_milliseconds": 100,
        "text_offset": 321,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194375000,
        "duration_milliseconds": 112,
        "text_offset": 324,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195625000,
        "duration_milliseconds": 500,
        "text_offset": 328,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 201625000,
        "duration_milliseconds": 137,
        "text_offset": 335,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 203000000,
        "duration_milliseconds": 125,
        "text_offset": 337,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 204500000,
        "duration_milliseconds": 137,
        "text_offset": 340,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 206125000,
        "duration_milliseconds": 325,
        "text_offset": 344,
        "word_length": 6,
        "text": "ignore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209625000,
        "duration_milliseconds": 237,
        "text_offset": 351,
        "word_length": 4,
        "text": "half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212125000,
        "duration_milliseconds": 87,
        "text_offset": 356,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213250000,
        "duration_milliseconds": 87,
        "text_offset": 359,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 214250000,
        "duration_milliseconds": 400,
        "text_offset": 363,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218375000,
        "duration_milliseconds": 100,
        "text_offset": 369,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-tree-shows-every-possible-route-if-you-start-4ee98700.mp3",
    "final_audio": "this-tree-shows-every-possible-route-if-you-start-4ee98700.mp3"
  },
  {
    "input_text": "Let's blur out the routes that we can ignore.",
    "input_data": {
      "input_text": "Let's blur out the routes that we can ignore.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's blur out the routes that we can ignore.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's blur out the routes that we can ignore.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 275,
        "text_offset": 6,
        "word_length": 4,
        "text": "blur",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 137,
        "text_offset": 11,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8125000,
        "duration_milliseconds": 112,
        "text_offset": 15,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 300,
        "text_offset": 19,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 137,
        "text_offset": 26,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 125,
        "text_offset": 31,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 150,
        "text_offset": 34,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 537,
        "text_offset": 38,
        "word_length": 6,
        "text": "ignore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23250000,
        "duration_milliseconds": 100,
        "text_offset": 44,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-blur-out-the-routes-that-we-can-ignore-e1331f7c.mp3",
    "final_audio": "let-s-blur-out-the-routes-that-we-can-ignore-e1331f7c.mp3"
  },
  {
    "input_text": "Here we can also visualize which route we took in the first example.",
    "input_data": {
      "input_text": "Here we can also visualize which route we took in the first example.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Here we can also visualize which route we took in the first example.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Here we can also visualize which route we took in the first example.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 4,
        "text": "Here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 125,
        "text_offset": 5,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 162,
        "text_offset": 8,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6375000,
        "duration_milliseconds": 250,
        "text_offset": 12,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 600,
        "text_offset": 17,
        "word_length": 9,
        "text": "visualize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 187,
        "text_offset": 27,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 212,
        "text_offset": 33,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 112,
        "text_offset": 39,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 212,
        "text_offset": 42,
        "word_length": 4,
        "text": "took",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 75,
        "text_offset": 47,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24625000,
        "duration_milliseconds": 87,
        "text_offset": 50,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25625000,
        "duration_milliseconds": 287,
        "text_offset": 54,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28750000,
        "duration_milliseconds": 587,
        "text_offset": 60,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34750000,
        "duration_milliseconds": 100,
        "text_offset": 67,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "here-we-can-also-visualize-which-route-we-took-in-31d4c51e.mp3",
    "final_audio": "here-we-can-also-visualize-which-route-we-took-in-31d4c51e.mp3"
  },
  {
    "input_text": "After having created a tree for every possible route, the branch and bound method calculates the cost for every route and compares it to the best route so far. If the cost of the current route is higher than the cost of the best route so far, the current route will be discarded.",
    "input_data": {
      "input_text": "After having created a tree for every possible route, the branch and bound method calculates the cost for every route and compares it to the best route so far. If the cost of the current route is higher than the cost of the best route so far, the current route will be discarded.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">After having created a tree for every possible route, the branch and bound method calculates the cost for every route and compares it to the best route so far. If the cost of the current route is higher than the cost of the best route so far, the current route will be discarded.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">After having created a tree for every possible route, the branch and bound method calculates the cost for every route and compares it to the best route so far. If the cost of the current route is higher than the cost of the best route so far, the current route will be discarded.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 312,
        "text_offset": 0,
        "word_length": 5,
        "text": "After",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3875000,
        "duration_milliseconds": 262,
        "text_offset": 6,
        "word_length": 6,
        "text": "having",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 425,
        "text_offset": 13,
        "word_length": 7,
        "text": "created",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 50,
        "text_offset": 21,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 250,
        "text_offset": 23,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 175,
        "text_offset": 28,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16500000,
        "duration_milliseconds": 200,
        "text_offset": 32,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 475,
        "text_offset": 38,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 212,
        "text_offset": 47,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26875000,
        "duration_milliseconds": 100,
        "text_offset": 52,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 28000000,
        "duration_milliseconds": 100,
        "text_offset": 54,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29125000,
        "duration_milliseconds": 337,
        "text_offset": 58,
        "word_length": 6,
        "text": "branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33375000,
        "duration_milliseconds": 75,
        "text_offset": 65,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34375000,
        "duration_milliseconds": 237,
        "text_offset": 69,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 287,
        "text_offset": 75,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40125000,
        "duration_milliseconds": 612,
        "text_offset": 82,
        "word_length": 10,
        "text": "calculates",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46375000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 312,
        "text_offset": 97,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 162,
        "text_offset": 102,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52875000,
        "duration_milliseconds": 250,
        "text_offset": 106,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55625000,
        "duration_milliseconds": 225,
        "text_offset": 112,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58000000,
        "duration_milliseconds": 87,
        "text_offset": 118,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59125000,
        "duration_milliseconds": 400,
        "text_offset": 122,
        "word_length": 8,
        "text": "compares",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63375000,
        "duration_milliseconds": 87,
        "text_offset": 131,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64500000,
        "duration_milliseconds": 87,
        "text_offset": 134,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65500000,
        "duration_milliseconds": 100,
        "text_offset": 137,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66750000,
        "duration_milliseconds": 250,
        "text_offset": 141,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69500000,
        "duration_milliseconds": 162,
        "text_offset": 146,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71375000,
        "duration_milliseconds": 162,
        "text_offset": 152,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73250000,
        "duration_milliseconds": 387,
        "text_offset": 155,
        "word_length": 3,
        "text": "far",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 100,
        "text_offset": 158,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 86000000,
        "duration_milliseconds": 162,
        "text_offset": 160,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87750000,
        "duration_milliseconds": 112,
        "text_offset": 163,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89125000,
        "duration_milliseconds": 312,
        "text_offset": 167,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92500000,
        "duration_milliseconds": 62,
        "text_offset": 172,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93375000,
        "duration_milliseconds": 100,
        "text_offset": 175,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94625000,
        "duration_milliseconds": 337,
        "text_offset": 179,
        "word_length": 7,
        "text": "current",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98250000,
        "duration_milliseconds": 200,
        "text_offset": 187,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100500000,
        "duration_milliseconds": 125,
        "text_offset": 193,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102000000,
        "duration_milliseconds": 300,
        "text_offset": 196,
        "word_length": 6,
        "text": "higher",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105250000,
        "duration_milliseconds": 125,
        "text_offset": 203,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106750000,
        "duration_milliseconds": 100,
        "text_offset": 208,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108000000,
        "duration_milliseconds": 362,
        "text_offset": 212,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111875000,
        "duration_milliseconds": 62,
        "text_offset": 217,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112750000,
        "duration_milliseconds": 100,
        "text_offset": 220,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "duration_milliseconds": 262,
        "text_offset": 224,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116875000,
        "duration_milliseconds": 162,
        "text_offset": 229,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118750000,
        "duration_milliseconds": 175,
        "text_offset": 235,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120625000,
        "duration_milliseconds": 312,
        "text_offset": 238,
        "word_length": 3,
        "text": "far",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124750000,
        "duration_milliseconds": 162,
        "text_offset": 241,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 126375000,
        "duration_milliseconds": 112,
        "text_offset": 243,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127750000,
        "duration_milliseconds": 350,
        "text_offset": 247,
        "word_length": 7,
        "text": "current",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131500000,
        "duration_milliseconds": 187,
        "text_offset": 255,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133625000,
        "duration_milliseconds": 125,
        "text_offset": 261,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135125000,
        "duration_milliseconds": 100,
        "text_offset": 266,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136375000,
        "duration_milliseconds": 637,
        "text_offset": 269,
        "word_length": 9,
        "text": "discarded",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143000000,
        "duration_milliseconds": 100,
        "text_offset": 278,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "after-having-created-a-tree-for-every-possible-7d1de374.mp3",
    "final_audio": "after-having-created-a-tree-for-every-possible-7d1de374.mp3"
  },
  {
    "input_text": "Let's take a look at an example. Lets say the algorithm calculated our route first with the cost of 15. As it is the first route, it is also the best route so far.",
    "input_data": {
      "input_text": "Let's take a look at an example. Lets say the algorithm calculated our route first with the cost of 15. As it is the first route, it is also the best route so far.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's take a look at an example. Lets say the algorithm calculated our route first with the cost of 15. As it is the first route, it is also the best route so far.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's take a look at an example. Lets say the algorithm calculated our route first with the cost of 15. As it is the first route, it is also the best route so far.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 312,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3750000,
        "duration_milliseconds": 187,
        "text_offset": 6,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 62,
        "text_offset": 11,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 262,
        "text_offset": 13,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9625000,
        "duration_milliseconds": 112,
        "text_offset": 18,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 87,
        "text_offset": 21,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 662,
        "text_offset": 24,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18625000,
        "duration_milliseconds": 100,
        "text_offset": 31,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 250,
        "text_offset": 33,
        "word_length": 4,
        "text": "Lets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30000000,
        "duration_milliseconds": 162,
        "text_offset": 38,
        "word_length": 3,
        "text": "say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 125,
        "text_offset": 42,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33375000,
        "duration_milliseconds": 625,
        "text_offset": 46,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39875000,
        "duration_milliseconds": 687,
        "text_offset": 56,
        "word_length": 10,
        "text": "calculated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "duration_milliseconds": 125,
        "text_offset": 67,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48500000,
        "duration_milliseconds": 175,
        "text_offset": 71,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50500000,
        "duration_milliseconds": 362,
        "text_offset": 77,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54375000,
        "duration_milliseconds": 112,
        "text_offset": 83,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55750000,
        "duration_milliseconds": 112,
        "text_offset": 88,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57125000,
        "duration_milliseconds": 325,
        "text_offset": 92,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60625000,
        "duration_milliseconds": 75,
        "text_offset": 97,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61625000,
        "duration_milliseconds": 575,
        "text_offset": 100,
        "word_length": 2,
        "text": "15",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67625000,
        "duration_milliseconds": 100,
        "text_offset": 102,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 76250000,
        "duration_milliseconds": 212,
        "text_offset": 104,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78625000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79750000,
        "duration_milliseconds": 125,
        "text_offset": 110,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81250000,
        "duration_milliseconds": 112,
        "text_offset": 113,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "duration_milliseconds": 312,
        "text_offset": 117,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85875000,
        "duration_milliseconds": 275,
        "text_offset": 123,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89625000,
        "duration_milliseconds": 137,
        "text_offset": 128,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 91000000,
        "duration_milliseconds": 87,
        "text_offset": 130,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92000000,
        "duration_milliseconds": 125,
        "text_offset": 133,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93500000,
        "duration_milliseconds": 250,
        "text_offset": 136,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96250000,
        "duration_milliseconds": 112,
        "text_offset": 141,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 262,
        "text_offset": 145,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100375000,
        "duration_milliseconds": 175,
        "text_offset": 150,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102375000,
        "duration_milliseconds": 200,
        "text_offset": 156,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104625000,
        "duration_milliseconds": 412,
        "text_offset": 159,
        "word_length": 3,
        "text": "far",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109000000,
        "duration_milliseconds": 100,
        "text_offset": 162,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-take-a-look-at-an-example-lets-say-the-83f5b01e.mp3",
    "final_audio": "let-s-take-a-look-at-an-example-lets-say-the-83f5b01e.mp3"
  },
  {
    "input_text": "Next, the algorithm calculates the route on the left. The cost of this route is 12. As this route is better than the best route so far, it becomes the new best route.",
    "input_data": {
      "input_text": "Next, the algorithm calculates the route on the left. The cost of this route is 12. As this route is better than the best route so far, it becomes the new best route.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Next, the algorithm calculates the route on the left. The cost of this route is 12. As this route is better than the best route so far, it becomes the new best route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Next, the algorithm calculates the route on the left. The cost of this route is 12. As this route is better than the best route so far, it becomes the new best route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 462,
        "text_offset": 0,
        "word_length": 4,
        "text": "Next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 87,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 125,
        "text_offset": 6,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 637,
        "text_offset": 10,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 625,
        "text_offset": 20,
        "word_length": 10,
        "text": "calculates",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21375000,
        "duration_milliseconds": 125,
        "text_offset": 31,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22875000,
        "duration_milliseconds": 237,
        "text_offset": 35,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25500000,
        "duration_milliseconds": 100,
        "text_offset": 41,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26750000,
        "duration_milliseconds": 75,
        "text_offset": 44,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 412,
        "text_offset": 48,
        "word_length": 4,
        "text": "left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 100,
        "text_offset": 52,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 40625000,
        "duration_milliseconds": 137,
        "text_offset": 54,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42250000,
        "duration_milliseconds": 337,
        "text_offset": 58,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 75,
        "text_offset": 63,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46875000,
        "duration_milliseconds": 187,
        "text_offset": 66,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "duration_milliseconds": 237,
        "text_offset": 71,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51625000,
        "duration_milliseconds": 125,
        "text_offset": 77,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53000000,
        "duration_milliseconds": 562,
        "text_offset": 80,
        "word_length": 2,
        "text": "12",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58875000,
        "duration_milliseconds": 100,
        "text_offset": 82,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 67500000,
        "duration_milliseconds": 175,
        "text_offset": 84,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69500000,
        "duration_milliseconds": 175,
        "text_offset": 87,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71500000,
        "duration_milliseconds": 162,
        "text_offset": 92,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73375000,
        "duration_milliseconds": 125,
        "text_offset": 98,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74875000,
        "duration_milliseconds": 275,
        "text_offset": 101,
        "word_length": 6,
        "text": "better",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77750000,
        "duration_milliseconds": 125,
        "text_offset": 108,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79250000,
        "duration_milliseconds": 100,
        "text_offset": 113,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80375000,
        "duration_milliseconds": 262,
        "text_offset": 117,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83250000,
        "duration_milliseconds": 162,
        "text_offset": 122,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85125000,
        "duration_milliseconds": 175,
        "text_offset": 128,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87125000,
        "duration_milliseconds": 325,
        "text_offset": 131,
        "word_length": 3,
        "text": "far",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91375000,
        "duration_milliseconds": 112,
        "text_offset": 134,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 92500000,
        "duration_milliseconds": 50,
        "text_offset": 136,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93125000,
        "duration_milliseconds": 362,
        "text_offset": 139,
        "word_length": 7,
        "text": "becomes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97000000,
        "duration_milliseconds": 87,
        "text_offset": 147,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "duration_milliseconds": 137,
        "text_offset": 151,
        "word_length": 3,
        "text": "new",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99500000,
        "duration_milliseconds": 262,
        "text_offset": 155,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102375000,
        "duration_milliseconds": 325,
        "text_offset": 160,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105875000,
        "duration_milliseconds": 100,
        "text_offset": 165,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "next-the-algorithm-calculates-the-route-on-the-4c2fd5d2.mp3",
    "final_audio": "next-the-algorithm-calculates-the-route-on-the-4c2fd5d2.mp3"
  },
  {
    "input_text": "Now the algorithm calculates the next route. In our example it will be the seventh possible route.",
    "input_data": {
      "input_text": "Now the algorithm calculates the next route. In our example it will be the seventh possible route.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now the algorithm calculates the next route. In our example it will be the seventh possible route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now the algorithm calculates the next route. In our example it will be the seventh possible route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 300,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3625000,
        "duration_milliseconds": 150,
        "text_offset": 4,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 637,
        "text_offset": 8,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 650,
        "text_offset": 18,
        "word_length": 10,
        "text": "calculates",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 287,
        "text_offset": 33,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "duration_milliseconds": 362,
        "text_offset": 38,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26875000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 200,
        "text_offset": 45,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37625000,
        "duration_milliseconds": 150,
        "text_offset": 48,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39250000,
        "duration_milliseconds": 537,
        "text_offset": 52,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44875000,
        "duration_milliseconds": 100,
        "text_offset": 60,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46125000,
        "duration_milliseconds": 125,
        "text_offset": 63,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 125,
        "text_offset": 68,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "duration_milliseconds": 125,
        "text_offset": 71,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50375000,
        "duration_milliseconds": 412,
        "text_offset": 75,
        "word_length": 7,
        "text": "seventh",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54625000,
        "duration_milliseconds": 500,
        "text_offset": 83,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59875000,
        "duration_milliseconds": 350,
        "text_offset": 92,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 100,
        "text_offset": 97,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-the-algorithm-calculates-the-next-route-in-our-0028c478.mp3",
    "final_audio": "now-the-algorithm-calculates-the-next-route-in-our-0028c478.mp3"
  },
  {
    "input_text": "In this route the algorithm realizes at the third node that the added costs are at 14. Since the cost of the route till the third node is already higher than the cost of the best route, the algorithm can discard this route without calculating it untill the end.",
    "input_data": {
      "input_text": "In this route the algorithm realizes at the third node that the added costs are at 14. Since the cost of the route till the third node is already higher than the cost of the best route, the algorithm can discard this route without calculating it untill the end.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">In this route the algorithm realizes at the third node that the added costs are at 14. Since the cost of the route till the third node is already higher than the cost of the best route, the algorithm can discard this route without calculating it untill the end.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">In this route the algorithm realizes at the third node that the added costs are at 14. Since the cost of the route till the third node is already higher than the cost of the best route, the algorithm can discard this route without calculating it untill the end.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 187,
        "text_offset": 3,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 212,
        "text_offset": 8,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 112,
        "text_offset": 14,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 587,
        "text_offset": 18,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 550,
        "text_offset": 28,
        "word_length": 8,
        "text": "realizes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 75,
        "text_offset": 37,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 112,
        "text_offset": 40,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 275,
        "text_offset": 44,
        "word_length": 5,
        "text": "third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25625000,
        "duration_milliseconds": 237,
        "text_offset": 50,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28250000,
        "duration_milliseconds": 112,
        "text_offset": 55,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29625000,
        "duration_milliseconds": 112,
        "text_offset": 60,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31000000,
        "duration_milliseconds": 300,
        "text_offset": 64,
        "word_length": 5,
        "text": "added",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34250000,
        "duration_milliseconds": 400,
        "text_offset": 70,
        "word_length": 5,
        "text": "costs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38500000,
        "duration_milliseconds": 137,
        "text_offset": 76,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40125000,
        "duration_milliseconds": 75,
        "text_offset": 80,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41125000,
        "duration_milliseconds": 600,
        "text_offset": 83,
        "word_length": 2,
        "text": "14",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47375000,
        "duration_milliseconds": 100,
        "text_offset": 85,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 300,
        "text_offset": 87,
        "word_length": 5,
        "text": "Since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59125000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60375000,
        "duration_milliseconds": 312,
        "text_offset": 97,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63750000,
        "duration_milliseconds": 50,
        "text_offset": 102,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64500000,
        "duration_milliseconds": 87,
        "text_offset": 105,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65625000,
        "duration_milliseconds": 212,
        "text_offset": 109,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "duration_milliseconds": 137,
        "text_offset": 115,
        "word_length": 4,
        "text": "till",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69500000,
        "duration_milliseconds": 112,
        "text_offset": 120,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70875000,
        "duration_milliseconds": 262,
        "text_offset": 124,
        "word_length": 5,
        "text": "third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73750000,
        "duration_milliseconds": 200,
        "text_offset": 130,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75875000,
        "duration_milliseconds": 112,
        "text_offset": 135,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77250000,
        "duration_milliseconds": 350,
        "text_offset": 138,
        "word_length": 7,
        "text": "already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81000000,
        "duration_milliseconds": 312,
        "text_offset": 146,
        "word_length": 6,
        "text": "higher",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84375000,
        "duration_milliseconds": 112,
        "text_offset": 153,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85750000,
        "duration_milliseconds": 100,
        "text_offset": 158,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87000000,
        "duration_milliseconds": 325,
        "text_offset": 162,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90500000,
        "duration_milliseconds": 75,
        "text_offset": 167,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91500000,
        "duration_milliseconds": 75,
        "text_offset": 170,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92375000,
        "duration_milliseconds": 237,
        "text_offset": 174,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95000000,
        "duration_milliseconds": 225,
        "text_offset": 179,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98250000,
        "duration_milliseconds": 200,
        "text_offset": 184,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 100375000,
        "duration_milliseconds": 125,
        "text_offset": 186,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101875000,
        "duration_milliseconds": 587,
        "text_offset": 190,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108000000,
        "duration_milliseconds": 125,
        "text_offset": 200,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109500000,
        "duration_milliseconds": 450,
        "text_offset": 204,
        "word_length": 7,
        "text": "discard",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114250000,
        "duration_milliseconds": 187,
        "text_offset": 212,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116375000,
        "duration_milliseconds": 200,
        "text_offset": 217,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118625000,
        "duration_milliseconds": 325,
        "text_offset": 223,
        "word_length": 7,
        "text": "without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122125000,
        "duration_milliseconds": 687,
        "text_offset": 231,
        "word_length": 11,
        "text": "calculating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129250000,
        "duration_milliseconds": 87,
        "text_offset": 243,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130375000,
        "duration_milliseconds": 262,
        "text_offset": 246,
        "word_length": 6,
        "text": "untill",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133125000,
        "duration_milliseconds": 100,
        "text_offset": 253,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134375000,
        "duration_milliseconds": 387,
        "text_offset": 257,
        "word_length": 3,
        "text": "end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138500000,
        "duration_milliseconds": 100,
        "text_offset": 260,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "in-this-route-the-algorithm-realizes-at-the-third-fb0a0eb2.mp3",
    "final_audio": "in-this-route-the-algorithm-realizes-at-the-third-fb0a0eb2.mp3"
  },
  {
    "input_text": "This way of calculating the best route is applied to every route. At the end the algorithm will have found the best route. In this example it is the first route.",
    "input_data": {
      "input_text": "This way of calculating the best route is applied to every route. At the end the algorithm will have found the best route. In this example it is the first route.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This way of calculating the best route is applied to every route. At the end the algorithm will have found the best route. In this example it is the first route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This way of calculating the best route is applied to every route. At the end the algorithm will have found the best route. In this example it is the first route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 150,
        "text_offset": 5,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 100,
        "text_offset": 9,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 675,
        "text_offset": 12,
        "word_length": 11,
        "text": "calculating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 100,
        "text_offset": 24,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 262,
        "text_offset": 28,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17125000,
        "duration_milliseconds": 237,
        "text_offset": 33,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19625000,
        "duration_milliseconds": 125,
        "text_offset": 39,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21125000,
        "duration_milliseconds": 350,
        "text_offset": 42,
        "word_length": 7,
        "text": "applied",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24750000,
        "duration_milliseconds": 112,
        "text_offset": 50,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 287,
        "text_offset": 53,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29125000,
        "duration_milliseconds": 337,
        "text_offset": 59,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32625000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 41125000,
        "duration_milliseconds": 212,
        "text_offset": 66,
        "word_length": 2,
        "text": "At",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43375000,
        "duration_milliseconds": 112,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44750000,
        "duration_milliseconds": 287,
        "text_offset": 73,
        "word_length": 3,
        "text": "end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47750000,
        "duration_milliseconds": 100,
        "text_offset": 77,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "duration_milliseconds": 612,
        "text_offset": 81,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55375000,
        "duration_milliseconds": 125,
        "text_offset": 91,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56750000,
        "duration_milliseconds": 150,
        "text_offset": 96,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58500000,
        "duration_milliseconds": 275,
        "text_offset": 101,
        "word_length": 5,
        "text": "found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61375000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62375000,
        "duration_milliseconds": 275,
        "text_offset": 111,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65375000,
        "duration_milliseconds": 350,
        "text_offset": 116,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "duration_milliseconds": 100,
        "text_offset": 121,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 77625000,
        "duration_milliseconds": 187,
        "text_offset": 123,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79750000,
        "duration_milliseconds": 175,
        "text_offset": 126,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81750000,
        "duration_milliseconds": 562,
        "text_offset": 131,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87625000,
        "duration_milliseconds": 112,
        "text_offset": 139,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "duration_milliseconds": 125,
        "text_offset": 142,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90500000,
        "duration_milliseconds": 112,
        "text_offset": 145,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91750000,
        "duration_milliseconds": 337,
        "text_offset": 149,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95375000,
        "duration_milliseconds": 375,
        "text_offset": 155,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99375000,
        "duration_milliseconds": 100,
        "text_offset": 160,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-way-of-calculating-the-best-route-is-applied-48b27187.mp3",
    "final_audio": "this-way-of-calculating-the-best-route-is-applied-48b27187.mp3"
  },
  {
    "input_text": "Let's take a look now at the time complexity of the branch and bound method. As explained, the algorithm calculates every possible route. But as we have seen before, it can discard routes that are worse than the best route so far.",
    "input_data": {
      "input_text": "Let's take a look now at the time complexity of the branch and bound method. As explained, the algorithm calculates every possible route. But as we have seen before, it can discard routes that are worse than the best route so far.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's take a look now at the time complexity of the branch and bound method. As explained, the algorithm calculates every possible route. But as we have seen before, it can discard routes that are worse than the best route so far.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's take a look now at the time complexity of the branch and bound method. As explained, the algorithm calculates every possible route. But as we have seen before, it can discard routes that are worse than the best route so far.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 262,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 187,
        "text_offset": 6,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 62,
        "text_offset": 11,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 200,
        "text_offset": 13,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 225,
        "text_offset": 18,
        "word_length": 3,
        "text": "now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10750000,
        "duration_milliseconds": 75,
        "text_offset": 22,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11750000,
        "duration_milliseconds": 100,
        "text_offset": 25,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "duration_milliseconds": 262,
        "text_offset": 29,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 662,
        "text_offset": 34,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 75,
        "text_offset": 45,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 112,
        "text_offset": 48,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25000000,
        "duration_milliseconds": 350,
        "text_offset": 52,
        "word_length": 6,
        "text": "branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 100,
        "text_offset": 59,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29875000,
        "duration_milliseconds": 262,
        "text_offset": 63,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 475,
        "text_offset": 69,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37625000,
        "duration_milliseconds": 100,
        "text_offset": 75,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 237,
        "text_offset": 77,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48875000,
        "duration_milliseconds": 512,
        "text_offset": 80,
        "word_length": 9,
        "text": "explained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 125,
        "text_offset": 89,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 56250000,
        "duration_milliseconds": 112,
        "text_offset": 91,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57625000,
        "duration_milliseconds": 612,
        "text_offset": 95,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64000000,
        "duration_milliseconds": 625,
        "text_offset": 105,
        "word_length": 10,
        "text": "calculates",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70375000,
        "duration_milliseconds": 262,
        "text_offset": 116,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73250000,
        "duration_milliseconds": 512,
        "text_offset": 122,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78625000,
        "duration_milliseconds": 337,
        "text_offset": 131,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82250000,
        "duration_milliseconds": 100,
        "text_offset": 136,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 90750000,
        "duration_milliseconds": 150,
        "text_offset": 138,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92500000,
        "duration_milliseconds": 112,
        "text_offset": 142,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93875000,
        "duration_milliseconds": 100,
        "text_offset": 145,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95125000,
        "duration_milliseconds": 112,
        "text_offset": 148,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96500000,
        "duration_milliseconds": 212,
        "text_offset": 153,
        "word_length": 4,
        "text": "seen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98750000,
        "duration_milliseconds": 437,
        "text_offset": 158,
        "word_length": 6,
        "text": "before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104125000,
        "duration_milliseconds": 112,
        "text_offset": 164,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 105375000,
        "duration_milliseconds": 75,
        "text_offset": 166,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106375000,
        "duration_milliseconds": 125,
        "text_offset": 169,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107875000,
        "duration_milliseconds": 450,
        "text_offset": 173,
        "word_length": 7,
        "text": "discard",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112625000,
        "duration_milliseconds": 262,
        "text_offset": 181,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115500000,
        "duration_milliseconds": 112,
        "text_offset": 188,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116875000,
        "duration_milliseconds": 100,
        "text_offset": 193,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118125000,
        "duration_milliseconds": 237,
        "text_offset": 197,
        "word_length": 5,
        "text": "worse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120750000,
        "duration_milliseconds": 125,
        "text_offset": 203,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122125000,
        "duration_milliseconds": 100,
        "text_offset": 208,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123250000,
        "duration_milliseconds": 262,
        "text_offset": 212,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126125000,
        "duration_milliseconds": 162,
        "text_offset": 217,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "duration_milliseconds": 162,
        "text_offset": 223,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129875000,
        "duration_milliseconds": 387,
        "text_offset": 226,
        "word_length": 3,
        "text": "far",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134000000,
        "duration_milliseconds": 100,
        "text_offset": 229,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-take-a-look-now-at-the-time-complexity-of-54a96426.mp3",
    "final_audio": "let-s-take-a-look-now-at-the-time-complexity-of-54a96426.mp3"
  },
  {
    "input_text": "That means the algorithm does not have to calculate every route untill the end. Still having to calculate every possible route makes the branch and bound method very time consuming. In the worst case the algorithm has to calculate every possible route untill the end and the time complexity is the same as the brute force method.",
    "input_data": {
      "input_text": "That means the algorithm does not have to calculate every route untill the end. Still having to calculate every possible route makes the branch and bound method very time consuming. In the worst case the algorithm has to calculate every possible route untill the end and the time complexity is the same as the brute force method.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">That means the algorithm does not have to calculate every route untill the end. Still having to calculate every possible route makes the branch and bound method very time consuming. In the worst case the algorithm has to calculate every possible route untill the end and the time complexity is the same as the brute force method.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">That means the algorithm does not have to calculate every route untill the end. Still having to calculate every possible route makes the branch and bound method very time consuming. In the worst case the algorithm has to calculate every possible route untill the end and the time complexity is the same as the brute force method.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 4,
        "text": "That",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 250,
        "text_offset": 5,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 112,
        "text_offset": 11,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 587,
        "text_offset": 15,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13375000,
        "duration_milliseconds": 175,
        "text_offset": 25,
        "word_length": 4,
        "text": "does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 187,
        "text_offset": 30,
        "word_length": 3,
        "text": "not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17375000,
        "duration_milliseconds": 162,
        "text_offset": 34,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19250000,
        "duration_milliseconds": 112,
        "text_offset": 39,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 587,
        "text_offset": 42,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26625000,
        "duration_milliseconds": 262,
        "text_offset": 52,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 237,
        "text_offset": 58,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 287,
        "text_offset": 64,
        "word_length": 6,
        "text": "untill",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 100,
        "text_offset": 71,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36125000,
        "duration_milliseconds": 412,
        "text_offset": 75,
        "word_length": 3,
        "text": "end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40500000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 49000000,
        "duration_milliseconds": 325,
        "text_offset": 80,
        "word_length": 5,
        "text": "Still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52375000,
        "duration_milliseconds": 250,
        "text_offset": 86,
        "word_length": 6,
        "text": "having",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 87,
        "text_offset": 93,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56125000,
        "duration_milliseconds": 562,
        "text_offset": 96,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61875000,
        "duration_milliseconds": 237,
        "text_offset": 106,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64375000,
        "duration_milliseconds": 525,
        "text_offset": 112,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69875000,
        "duration_milliseconds": 200,
        "text_offset": 121,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "duration_milliseconds": 212,
        "text_offset": 127,
        "word_length": 5,
        "text": "makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74375000,
        "duration_milliseconds": 112,
        "text_offset": 133,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75625000,
        "duration_milliseconds": 350,
        "text_offset": 137,
        "word_length": 6,
        "text": "branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79250000,
        "duration_milliseconds": 100,
        "text_offset": 144,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80500000,
        "duration_milliseconds": 262,
        "text_offset": 148,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83375000,
        "duration_milliseconds": 312,
        "text_offset": 154,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86750000,
        "duration_milliseconds": 250,
        "text_offset": 161,
        "word_length": 4,
        "text": "very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89500000,
        "duration_milliseconds": 262,
        "text_offset": 166,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92250000,
        "duration_milliseconds": 575,
        "text_offset": 171,
        "word_length": 9,
        "text": "consuming",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98250000,
        "duration_milliseconds": 100,
        "text_offset": 180,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 106875000,
        "duration_milliseconds": 162,
        "text_offset": 182,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108625000,
        "duration_milliseconds": 87,
        "text_offset": 185,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109750000,
        "duration_milliseconds": 262,
        "text_offset": 189,
        "word_length": 5,
        "text": "worst",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112625000,
        "duration_milliseconds": 262,
        "text_offset": 195,
        "word_length": 4,
        "text": "case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115500000,
        "duration_milliseconds": 112,
        "text_offset": 200,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116875000,
        "duration_milliseconds": 550,
        "text_offset": 204,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122625000,
        "duration_milliseconds": 175,
        "text_offset": 214,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124625000,
        "duration_milliseconds": 112,
        "text_offset": 218,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126000000,
        "duration_milliseconds": 550,
        "text_offset": 221,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131625000,
        "duration_milliseconds": 225,
        "text_offset": 231,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134000000,
        "duration_milliseconds": 512,
        "text_offset": 237,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139375000,
        "duration_milliseconds": 225,
        "text_offset": 246,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141750000,
        "duration_milliseconds": 262,
        "text_offset": 252,
        "word_length": 6,
        "text": "untill",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144500000,
        "duration_milliseconds": 100,
        "text_offset": 259,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145750000,
        "duration_milliseconds": 250,
        "text_offset": 263,
        "word_length": 3,
        "text": "end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148375000,
        "duration_milliseconds": 62,
        "text_offset": 267,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149125000,
        "duration_milliseconds": 100,
        "text_offset": 271,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150375000,
        "duration_milliseconds": 262,
        "text_offset": 275,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153125000,
        "duration_milliseconds": 675,
        "text_offset": 280,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160125000,
        "duration_milliseconds": 112,
        "text_offset": 291,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 161375000,
        "duration_milliseconds": 112,
        "text_offset": 294,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 162750000,
        "duration_milliseconds": 287,
        "text_offset": 298,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165875000,
        "duration_milliseconds": 125,
        "text_offset": 303,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 167375000,
        "duration_milliseconds": 112,
        "text_offset": 306,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168625000,
        "duration_milliseconds": 225,
        "text_offset": 310,
        "word_length": 5,
        "text": "brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 171125000,
        "duration_milliseconds": 275,
        "text_offset": 316,
        "word_length": 5,
        "text": "force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174000000,
        "duration_milliseconds": 425,
        "text_offset": 322,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178375000,
        "duration_milliseconds": 100,
        "text_offset": 328,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "that-means-the-algorithm-does-not-have-to-120d2d33.mp3",
    "final_audio": "that-means-the-algorithm-does-not-have-to-120d2d33.mp3"
  },
  {
    "input_text": "However the algorithm performs very well in practice and it is mostly better than the brute force method. For that reason the time complexity of the branch and bound method is mostly better then the brute force algorithm, but still exponential.",
    "input_data": {
      "input_text": "However the algorithm performs very well in practice and it is mostly better than the brute force method. For that reason the time complexity of the branch and bound method is mostly better then the brute force algorithm, but still exponential.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">However the algorithm performs very well in practice and it is mostly better than the brute force method. For that reason the time complexity of the branch and bound method is mostly better then the brute force algorithm, but still exponential.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">However the algorithm performs very well in practice and it is mostly better than the brute force method. For that reason the time complexity of the branch and bound method is mostly better then the brute force algorithm, but still exponential.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 400,
        "text_offset": 0,
        "word_length": 7,
        "text": "However",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 112,
        "text_offset": 8,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 587,
        "text_offset": 12,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 512,
        "text_offset": 22,
        "word_length": 8,
        "text": "performs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 250,
        "text_offset": 31,
        "word_length": 4,
        "text": "very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 225,
        "text_offset": 36,
        "word_length": 4,
        "text": "well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22875000,
        "duration_milliseconds": 100,
        "text_offset": 41,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24125000,
        "duration_milliseconds": 462,
        "text_offset": 44,
        "word_length": 8,
        "text": "practice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28875000,
        "duration_milliseconds": 162,
        "text_offset": 53,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30750000,
        "duration_milliseconds": 87,
        "text_offset": 57,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 112,
        "text_offset": 60,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 375,
        "text_offset": 63,
        "word_length": 6,
        "text": "mostly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 300,
        "text_offset": 70,
        "word_length": 6,
        "text": "better",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40125000,
        "duration_milliseconds": 125,
        "text_offset": 77,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41625000,
        "duration_milliseconds": 100,
        "text_offset": 82,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42750000,
        "duration_milliseconds": 225,
        "text_offset": 86,
        "word_length": 5,
        "text": "brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45250000,
        "duration_milliseconds": 262,
        "text_offset": 92,
        "word_length": 5,
        "text": "force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "duration_milliseconds": 450,
        "text_offset": 98,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52625000,
        "duration_milliseconds": 100,
        "text_offset": 104,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 61250000,
        "duration_milliseconds": 175,
        "text_offset": 106,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63250000,
        "duration_milliseconds": 200,
        "text_offset": 110,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65375000,
        "duration_milliseconds": 275,
        "text_offset": 115,
        "word_length": 6,
        "text": "reason",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68375000,
        "duration_milliseconds": 100,
        "text_offset": 122,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69625000,
        "duration_milliseconds": 262,
        "text_offset": 126,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72375000,
        "duration_milliseconds": 650,
        "text_offset": 131,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79125000,
        "duration_milliseconds": 62,
        "text_offset": 142,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "duration_milliseconds": 112,
        "text_offset": 145,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81375000,
        "duration_milliseconds": 325,
        "text_offset": 149,
        "word_length": 6,
        "text": "branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84750000,
        "duration_milliseconds": 100,
        "text_offset": 156,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86000000,
        "duration_milliseconds": 250,
        "text_offset": 160,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88750000,
        "duration_milliseconds": 300,
        "text_offset": 166,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92000000,
        "duration_milliseconds": 125,
        "text_offset": 173,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93375000,
        "duration_milliseconds": 350,
        "text_offset": 176,
        "word_length": 6,
        "text": "mostly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97000000,
        "duration_milliseconds": 287,
        "text_offset": 183,
        "word_length": 6,
        "text": "better",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100125000,
        "duration_milliseconds": 150,
        "text_offset": 190,
        "word_length": 4,
        "text": "then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101875000,
        "duration_milliseconds": 100,
        "text_offset": 195,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103000000,
        "duration_milliseconds": 225,
        "text_offset": 199,
        "word_length": 5,
        "text": "brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105500000,
        "duration_milliseconds": 275,
        "text_offset": 205,
        "word_length": 5,
        "text": "force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108500000,
        "duration_milliseconds": 562,
        "text_offset": 211,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115125000,
        "duration_milliseconds": 150,
        "text_offset": 220,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 116625000,
        "duration_milliseconds": 137,
        "text_offset": 222,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118250000,
        "duration_milliseconds": 275,
        "text_offset": 226,
        "word_length": 5,
        "text": "still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121125000,
        "duration_milliseconds": 775,
        "text_offset": 232,
        "word_length": 11,
        "text": "exponential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129125000,
        "duration_milliseconds": 100,
        "text_offset": 243,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "however-the-algorithm-performs-very-well-in-051666bf.mp3",
    "final_audio": "however-the-algorithm-performs-very-well-in-051666bf.mp3"
  },
  {
    "input_text": "Our first approximation approach is k nearest neighbors (kNN).",
    "input_data": {
      "input_text": "Our first approximation approach is k nearest neighbors (kNN).",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Our first approximation approach is k nearest neighbors (kNN).</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Our first approximation approach is k nearest neighbors (kNN).</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 3,
        "text": "Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2750000,
        "duration_milliseconds": 300,
        "text_offset": 4,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 775,
        "text_offset": 10,
        "word_length": 13,
        "text": "approximation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14000000,
        "duration_milliseconds": 375,
        "text_offset": 24,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17875000,
        "duration_milliseconds": 125,
        "text_offset": 33,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19375000,
        "duration_milliseconds": 212,
        "text_offset": 36,
        "word_length": 1,
        "text": "k",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 350,
        "text_offset": 38,
        "word_length": 7,
        "text": "nearest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25250000,
        "duration_milliseconds": 450,
        "text_offset": 46,
        "word_length": 9,
        "text": "neighbors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 50,
        "text_offset": 56,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 575,
        "text_offset": 57,
        "word_length": 3,
        "text": "kNN",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 100,
        "text_offset": 61,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "our-first-approximation-approach-is-k-nearest-98ddee09.mp3",
    "final_audio": "our-first-approximation-approach-is-k-nearest-98ddee09.mp3"
  },
  {
    "input_text": "We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node.",
    "input_data": {
      "input_text": "We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 287,
        "text_offset": 3,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 87,
        "text_offset": 9,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 62,
        "text_offset": 12,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 487,
        "text_offset": 14,
        "word_length": 8,
        "text": "specific",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12625000,
        "duration_milliseconds": 375,
        "text_offset": 23,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 87,
        "text_offset": 28,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 18125000,
        "duration_milliseconds": 237,
        "text_offset": 29,
        "word_length": 3,
        "text": "any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 312,
        "text_offset": 33,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24125000,
        "duration_milliseconds": 150,
        "text_offset": 38,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25875000,
        "duration_milliseconds": 125,
        "text_offset": 42,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 112,
        "text_offset": 45,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 375,
        "text_offset": 49,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32625000,
        "duration_milliseconds": 375,
        "text_offset": 58,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36500000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 45125000,
        "duration_milliseconds": 212,
        "text_offset": 66,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 100,
        "text_offset": 71,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 237,
        "text_offset": 74,
        "word_length": 5,
        "text": "check",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51250000,
        "duration_milliseconds": 100,
        "text_offset": 80,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52375000,
        "duration_milliseconds": 425,
        "text_offset": 84,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56875000,
        "duration_milliseconds": 287,
        "text_offset": 93,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60000000,
        "duration_milliseconds": 100,
        "text_offset": 98,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61250000,
        "duration_milliseconds": 175,
        "text_offset": 102,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63250000,
        "duration_milliseconds": 162,
        "text_offset": 106,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65125000,
        "duration_milliseconds": 250,
        "text_offset": 111,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67875000,
        "duration_milliseconds": 75,
        "text_offset": 117,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 112,
        "text_offset": 120,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "duration_milliseconds": 437,
        "text_offset": 124,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74625000,
        "duration_milliseconds": 100,
        "text_offset": 128,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 83250000,
        "duration_milliseconds": 312,
        "text_offset": 130,
        "word_length": 4,
        "text": "Same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86625000,
        "duration_milliseconds": 87,
        "text_offset": 135,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87625000,
        "duration_milliseconds": 75,
        "text_offset": 139,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88500000,
        "duration_milliseconds": 275,
        "text_offset": 143,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91500000,
        "duration_milliseconds": 200,
        "text_offset": 148,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93625000,
        "duration_milliseconds": 87,
        "text_offset": 153,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94750000,
        "duration_milliseconds": 250,
        "text_offset": 157,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 162,
        "text_offset": 160,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "duration_milliseconds": 137,
        "text_offset": 163,
        "word_length": 3,
        "text": "...",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 101375000,
        "duration_milliseconds": 125,
        "text_offset": 167,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102875000,
        "duration_milliseconds": 337,
        "text_offset": 170,
        "word_length": 6,
        "text": "repeat",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106500000,
        "duration_milliseconds": 187,
        "text_offset": 177,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108500000,
        "duration_milliseconds": 262,
        "text_offset": 182,
        "word_length": 5,
        "text": "until",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111250000,
        "duration_milliseconds": 162,
        "text_offset": 188,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113125000,
        "duration_milliseconds": 125,
        "text_offset": 194,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114500000,
        "duration_milliseconds": 212,
        "text_offset": 197,
        "word_length": 2,
        "text": "no",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116750000,
        "duration_milliseconds": 537,
        "text_offset": 200,
        "word_length": 9,
        "text": "unvisited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122250000,
        "duration_milliseconds": 337,
        "text_offset": 210,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125875000,
        "duration_milliseconds": 100,
        "text_offset": 214,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-start-at-a-specific-city-any-city-can-be-the-159a63a9.mp3",
    "final_audio": "we-start-at-a-specific-city-any-city-can-be-the-159a63a9.mp3"
  },
  {
    "input_text": "Finally, we draw a connection back to the starting point.",
    "input_data": {
      "input_text": "Finally, we draw a connection back to the starting point.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Finally, we draw a connection back to the starting point.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Finally, we draw a connection back to the starting point.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 525,
        "text_offset": 0,
        "word_length": 7,
        "text": "Finally",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 112,
        "text_offset": 7,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 112,
        "text_offset": 9,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 225,
        "text_offset": 12,
        "word_length": 4,
        "text": "draw",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 62,
        "text_offset": 17,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 475,
        "text_offset": 19,
        "word_length": 10,
        "text": "connection",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17750000,
        "duration_milliseconds": 237,
        "text_offset": 30,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 87,
        "text_offset": 35,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21375000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22750000,
        "duration_milliseconds": 400,
        "text_offset": 42,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27000000,
        "duration_milliseconds": 350,
        "text_offset": 51,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 100,
        "text_offset": 56,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "finally-we-draw-a-connection-back-to-the-starting-e5cfc929.mp3",
    "final_audio": "finally-we-draw-a-connection-back-to-the-starting-e5cfc929.mp3"
  },
  {
    "input_text": "This is how it can look like with more nodes, so more cities Alex has to visit.",
    "input_data": {
      "input_text": "This is how it can look like with more nodes, so more cities Alex has to visit.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is how it can look like with more nodes, so more cities Alex has to visit.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is how it can look like with more nodes, so more cities Alex has to visit.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 112,
        "text_offset": 5,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4375000,
        "duration_milliseconds": 150,
        "text_offset": 8,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 75,
        "text_offset": 12,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 150,
        "text_offset": 15,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 175,
        "text_offset": 19,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 187,
        "text_offset": 24,
        "word_length": 4,
        "text": "like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 137,
        "text_offset": 29,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 187,
        "text_offset": 34,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16500000,
        "duration_milliseconds": 375,
        "text_offset": 39,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21125000,
        "duration_milliseconds": 137,
        "text_offset": 44,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 22500000,
        "duration_milliseconds": 137,
        "text_offset": 46,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24000000,
        "duration_milliseconds": 187,
        "text_offset": 49,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26125000,
        "duration_milliseconds": 350,
        "text_offset": 54,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29875000,
        "duration_milliseconds": 337,
        "text_offset": 61,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 187,
        "text_offset": 66,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35625000,
        "duration_milliseconds": 87,
        "text_offset": 70,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36750000,
        "duration_milliseconds": 400,
        "text_offset": 73,
        "word_length": 5,
        "text": "visit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41000000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-is-how-it-can-look-like-with-more-nodes-so-30ed290c.mp3",
    "final_audio": "this-is-how-it-can-look-like-with-more-nodes-so-30ed290c.mp3"
  },
  {
    "input_text": "For a dataset with n cities, the time complexity of applying kNN to TSP is O of n squared. Even though it's better than using Branch and Bound with O of 2 to the power of n - 1in most cases we won't find the optimal shortest path.",
    "input_data": {
      "input_text": "For a dataset with n cities, the time complexity of applying kNN to TSP is O of n squared. Even though it's better than using Branch and Bound with O of 2 to the power of n - 1in most cases we won't find the optimal shortest path.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For a dataset with n cities, the time complexity of applying kNN to TSP is O of n squared. Even though it's better than using Branch and Bound with O of 2 to the power of n - 1in most cases we won't find the optimal shortest path.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For a dataset with n cities, the time complexity of applying kNN to TSP is O of n squared. Even though it's better than using Branch and Bound with O of 2 to the power of n - 1in most cases we won't find the optimal shortest path.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 50,
        "text_offset": 4,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 487,
        "text_offset": 6,
        "word_length": 7,
        "text": "dataset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8625000,
        "duration_milliseconds": 137,
        "text_offset": 14,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 125,
        "text_offset": 19,
        "word_length": 1,
        "text": "n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11750000,
        "duration_milliseconds": 387,
        "text_offset": 21,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16500000,
        "duration_milliseconds": 150,
        "text_offset": 27,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 18000000,
        "duration_milliseconds": 125,
        "text_offset": 29,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19500000,
        "duration_milliseconds": 250,
        "text_offset": 33,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 625,
        "text_offset": 38,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 62,
        "text_offset": 49,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 387,
        "text_offset": 52,
        "word_length": 8,
        "text": "applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 512,
        "text_offset": 61,
        "word_length": 3,
        "text": "kNN",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38875000,
        "duration_milliseconds": 100,
        "text_offset": 65,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40125000,
        "duration_milliseconds": 587,
        "text_offset": 68,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 162,
        "text_offset": 72,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 137,
        "text_offset": 75,
        "word_length": 1,
        "text": "O",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49750000,
        "duration_milliseconds": 100,
        "text_offset": 77,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 112,
        "text_offset": 80,
        "word_length": 1,
        "text": "n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52250000,
        "duration_milliseconds": 512,
        "text_offset": 82,
        "word_length": 7,
        "text": "squared",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57625000,
        "duration_milliseconds": 100,
        "text_offset": 89,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 66125000,
        "duration_milliseconds": 275,
        "text_offset": 91,
        "word_length": 4,
        "text": "Even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69125000,
        "duration_milliseconds": 125,
        "text_offset": 96,
        "word_length": 6,
        "text": "though",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70625000,
        "duration_milliseconds": 150,
        "text_offset": 103,
        "word_length": 4,
        "text": "it's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72250000,
        "duration_milliseconds": 287,
        "text_offset": 108,
        "word_length": 6,
        "text": "better",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75250000,
        "duration_milliseconds": 137,
        "text_offset": 115,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76875000,
        "duration_milliseconds": 300,
        "text_offset": 120,
        "word_length": 5,
        "text": "using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80125000,
        "duration_milliseconds": 337,
        "text_offset": 126,
        "word_length": 6,
        "text": "Branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83750000,
        "duration_milliseconds": 100,
        "text_offset": 133,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85000000,
        "duration_milliseconds": 262,
        "text_offset": 137,
        "word_length": 5,
        "text": "Bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87750000,
        "duration_milliseconds": 125,
        "text_offset": 143,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89250000,
        "duration_milliseconds": 112,
        "text_offset": 148,
        "word_length": 1,
        "text": "O",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90625000,
        "duration_milliseconds": 100,
        "text_offset": 150,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91875000,
        "duration_milliseconds": 175,
        "text_offset": 153,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93875000,
        "duration_milliseconds": 87,
        "text_offset": 155,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94875000,
        "duration_milliseconds": 112,
        "text_offset": 158,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96125000,
        "duration_milliseconds": 325,
        "text_offset": 162,
        "word_length": 5,
        "text": "power",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99625000,
        "duration_milliseconds": 100,
        "text_offset": 168,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100875000,
        "duration_milliseconds": 150,
        "text_offset": 171,
        "word_length": 1,
        "text": "n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103375000,
        "duration_milliseconds": 387,
        "text_offset": 175,
        "word_length": 3,
        "text": "1in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107500000,
        "duration_milliseconds": 237,
        "text_offset": 179,
        "word_length": 4,
        "text": "most",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110125000,
        "duration_milliseconds": 350,
        "text_offset": 184,
        "word_length": 5,
        "text": "cases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113875000,
        "duration_milliseconds": 100,
        "text_offset": 190,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115125000,
        "duration_milliseconds": 212,
        "text_offset": 193,
        "word_length": 5,
        "text": "won't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117500000,
        "duration_milliseconds": 237,
        "text_offset": 199,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "duration_milliseconds": 100,
        "text_offset": 204,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121250000,
        "duration_milliseconds": 400,
        "text_offset": 208,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125375000,
        "duration_milliseconds": 350,
        "text_offset": 216,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129125000,
        "duration_milliseconds": 400,
        "text_offset": 225,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133375000,
        "duration_milliseconds": 100,
        "text_offset": 229,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-a-dataset-with-n-cities-the-time-complexity-of-e4add0d8.mp3",
    "final_audio": "for-a-dataset-with-n-cities-the-time-complexity-of-e4add0d8.mp3"
  },
  {
    "input_text": "In the following we will explain the christofides algorithm.",
    "input_data": {
      "input_text": "In the following we will explain the christofides algorithm.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">In the following we will explain the christofides algorithm.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">In the following we will explain the christofides algorithm.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3625000,
        "duration_milliseconds": 450,
        "text_offset": 7,
        "word_length": 9,
        "text": "following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 125,
        "text_offset": 17,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 137,
        "text_offset": 20,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 412,
        "text_offset": 25,
        "word_length": 7,
        "text": "explain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 112,
        "text_offset": 33,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 875,
        "text_offset": 37,
        "word_length": 12,
        "text": "christofides",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26250000,
        "duration_milliseconds": 650,
        "text_offset": 50,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32875000,
        "duration_milliseconds": 100,
        "text_offset": 59,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "in-the-following-we-will-explain-the-christofides-58294570.mp3",
    "final_audio": "in-the-following-we-will-explain-the-christofides-58294570.mp3"
  },
  {
    "input_text": "This is an approximated algorithm to solve the TSP with a n to the third power complexity. This algorithm guarantees a solution that is at most fifthy percent longer than the optimal round trip.",
    "input_data": {
      "input_text": "This is an approximated algorithm to solve the TSP with a n to the third power complexity. This algorithm guarantees a solution that is at most fifthy percent longer than the optimal round trip.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is an approximated algorithm to solve the TSP with a n to the third power complexity. This algorithm guarantees a solution that is at most fifthy percent longer than the optimal round trip.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is an approximated algorithm to solve the TSP with a n to the third power complexity. This algorithm guarantees a solution that is at most fifthy percent longer than the optimal round trip.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 112,
        "text_offset": 5,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4375000,
        "duration_milliseconds": 87,
        "text_offset": 8,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5500000,
        "duration_milliseconds": 762,
        "text_offset": 11,
        "word_length": 12,
        "text": "approximated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13375000,
        "duration_milliseconds": 562,
        "text_offset": 24,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19250000,
        "duration_milliseconds": 100,
        "text_offset": 34,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 300,
        "text_offset": 37,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24750000,
        "duration_milliseconds": 562,
        "text_offset": 47,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30500000,
        "duration_milliseconds": 162,
        "text_offset": 51,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32375000,
        "duration_milliseconds": 112,
        "text_offset": 56,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33750000,
        "duration_milliseconds": 200,
        "text_offset": 58,
        "word_length": 1,
        "text": "n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36000000,
        "duration_milliseconds": 100,
        "text_offset": 60,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37125000,
        "duration_milliseconds": 112,
        "text_offset": 63,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38500000,
        "duration_milliseconds": 262,
        "text_offset": 67,
        "word_length": 5,
        "text": "third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41250000,
        "duration_milliseconds": 287,
        "text_offset": 73,
        "word_length": 5,
        "text": "power",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44375000,
        "duration_milliseconds": 812,
        "text_offset": 79,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52750000,
        "duration_milliseconds": 100,
        "text_offset": 89,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 61375000,
        "duration_milliseconds": 225,
        "text_offset": 91,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63875000,
        "duration_milliseconds": 562,
        "text_offset": 96,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69750000,
        "duration_milliseconds": 525,
        "text_offset": 106,
        "word_length": 10,
        "text": "guarantees",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75250000,
        "duration_milliseconds": 62,
        "text_offset": 117,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76125000,
        "duration_milliseconds": 475,
        "text_offset": 119,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81125000,
        "duration_milliseconds": 125,
        "text_offset": 128,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "duration_milliseconds": 112,
        "text_offset": 133,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83875000,
        "duration_milliseconds": 100,
        "text_offset": 136,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85125000,
        "duration_milliseconds": 275,
        "text_offset": 139,
        "word_length": 4,
        "text": "most",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88125000,
        "duration_milliseconds": 300,
        "text_offset": 144,
        "word_length": 6,
        "text": "fifthy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91375000,
        "duration_milliseconds": 425,
        "text_offset": 151,
        "word_length": 7,
        "text": "percent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95750000,
        "duration_milliseconds": 337,
        "text_offset": 159,
        "word_length": 6,
        "text": "longer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99250000,
        "duration_milliseconds": 125,
        "text_offset": 166,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100750000,
        "duration_milliseconds": 112,
        "text_offset": 171,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102125000,
        "duration_milliseconds": 437,
        "text_offset": 175,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106625000,
        "duration_milliseconds": 225,
        "text_offset": 183,
        "word_length": 5,
        "text": "round",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109000000,
        "duration_milliseconds": 312,
        "text_offset": 189,
        "word_length": 4,
        "text": "trip",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112250000,
        "duration_milliseconds": 100,
        "text_offset": 193,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-is-an-approximated-algorithm-to-solve-the-tsp-40363e50.mp3",
    "final_audio": "this-is-an-approximated-algorithm-to-solve-the-tsp-40363e50.mp3"
  },
  {
    "input_text": "First we will create a minimal spanning tree with every node by using the algrithm of Prim.",
    "input_data": {
      "input_text": "First we will create a minimal spanning tree with every node by using the algrithm of Prim.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">First we will create a minimal spanning tree with every node by using the algrithm of Prim.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">First we will create a minimal spanning tree with every node by using the algrithm of Prim.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 375,
        "text_offset": 0,
        "word_length": 5,
        "text": "First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 112,
        "text_offset": 6,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5750000,
        "duration_milliseconds": 137,
        "text_offset": 9,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 312,
        "text_offset": 14,
        "word_length": 6,
        "text": "create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10750000,
        "duration_milliseconds": 50,
        "text_offset": 21,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11375000,
        "duration_milliseconds": 375,
        "text_offset": 23,
        "word_length": 7,
        "text": "minimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 387,
        "text_offset": 31,
        "word_length": 8,
        "text": "spanning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19375000,
        "duration_milliseconds": 212,
        "text_offset": 40,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 187,
        "text_offset": 45,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 225,
        "text_offset": 50,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26250000,
        "duration_milliseconds": 275,
        "text_offset": 56,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29250000,
        "duration_milliseconds": 112,
        "text_offset": 61,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 362,
        "text_offset": 64,
        "word_length": 5,
        "text": "using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34500000,
        "duration_milliseconds": 112,
        "text_offset": 70,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35875000,
        "duration_milliseconds": 475,
        "text_offset": 74,
        "word_length": 8,
        "text": "algrithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40875000,
        "duration_milliseconds": 112,
        "text_offset": 83,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42250000,
        "duration_milliseconds": 375,
        "text_offset": 86,
        "word_length": 4,
        "text": "Prim",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 100,
        "text_offset": 90,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "first-we-will-create-a-minimal-spanning-tree-with-a812e635.mp3",
    "final_audio": "first-we-will-create-a-minimal-spanning-tree-with-a812e635.mp3"
  },
  {
    "input_text": "Then we search for every node in the graph with an odd degree, meaning an odd number of edges by using the algorithm of Blossom",
    "input_data": {
      "input_text": "Then we search for every node in the graph with an odd degree, meaning an odd number of edges by using the algorithm of Blossom",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Then we search for every node in the graph with an odd degree, meaning an odd number of edges by using the algorithm of Blossom</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Then we search for every node in the graph with an odd degree, meaning an odd number of edges by using the algorithm of Blossom</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 200,
        "text_offset": 0,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2750000,
        "duration_milliseconds": 112,
        "text_offset": 5,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 250,
        "text_offset": 8,
        "word_length": 6,
        "text": "search",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 175,
        "text_offset": 15,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 212,
        "text_offset": 19,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 212,
        "text_offset": 25,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13500000,
        "duration_milliseconds": 62,
        "text_offset": 30,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 100,
        "text_offset": 33,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15625000,
        "duration_milliseconds": 312,
        "text_offset": 37,
        "word_length": 5,
        "text": "graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19000000,
        "duration_milliseconds": 137,
        "text_offset": 43,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 87,
        "text_offset": 48,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21750000,
        "duration_milliseconds": 162,
        "text_offset": 51,
        "word_length": 3,
        "text": "odd",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23500000,
        "duration_milliseconds": 362,
        "text_offset": 55,
        "word_length": 6,
        "text": "degree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28125000,
        "duration_milliseconds": 225,
        "text_offset": 61,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 287,
        "text_offset": 63,
        "word_length": 7,
        "text": "meaning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33750000,
        "duration_milliseconds": 87,
        "text_offset": 71,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34750000,
        "duration_milliseconds": 200,
        "text_offset": 74,
        "word_length": 3,
        "text": "odd",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 312,
        "text_offset": 78,
        "word_length": 6,
        "text": "number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40250000,
        "duration_milliseconds": 75,
        "text_offset": 85,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41250000,
        "duration_milliseconds": 300,
        "text_offset": 88,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "duration_milliseconds": 125,
        "text_offset": 94,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "duration_milliseconds": 362,
        "text_offset": 97,
        "word_length": 5,
        "text": "using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49875000,
        "duration_milliseconds": 112,
        "text_offset": 103,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51250000,
        "duration_milliseconds": 587,
        "text_offset": 107,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57375000,
        "duration_milliseconds": 112,
        "text_offset": 117,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58625000,
        "duration_milliseconds": 475,
        "text_offset": 120,
        "word_length": 7,
        "text": "Blossom",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "then-we-search-for-every-node-in-the-graph-with-an-4910cacf.mp3",
    "final_audio": "then-we-search-for-every-node-in-the-graph-with-an-4910cacf.mp3"
  },
  {
    "input_text": "After finding all the nodes with an odd degree we need to find a minimum perfect matching, so we need to find edges with minimum weight so every node gets an even degree.",
    "input_data": {
      "input_text": "After finding all the nodes with an odd degree we need to find a minimum perfect matching, so we need to find edges with minimum weight so every node gets an even degree.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">After finding all the nodes with an odd degree we need to find a minimum perfect matching, so we need to find edges with minimum weight so every node gets an even degree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">After finding all the nodes with an odd degree we need to find a minimum perfect matching, so we need to find edges with minimum weight so every node gets an even degree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 325,
        "text_offset": 0,
        "word_length": 5,
        "text": "After",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3875000,
        "duration_milliseconds": 350,
        "text_offset": 6,
        "word_length": 7,
        "text": "finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 112,
        "text_offset": 14,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 100,
        "text_offset": 18,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 275,
        "text_offset": 22,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "duration_milliseconds": 112,
        "text_offset": 28,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 100,
        "text_offset": 33,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15625000,
        "duration_milliseconds": 162,
        "text_offset": 36,
        "word_length": 3,
        "text": "odd",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 312,
        "text_offset": 40,
        "word_length": 6,
        "text": "degree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 125,
        "text_offset": 47,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 150,
        "text_offset": 50,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 75,
        "text_offset": 55,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24875000,
        "duration_milliseconds": 237,
        "text_offset": 58,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27500000,
        "duration_milliseconds": 37,
        "text_offset": 63,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28000000,
        "duration_milliseconds": 387,
        "text_offset": 65,
        "word_length": 7,
        "text": "minimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 400,
        "text_offset": 73,
        "word_length": 7,
        "text": "perfect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36250000,
        "duration_milliseconds": 400,
        "text_offset": 81,
        "word_length": 8,
        "text": "matching",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41125000,
        "duration_milliseconds": 187,
        "text_offset": 89,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 43125000,
        "duration_milliseconds": 100,
        "text_offset": 91,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44375000,
        "duration_milliseconds": 87,
        "text_offset": 94,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45500000,
        "duration_milliseconds": 150,
        "text_offset": 97,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47125000,
        "duration_milliseconds": 75,
        "text_offset": 102,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 262,
        "text_offset": 105,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 275,
        "text_offset": 110,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54000000,
        "duration_milliseconds": 162,
        "text_offset": 116,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55875000,
        "duration_milliseconds": 375,
        "text_offset": 121,
        "word_length": 7,
        "text": "minimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59750000,
        "duration_milliseconds": 225,
        "text_offset": 129,
        "word_length": 6,
        "text": "weight",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62250000,
        "duration_milliseconds": 137,
        "text_offset": 136,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63750000,
        "duration_milliseconds": 225,
        "text_offset": 139,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 237,
        "text_offset": 145,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68875000,
        "duration_milliseconds": 175,
        "text_offset": 150,
        "word_length": 4,
        "text": "gets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70750000,
        "duration_milliseconds": 100,
        "text_offset": 155,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "duration_milliseconds": 187,
        "text_offset": 158,
        "word_length": 4,
        "text": "even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74000000,
        "duration_milliseconds": 475,
        "text_offset": 163,
        "word_length": 6,
        "text": "degree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79000000,
        "duration_milliseconds": 100,
        "text_offset": 169,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "after-finding-all-the-nodes-with-an-odd-degree-we-ede0df9f.mp3",
    "final_audio": "after-finding-all-the-nodes-with-an-odd-degree-we-ede0df9f.mp3"
  },
  {
    "input_text": "Then we need to combine the minimum spanning tree with the perfect matching to obtain a multigraph in which every vertex has an even degree.",
    "input_data": {
      "input_text": "Then we need to combine the minimum spanning tree with the perfect matching to obtain a multigraph in which every vertex has an even degree.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Then we need to combine the minimum spanning tree with the perfect matching to obtain a multigraph in which every vertex has an even degree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Then we need to combine the minimum spanning tree with the perfect matching to obtain a multigraph in which every vertex has an even degree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 200,
        "text_offset": 0,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2750000,
        "duration_milliseconds": 100,
        "text_offset": 5,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4000000,
        "duration_milliseconds": 150,
        "text_offset": 8,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 100,
        "text_offset": 13,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 400,
        "text_offset": 16,
        "word_length": 7,
        "text": "combine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11125000,
        "duration_milliseconds": 87,
        "text_offset": 24,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 362,
        "text_offset": 28,
        "word_length": 7,
        "text": "minimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 387,
        "text_offset": 36,
        "word_length": 8,
        "text": "spanning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 212,
        "text_offset": 45,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 137,
        "text_offset": 50,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24250000,
        "duration_milliseconds": 112,
        "text_offset": 55,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25625000,
        "duration_milliseconds": 425,
        "text_offset": 59,
        "word_length": 7,
        "text": "perfect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30000000,
        "duration_milliseconds": 362,
        "text_offset": 67,
        "word_length": 8,
        "text": "matching",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33875000,
        "duration_milliseconds": 125,
        "text_offset": 76,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 300,
        "text_offset": 79,
        "word_length": 6,
        "text": "obtain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38625000,
        "duration_milliseconds": 62,
        "text_offset": 86,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 612,
        "text_offset": 88,
        "word_length": 10,
        "text": "multigraph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 100,
        "text_offset": 99,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47125000,
        "duration_milliseconds": 187,
        "text_offset": 102,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49250000,
        "duration_milliseconds": 212,
        "text_offset": 108,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51625000,
        "duration_milliseconds": 487,
        "text_offset": 114,
        "word_length": 6,
        "text": "vertex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56750000,
        "duration_milliseconds": 175,
        "text_offset": 121,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58750000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60000000,
        "duration_milliseconds": 175,
        "text_offset": 128,
        "word_length": 4,
        "text": "even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61875000,
        "duration_milliseconds": 475,
        "text_offset": 133,
        "word_length": 6,
        "text": "degree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66875000,
        "duration_milliseconds": 100,
        "text_offset": 139,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "then-we-need-to-combine-the-minimum-spanning-tree-4124aaa1.mp3",
    "final_audio": "then-we-need-to-combine-the-minimum-spanning-tree-4124aaa1.mp3"
  },
  {
    "input_text": "Since every vertex has an even degree, there exists an Eulerian circuit in this graph. An Eulerian circuit is a path that visits each edge exactly once. We need to find it.",
    "input_data": {
      "input_text": "Since every vertex has an even degree, there exists an Eulerian circuit in this graph. An Eulerian circuit is a path that visits each edge exactly once. We need to find it.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Since every vertex has an even degree, there exists an Eulerian circuit in this graph. An Eulerian circuit is a path that visits each edge exactly once. We need to find it.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Since every vertex has an even degree, there exists an Eulerian circuit in this graph. An Eulerian circuit is a path that visits each edge exactly once. We need to find it.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 325,
        "text_offset": 0,
        "word_length": 5,
        "text": "Since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4000000,
        "duration_milliseconds": 237,
        "text_offset": 6,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 475,
        "text_offset": 12,
        "word_length": 6,
        "text": "vertex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11625000,
        "duration_milliseconds": 175,
        "text_offset": 19,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 100,
        "text_offset": 23,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14875000,
        "duration_milliseconds": 187,
        "text_offset": 26,
        "word_length": 4,
        "text": "even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17000000,
        "duration_milliseconds": 400,
        "text_offset": 31,
        "word_length": 6,
        "text": "degree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21875000,
        "duration_milliseconds": 112,
        "text_offset": 37,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 23000000,
        "duration_milliseconds": 162,
        "text_offset": 39,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24750000,
        "duration_milliseconds": 425,
        "text_offset": 45,
        "word_length": 6,
        "text": "exists",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29250000,
        "duration_milliseconds": 112,
        "text_offset": 52,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 550,
        "text_offset": 55,
        "word_length": 8,
        "text": "Eulerian",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36375000,
        "duration_milliseconds": 375,
        "text_offset": 64,
        "word_length": 7,
        "text": "circuit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40375000,
        "duration_milliseconds": 87,
        "text_offset": 72,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41500000,
        "duration_milliseconds": 175,
        "text_offset": 75,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43375000,
        "duration_milliseconds": 575,
        "text_offset": 80,
        "word_length": 5,
        "text": "graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49375000,
        "duration_milliseconds": 100,
        "text_offset": 85,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 58000000,
        "duration_milliseconds": 175,
        "text_offset": 87,
        "word_length": 2,
        "text": "An",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60000000,
        "duration_milliseconds": 512,
        "text_offset": 90,
        "word_length": 8,
        "text": "Eulerian",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65375000,
        "duration_milliseconds": 375,
        "text_offset": 99,
        "word_length": 7,
        "text": "circuit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69250000,
        "duration_milliseconds": 125,
        "text_offset": 107,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70750000,
        "duration_milliseconds": 62,
        "text_offset": 110,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71625000,
        "duration_milliseconds": 312,
        "text_offset": 112,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75000000,
        "duration_milliseconds": 150,
        "text_offset": 117,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76750000,
        "duration_milliseconds": 350,
        "text_offset": 122,
        "word_length": 6,
        "text": "visits",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80500000,
        "duration_milliseconds": 212,
        "text_offset": 129,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82875000,
        "duration_milliseconds": 150,
        "text_offset": 134,
        "word_length": 4,
        "text": "edge",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84625000,
        "duration_milliseconds": 487,
        "text_offset": 139,
        "word_length": 7,
        "text": "exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89750000,
        "duration_milliseconds": 475,
        "text_offset": 147,
        "word_length": 4,
        "text": "once",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94750000,
        "duration_milliseconds": 100,
        "text_offset": 151,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 103375000,
        "duration_milliseconds": 212,
        "text_offset": 153,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105750000,
        "duration_milliseconds": 212,
        "text_offset": 156,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108000000,
        "duration_milliseconds": 100,
        "text_offset": 161,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109250000,
        "duration_milliseconds": 337,
        "text_offset": 164,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112750000,
        "duration_milliseconds": 187,
        "text_offset": 169,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114750000,
        "duration_milliseconds": 100,
        "text_offset": 171,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "since-every-vertex-has-an-even-degree-there-exists-55f4780e.mp3",
    "final_audio": "since-every-vertex-has-an-even-degree-there-exists-55f4780e.mp3"
  },
  {
    "input_text": "Now we convert the Eulerian circuit to a Hamiltonian circuit by skipping repeated vertices.",
    "input_data": {
      "input_text": "Now we convert the Eulerian circuit to a Hamiltonian circuit by skipping repeated vertices.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we convert the Eulerian circuit to a Hamiltonian circuit by skipping repeated vertices.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we convert the Eulerian circuit to a Hamiltonian circuit by skipping repeated vertices.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 125,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 375,
        "text_offset": 7,
        "word_length": 7,
        "text": "convert",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8625000,
        "duration_milliseconds": 75,
        "text_offset": 15,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9625000,
        "duration_milliseconds": 512,
        "text_offset": 19,
        "word_length": 8,
        "text": "Eulerian",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 375,
        "text_offset": 28,
        "word_length": 7,
        "text": "circuit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19000000,
        "duration_milliseconds": 125,
        "text_offset": 36,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "duration_milliseconds": 50,
        "text_offset": 39,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 712,
        "text_offset": 41,
        "word_length": 11,
        "text": "Hamiltonian",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 387,
        "text_offset": 53,
        "word_length": 7,
        "text": "circuit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 150,
        "text_offset": 61,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34500000,
        "duration_milliseconds": 462,
        "text_offset": 64,
        "word_length": 8,
        "text": "skipping",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39250000,
        "duration_milliseconds": 437,
        "text_offset": 73,
        "word_length": 8,
        "text": "repeated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43750000,
        "duration_milliseconds": 650,
        "text_offset": 82,
        "word_length": 8,
        "text": "vertices",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50500000,
        "duration_milliseconds": 100,
        "text_offset": 90,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-convert-the-eulerian-circuit-to-a-681fc7ee.mp3",
    "final_audio": "now-we-convert-the-eulerian-circuit-to-a-681fc7ee.mp3"
  },
  {
    "input_text": "Let's take a look at the graph to visualize this algorithm.",
    "input_data": {
      "input_text": "Let's take a look at the graph to visualize this algorithm.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's take a look at the graph to visualize this algorithm.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's take a look at the graph to visualize this algorithm.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 300,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3625000,
        "duration_milliseconds": 187,
        "text_offset": 6,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5750000,
        "duration_milliseconds": 62,
        "text_offset": 11,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 225,
        "text_offset": 13,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 75,
        "text_offset": 18,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 112,
        "text_offset": 21,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 325,
        "text_offset": 25,
        "word_length": 5,
        "text": "graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 100,
        "text_offset": 31,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16250000,
        "duration_milliseconds": 600,
        "text_offset": 34,
        "word_length": 9,
        "text": "visualize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22500000,
        "duration_milliseconds": 187,
        "text_offset": 44,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24625000,
        "duration_milliseconds": 625,
        "text_offset": 49,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31125000,
        "duration_milliseconds": 100,
        "text_offset": 58,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-take-a-look-at-the-graph-to-visualize-this-9d847c49.mp3",
    "final_audio": "let-s-take-a-look-at-the-graph-to-visualize-this-9d847c49.mp3"
  },
  {
    "input_text": "Like explained before we create a minimal spanning tree.",
    "input_data": {
      "input_text": "Like explained before we create a minimal spanning tree.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Like explained before we create a minimal spanning tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Like explained before we create a minimal spanning tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 4,
        "text": "Like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 500,
        "text_offset": 5,
        "word_length": 9,
        "text": "explained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 337,
        "text_offset": 15,
        "word_length": 6,
        "text": "before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11750000,
        "duration_milliseconds": 125,
        "text_offset": 22,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 337,
        "text_offset": 25,
        "word_length": 6,
        "text": "create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16875000,
        "duration_milliseconds": 50,
        "text_offset": 32,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 375,
        "text_offset": 34,
        "word_length": 7,
        "text": "minimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21500000,
        "duration_milliseconds": 400,
        "text_offset": 42,
        "word_length": 8,
        "text": "spanning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25750000,
        "duration_milliseconds": 350,
        "text_offset": 51,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29500000,
        "duration_milliseconds": 100,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "like-explained-before-we-create-a-minimal-spanning-e52468aa.mp3",
    "final_audio": "like-explained-before-we-create-a-minimal-spanning-e52468aa.mp3"
  },
  {
    "input_text": "Now we point out every node with an odd degree",
    "input_data": {
      "input_text": "Now we point out every node with an odd degree",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we point out every node with an odd degree</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we point out every node with an odd degree</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 250,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 125,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 262,
        "text_offset": 7,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 200,
        "text_offset": 13,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9625000,
        "duration_milliseconds": 225,
        "text_offset": 17,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12125000,
        "duration_milliseconds": 262,
        "text_offset": 23,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 137,
        "text_offset": 28,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16625000,
        "duration_milliseconds": 112,
        "text_offset": 33,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17875000,
        "duration_milliseconds": 162,
        "text_offset": 36,
        "word_length": 3,
        "text": "odd",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19625000,
        "duration_milliseconds": 450,
        "text_offset": 40,
        "word_length": 6,
        "text": "degree",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "now-we-point-out-every-node-with-an-odd-degree-5597e615.mp3",
    "final_audio": "now-we-point-out-every-node-with-an-odd-degree-5597e615.mp3"
  },
  {
    "input_text": "We can now point out the minimal perfect matching, so we add edges with the minimum weight until every node has an even degree.",
    "input_data": {
      "input_text": "We can now point out the minimal perfect matching, so we add edges with the minimum weight until every node has an even degree.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We can now point out the minimal perfect matching, so we add edges with the minimum weight until every node has an even degree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We can now point out the minimal perfect matching, so we add edges with the minimum weight until every node has an even degree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 137,
        "text_offset": 3,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 162,
        "text_offset": 7,
        "word_length": 3,
        "text": "now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 237,
        "text_offset": 11,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 125,
        "text_offset": 17,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 87,
        "text_offset": 21,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11125000,
        "duration_milliseconds": 375,
        "text_offset": 25,
        "word_length": 7,
        "text": "minimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15125000,
        "duration_milliseconds": 412,
        "text_offset": 33,
        "word_length": 7,
        "text": "perfect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19375000,
        "duration_milliseconds": 387,
        "text_offset": 41,
        "word_length": 8,
        "text": "matching",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24125000,
        "duration_milliseconds": 175,
        "text_offset": 49,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 25875000,
        "duration_milliseconds": 112,
        "text_offset": 51,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 125,
        "text_offset": 54,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28750000,
        "duration_milliseconds": 162,
        "text_offset": 57,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 287,
        "text_offset": 61,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33750000,
        "duration_milliseconds": 137,
        "text_offset": 67,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 75,
        "text_offset": 72,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36250000,
        "duration_milliseconds": 387,
        "text_offset": 76,
        "word_length": 7,
        "text": "minimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40375000,
        "duration_milliseconds": 225,
        "text_offset": 84,
        "word_length": 6,
        "text": "weight",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42750000,
        "duration_milliseconds": 337,
        "text_offset": 91,
        "word_length": 5,
        "text": "until",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 212,
        "text_offset": 97,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 225,
        "text_offset": 103,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51125000,
        "duration_milliseconds": 187,
        "text_offset": 108,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53250000,
        "duration_milliseconds": 100,
        "text_offset": 112,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54500000,
        "duration_milliseconds": 175,
        "text_offset": 115,
        "word_length": 4,
        "text": "even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56375000,
        "duration_milliseconds": 487,
        "text_offset": 120,
        "word_length": 6,
        "text": "degree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61500000,
        "duration_milliseconds": 100,
        "text_offset": 126,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-can-now-point-out-the-minimal-perfect-matching-4272e54c.mp3",
    "final_audio": "we-can-now-point-out-the-minimal-perfect-matching-4272e54c.mp3"
  },
  {
    "input_text": "Now we are going to find an eulerian tour which hits every edge exact once.",
    "input_data": {
      "input_text": "Now we are going to find an eulerian tour which hits every edge exact once.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we are going to find an eulerian tour which hits every edge exact once.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we are going to find an eulerian tour which hits every edge exact once.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 250,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 100,
        "text_offset": 7,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 200,
        "text_offset": 11,
        "word_length": 5,
        "text": "going",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 75,
        "text_offset": 17,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 275,
        "text_offset": 20,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 75,
        "text_offset": 25,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 525,
        "text_offset": 28,
        "word_length": 8,
        "text": "eulerian",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18375000,
        "duration_milliseconds": 312,
        "text_offset": 37,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21750000,
        "duration_milliseconds": 175,
        "text_offset": 42,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 237,
        "text_offset": 48,
        "word_length": 4,
        "text": "hits",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26250000,
        "duration_milliseconds": 275,
        "text_offset": 53,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29125000,
        "duration_milliseconds": 175,
        "text_offset": 59,
        "word_length": 4,
        "text": "edge",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31000000,
        "duration_milliseconds": 412,
        "text_offset": 64,
        "word_length": 5,
        "text": "exact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 387,
        "text_offset": 70,
        "word_length": 4,
        "text": "once",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39375000,
        "duration_milliseconds": 100,
        "text_offset": 74,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-are-going-to-find-an-eulerian-tour-which-936a3eb7.mp3",
    "final_audio": "now-we-are-going-to-find-an-eulerian-tour-which-936a3eb7.mp3"
  },
  {
    "input_text": "The last step will be to convert the euleric circle into a hamilton circle, so we have to delete all edges which make the circle visit a node which we have seen before. In our case these are the edges between 9 and 4.",
    "input_data": {
      "input_text": "The last step will be to convert the euleric circle into a hamilton circle, so we have to delete all edges which make the circle visit a node which we have seen before. In our case these are the edges between 9 and 4.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The last step will be to convert the euleric circle into a hamilton circle, so we have to delete all edges which make the circle visit a node which we have seen before. In our case these are the edges between 9 and 4.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The last step will be to convert the euleric circle into a hamilton circle, so we have to delete all edges which make the circle visit a node which we have seen before. In our case these are the edges between 9 and 4.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 250,
        "text_offset": 4,
        "word_length": 4,
        "text": "last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 250,
        "text_offset": 9,
        "word_length": 4,
        "text": "step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 87,
        "text_offset": 14,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 112,
        "text_offset": 19,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 100,
        "text_offset": 22,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 400,
        "text_offset": 25,
        "word_length": 7,
        "text": "convert",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15500000,
        "duration_milliseconds": 75,
        "text_offset": 33,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16500000,
        "duration_milliseconds": 412,
        "text_offset": 37,
        "word_length": 7,
        "text": "euleric",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 387,
        "text_offset": 45,
        "word_length": 6,
        "text": "circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24875000,
        "duration_milliseconds": 200,
        "text_offset": 52,
        "word_length": 4,
        "text": "into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27125000,
        "duration_milliseconds": 37,
        "text_offset": 57,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27625000,
        "duration_milliseconds": 462,
        "text_offset": 59,
        "word_length": 8,
        "text": "hamilton",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32500000,
        "duration_milliseconds": 400,
        "text_offset": 68,
        "word_length": 6,
        "text": "circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37500000,
        "duration_milliseconds": 187,
        "text_offset": 74,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 39375000,
        "duration_milliseconds": 100,
        "text_offset": 76,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40500000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41750000,
        "duration_milliseconds": 150,
        "text_offset": 82,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43375000,
        "duration_milliseconds": 87,
        "text_offset": 87,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44375000,
        "duration_milliseconds": 312,
        "text_offset": 90,
        "word_length": 6,
        "text": "delete",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47750000,
        "duration_milliseconds": 225,
        "text_offset": 97,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50250000,
        "duration_milliseconds": 300,
        "text_offset": 101,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53500000,
        "duration_milliseconds": 187,
        "text_offset": 107,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55500000,
        "duration_milliseconds": 175,
        "text_offset": 113,
        "word_length": 4,
        "text": "make",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57500000,
        "duration_milliseconds": 100,
        "text_offset": 118,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58750000,
        "duration_milliseconds": 375,
        "text_offset": 122,
        "word_length": 6,
        "text": "circle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62625000,
        "duration_milliseconds": 287,
        "text_offset": 129,
        "word_length": 5,
        "text": "visit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65750000,
        "duration_milliseconds": 37,
        "text_offset": 135,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 275,
        "text_offset": 137,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69250000,
        "duration_milliseconds": 187,
        "text_offset": 142,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71250000,
        "duration_milliseconds": 125,
        "text_offset": 148,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72750000,
        "duration_milliseconds": 112,
        "text_offset": 151,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74000000,
        "duration_milliseconds": 225,
        "text_offset": 156,
        "word_length": 4,
        "text": "seen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76500000,
        "duration_milliseconds": 525,
        "text_offset": 161,
        "word_length": 6,
        "text": "before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82000000,
        "duration_milliseconds": 100,
        "text_offset": 167,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 90625000,
        "duration_milliseconds": 162,
        "text_offset": 169,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92500000,
        "duration_milliseconds": 125,
        "text_offset": 172,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93875000,
        "duration_milliseconds": 262,
        "text_offset": 176,
        "word_length": 4,
        "text": "case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96750000,
        "duration_milliseconds": 212,
        "text_offset": 181,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99125000,
        "duration_milliseconds": 100,
        "text_offset": 187,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100250000,
        "duration_milliseconds": 87,
        "text_offset": 191,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101375000,
        "duration_milliseconds": 387,
        "text_offset": 195,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105500000,
        "duration_milliseconds": 362,
        "text_offset": 201,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109375000,
        "duration_milliseconds": 250,
        "text_offset": 209,
        "word_length": 1,
        "text": "9",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112000000,
        "duration_milliseconds": 87,
        "text_offset": 211,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113125000,
        "duration_milliseconds": 487,
        "text_offset": 215,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118250000,
        "duration_milliseconds": 100,
        "text_offset": 216,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-last-step-will-be-to-convert-the-euleric-258b7ed7.mp3",
    "final_audio": "the-last-step-will-be-to-convert-the-euleric-258b7ed7.mp3"
  },
  {
    "input_text": "If we take a look at the time complexity of the Christofides algorithm it is mainly determined by the step of finding a minimum perfect matching, which is n to the third power.",
    "input_data": {
      "input_text": "If we take a look at the time complexity of the Christofides algorithm it is mainly determined by the step of finding a minimum perfect matching, which is n to the third power.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">If we take a look at the time complexity of the Christofides algorithm it is mainly determined by the step of finding a minimum perfect matching, which is n to the third power.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">If we take a look at the time complexity of the Christofides algorithm it is mainly determined by the step of finding a minimum perfect matching, which is n to the third power.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3875000,
        "duration_milliseconds": 175,
        "text_offset": 6,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5750000,
        "duration_milliseconds": 62,
        "text_offset": 11,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 200,
        "text_offset": 13,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 62,
        "text_offset": 18,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9750000,
        "duration_milliseconds": 100,
        "text_offset": 21,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 275,
        "text_offset": 25,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13875000,
        "duration_milliseconds": 650,
        "text_offset": 30,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 62,
        "text_offset": 41,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21500000,
        "duration_milliseconds": 87,
        "text_offset": 44,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 750,
        "text_offset": 48,
        "word_length": 12,
        "text": "Christofides",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30375000,
        "duration_milliseconds": 525,
        "text_offset": 61,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35875000,
        "duration_milliseconds": 87,
        "text_offset": 71,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36875000,
        "duration_milliseconds": 125,
        "text_offset": 74,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38250000,
        "duration_milliseconds": 325,
        "text_offset": 77,
        "word_length": 6,
        "text": "mainly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41750000,
        "duration_milliseconds": 512,
        "text_offset": 84,
        "word_length": 10,
        "text": "determined",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47125000,
        "duration_milliseconds": 125,
        "text_offset": 95,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48500000,
        "duration_milliseconds": 112,
        "text_offset": 98,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49875000,
        "duration_milliseconds": 250,
        "text_offset": 102,
        "word_length": 4,
        "text": "step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52500000,
        "duration_milliseconds": 112,
        "text_offset": 107,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53875000,
        "duration_milliseconds": 375,
        "text_offset": 110,
        "word_length": 7,
        "text": "finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57875000,
        "duration_milliseconds": 50,
        "text_offset": 118,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58500000,
        "duration_milliseconds": 400,
        "text_offset": 120,
        "word_length": 7,
        "text": "minimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62750000,
        "duration_milliseconds": 400,
        "text_offset": 128,
        "word_length": 7,
        "text": "perfect",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66875000,
        "duration_milliseconds": 387,
        "text_offset": 136,
        "word_length": 8,
        "text": "matching",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71625000,
        "duration_milliseconds": 162,
        "text_offset": 144,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 73250000,
        "duration_milliseconds": 175,
        "text_offset": 146,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75125000,
        "duration_milliseconds": 125,
        "text_offset": 152,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76625000,
        "duration_milliseconds": 112,
        "text_offset": 155,
        "word_length": 1,
        "text": "n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78000000,
        "duration_milliseconds": 87,
        "text_offset": 157,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79125000,
        "duration_milliseconds": 112,
        "text_offset": 160,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80500000,
        "duration_milliseconds": 250,
        "text_offset": 164,
        "word_length": 5,
        "text": "third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83125000,
        "duration_milliseconds": 425,
        "text_offset": 170,
        "word_length": 5,
        "text": "power",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87625000,
        "duration_milliseconds": 100,
        "text_offset": 175,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "if-we-take-a-look-at-the-time-complexity-of-the-4a4a3752.mp3",
    "final_audio": "if-we-take-a-look-at-the-time-complexity-of-the-4a4a3752.mp3"
  },
  {
    "input_text": "Now we go on with the next topic",
    "input_data": {
      "input_text": "Now we go on with the next topic",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we go on with the next topic</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we go on with the next topic</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 137,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 250,
        "text_offset": 7,
        "word_length": 2,
        "text": "go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 125,
        "text_offset": 13,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 87,
        "text_offset": 18,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 250,
        "text_offset": 22,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 437,
        "text_offset": 27,
        "word_length": 5,
        "text": "topic",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "now-we-go-on-with-the-next-topic-a0c0909b.mp3",
    "final_audio": "now-we-go-on-with-the-next-topic-a0c0909b.mp3"
  },
  {
    "input_text": "Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.",
    "input_data": {
      "input_text": "Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 450,
        "text_offset": 0,
        "word_length": 7,
        "text": "Welcome",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 262,
        "text_offset": 8,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8125000,
        "duration_milliseconds": 487,
        "text_offset": 13,
        "word_length": 4,
        "text": "guys",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 100,
        "text_offset": 17,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 21750000,
        "duration_milliseconds": 412,
        "text_offset": 19,
        "word_length": 5,
        "text": "Today",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26875000,
        "duration_milliseconds": 125,
        "text_offset": 24,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 28125000,
        "duration_milliseconds": 137,
        "text_offset": 26,
        "word_length": 5,
        "text": "we're",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 375,
        "text_offset": 32,
        "word_length": 6,
        "text": "diving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 150,
        "text_offset": 39,
        "word_length": 4,
        "text": "into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 112,
        "text_offset": 44,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36750000,
        "duration_milliseconds": 425,
        "text_offset": 48,
        "word_length": 9,
        "text": "Traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41250000,
        "duration_milliseconds": 712,
        "text_offset": 58,
        "word_length": 11,
        "text": "Salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 450,
        "text_offset": 70,
        "word_length": 7,
        "text": "Problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53250000,
        "duration_milliseconds": 100,
        "text_offset": 77,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "welcome-back-guys-today-we-re-diving-into-the-d4a4871f.mp3",
    "final_audio": "welcome-back-guys-today-we-re-diving-into-the-d4a4871f.mp3"
  },
  {
    "input_text": "Imagine we have a traveling salesperson - tasked with selling your products in various cities.",
    "input_data": {
      "input_text": "Imagine we have a traveling salesperson - tasked with selling your products in various cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Imagine we have a traveling salesperson - tasked with selling your products in various cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Imagine we have a traveling salesperson - tasked with selling your products in various cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 512,
        "text_offset": 0,
        "word_length": 7,
        "text": "Imagine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 112,
        "text_offset": 8,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 137,
        "text_offset": 11,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 62,
        "text_offset": 16,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 425,
        "text_offset": 18,
        "word_length": 9,
        "text": "traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13875000,
        "duration_milliseconds": 712,
        "text_offset": 28,
        "word_length": 11,
        "text": "salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 350,
        "text_offset": 42,
        "word_length": 6,
        "text": "tasked",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25875000,
        "duration_milliseconds": 112,
        "text_offset": 49,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 312,
        "text_offset": 54,
        "word_length": 7,
        "text": "selling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 137,
        "text_offset": 62,
        "word_length": 4,
        "text": "your",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32250000,
        "duration_milliseconds": 437,
        "text_offset": 67,
        "word_length": 8,
        "text": "products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36875000,
        "duration_milliseconds": 125,
        "text_offset": 76,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38375000,
        "duration_milliseconds": 375,
        "text_offset": 79,
        "word_length": 7,
        "text": "various",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 450,
        "text_offset": 87,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47125000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "imagine-we-have-a-traveling-salesperson-tasked-0830d9fe.mp3",
    "final_audio": "imagine-we-have-a-traveling-salesperson-tasked-0830d9fe.mp3"
  },
  {
    "input_text": "This guy is Alex, a salesperson with a big challenge.",
    "input_data": {
      "input_text": "This guy is Alex, a salesperson with a big challenge.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This guy is Alex, a salesperson with a big challenge.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This guy is Alex, a salesperson with a big challenge.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 175,
        "text_offset": 5,
        "word_length": 3,
        "text": "guy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 150,
        "text_offset": 9,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 362,
        "text_offset": 12,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 62,
        "text_offset": 16,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 62,
        "text_offset": 18,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 712,
        "text_offset": 20,
        "word_length": 11,
        "text": "salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "duration_milliseconds": 137,
        "text_offset": 32,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 62,
        "text_offset": 37,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 200,
        "text_offset": 39,
        "word_length": 3,
        "text": "big",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24625000,
        "duration_milliseconds": 550,
        "text_offset": 43,
        "word_length": 9,
        "text": "challenge",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 100,
        "text_offset": 52,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-guy-is-alex-a-salesperson-with-a-big-339dcb93.mp3",
    "final_audio": "this-guy-is-alex-a-salesperson-with-a-big-339dcb93.mp3"
  },
  {
    "input_text": "Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.",
    "input_data": {
      "input_text": "Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 375,
        "text_offset": 0,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 175,
        "text_offset": 5,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 87,
        "text_offset": 9,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 237,
        "text_offset": 12,
        "word_length": 4,
        "text": "sell",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 425,
        "text_offset": 17,
        "word_length": 8,
        "text": "products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 112,
        "text_offset": 26,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 375,
        "text_offset": 29,
        "word_length": 7,
        "text": "various",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20125000,
        "duration_milliseconds": 337,
        "text_offset": 37,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 100,
        "text_offset": 44,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24875000,
        "duration_milliseconds": 237,
        "text_offset": 48,
        "word_length": 5,
        "text": "wants",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27500000,
        "duration_milliseconds": 87,
        "text_offset": 54,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 200,
        "text_offset": 57,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30875000,
        "duration_milliseconds": 87,
        "text_offset": 62,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 437,
        "text_offset": 66,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36500000,
        "duration_milliseconds": 175,
        "text_offset": 75,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38500000,
        "duration_milliseconds": 100,
        "text_offset": 81,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39625000,
        "duration_milliseconds": 262,
        "text_offset": 84,
        "word_length": 4,
        "text": "save",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 375,
        "text_offset": 89,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46375000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 150,
        "text_offset": 95,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56750000,
        "duration_milliseconds": 125,
        "text_offset": 99,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58125000,
        "duration_milliseconds": 200,
        "text_offset": 103,
        "word_length": 4,
        "text": "does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60375000,
        "duration_milliseconds": 375,
        "text_offset": 108,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64375000,
        "duration_milliseconds": 362,
        "text_offset": 113,
        "word_length": 6,
        "text": "figure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68250000,
        "duration_milliseconds": 125,
        "text_offset": 120,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69750000,
        "duration_milliseconds": 100,
        "text_offset": 124,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70875000,
        "duration_milliseconds": 250,
        "text_offset": 128,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73625000,
        "duration_milliseconds": 362,
        "text_offset": 133,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 100,
        "text_offset": 138,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 85875000,
        "duration_milliseconds": 300,
        "text_offset": 140,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "duration_milliseconds": 300,
        "text_offset": 146,
        "word_length": 4,
        "text": "dive",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92250000,
        "duration_milliseconds": 162,
        "text_offset": 151,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "duration_milliseconds": 87,
        "text_offset": 154,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95125000,
        "duration_milliseconds": 212,
        "text_offset": 158,
        "word_length": 4,
        "text": "help",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 350,
        "text_offset": 163,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101250000,
        "duration_milliseconds": 250,
        "text_offset": 168,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103875000,
        "duration_milliseconds": 175,
        "text_offset": 174,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105750000,
        "duration_milliseconds": 462,
        "text_offset": 179,
        "word_length": 6,
        "text": "puzzle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110625000,
        "duration_milliseconds": 100,
        "text_offset": 185,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "alex-has-to-sell-products-in-various-cities-and-575f7417.mp3",
    "final_audio": "alex-has-to-sell-products-in-various-cities-and-575f7417.mp3"
  },
  {
    "input_text": "Let's say he needs to visit 4 cities.",
    "input_data": {
      "input_text": "Let's say he needs to visit 4 cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's say he needs to visit 4 cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's say he needs to visit 4 cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 187,
        "text_offset": 6,
        "word_length": 3,
        "text": "say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 125,
        "text_offset": 10,
        "word_length": 2,
        "text": "he",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 262,
        "text_offset": 13,
        "word_length": 5,
        "text": "needs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 100,
        "text_offset": 19,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 312,
        "text_offset": 22,
        "word_length": 5,
        "text": "visit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 225,
        "text_offset": 28,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17125000,
        "duration_milliseconds": 512,
        "text_offset": 30,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-say-he-needs-to-visit-4-cities-62950463.mp3",
    "final_audio": "let-s-say-he-needs-to-visit-4-cities-62950463.mp3"
  },
  {
    "input_text": "Sounds straightforward, right? What do you think happens if we add one more city to Alex's route?",
    "input_data": {
      "input_text": "Sounds straightforward, right? What do you think happens if we add one more city to Alex's route?",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Sounds straightforward, right? What do you think happens if we add one more city to Alex's route?</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Sounds straightforward, right? What do you think happens if we add one more city to Alex's route?</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 387,
        "text_offset": 0,
        "word_length": 6,
        "text": "Sounds",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 787,
        "text_offset": 7,
        "word_length": 15,
        "text": "straightforward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 100,
        "text_offset": 22,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 387,
        "text_offset": 24,
        "word_length": 5,
        "text": "right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18250000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26750000,
        "duration_milliseconds": 200,
        "text_offset": 31,
        "word_length": 4,
        "text": "What",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28875000,
        "duration_milliseconds": 62,
        "text_offset": 36,
        "word_length": 2,
        "text": "do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29625000,
        "duration_milliseconds": 100,
        "text_offset": 39,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30875000,
        "duration_milliseconds": 212,
        "text_offset": 43,
        "word_length": 5,
        "text": "think",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33250000,
        "duration_milliseconds": 412,
        "text_offset": 49,
        "word_length": 7,
        "text": "happens",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37625000,
        "duration_milliseconds": 112,
        "text_offset": 57,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39000000,
        "duration_milliseconds": 137,
        "text_offset": 60,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40500000,
        "duration_milliseconds": 162,
        "text_offset": 63,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 212,
        "text_offset": 67,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44750000,
        "duration_milliseconds": 175,
        "text_offset": 71,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 287,
        "text_offset": 76,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49875000,
        "duration_milliseconds": 125,
        "text_offset": 81,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51250000,
        "duration_milliseconds": 487,
        "text_offset": 84,
        "word_length": 6,
        "text": "Alex's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56375000,
        "duration_milliseconds": 362,
        "text_offset": 91,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60125000,
        "duration_milliseconds": 100,
        "text_offset": 96,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "sounds-straightforward-right-what-do-you-think-75c55cb4.mp3",
    "final_audio": "sounds-straightforward-right-what-do-you-think-75c55cb4.mp3"
  },
  {
    "input_text": "Of course, if we add more cities it get's more complex. So how do you determine the shortest possible route that connects all these cities?",
    "input_data": {
      "input_text": "Of course, if we add more cities it get's more complex. So how do you determine the shortest possible route that connects all these cities?",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Of course, if we add more cities it get's more complex. So how do you determine the shortest possible route that connects all these cities?</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Of course, if we add more cities it get's more complex. So how do you determine the shortest possible route that connects all these cities?</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "Of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 325,
        "text_offset": 3,
        "word_length": 6,
        "text": "course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 12,
        "text_offset": 9,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 112,
        "text_offset": 11,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 137,
        "text_offset": 14,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9750000,
        "duration_milliseconds": 150,
        "text_offset": 17,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 187,
        "text_offset": 21,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 375,
        "text_offset": 26,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 87,
        "text_offset": 33,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 212,
        "text_offset": 36,
        "word_length": 5,
        "text": "get's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "duration_milliseconds": 200,
        "text_offset": 42,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 625,
        "text_offset": 47,
        "word_length": 7,
        "text": "complex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29500000,
        "duration_milliseconds": 100,
        "text_offset": 54,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 38000000,
        "duration_milliseconds": 187,
        "text_offset": 56,
        "word_length": 2,
        "text": "So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "duration_milliseconds": 125,
        "text_offset": 59,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41375000,
        "duration_milliseconds": 75,
        "text_offset": 63,
        "word_length": 2,
        "text": "do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42250000,
        "duration_milliseconds": 87,
        "text_offset": 66,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43250000,
        "duration_milliseconds": 462,
        "text_offset": 70,
        "word_length": 9,
        "text": "determine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 87,
        "text_offset": 80,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49125000,
        "duration_milliseconds": 437,
        "text_offset": 84,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53625000,
        "duration_milliseconds": 487,
        "text_offset": 93,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58750000,
        "duration_milliseconds": 200,
        "text_offset": 102,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "duration_milliseconds": 137,
        "text_offset": 108,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62625000,
        "duration_milliseconds": 375,
        "text_offset": 113,
        "word_length": 8,
        "text": "connects",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66625000,
        "duration_milliseconds": 137,
        "text_offset": 122,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68250000,
        "duration_milliseconds": 187,
        "text_offset": 126,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 475,
        "text_offset": 132,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75250000,
        "duration_milliseconds": 100,
        "text_offset": 138,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "of-course-if-we-add-more-cities-it-get-s-more-d1f1b866.mp3",
    "final_audio": "of-course-if-we-add-more-cities-it-get-s-more-d1f1b866.mp3"
  },
  {
    "input_text": "One approach is to try out every possible route. But here lies the problem: Complexity! So, with every new city Alex adds to the trip, the challenge of finding the shortest route grows significantly.",
    "input_data": {
      "input_text": "One approach is to try out every possible route. But here lies the problem: Complexity! So, with every new city Alex adds to the trip, the challenge of finding the shortest route grows significantly.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">One approach is to try out every possible route. But here lies the problem: Complexity! So, with every new city Alex adds to the trip, the challenge of finding the shortest route grows significantly.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">One approach is to try out every possible route. But here lies the problem: Complexity! So, with every new city Alex adds to the trip, the challenge of finding the shortest route grows significantly.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 262,
        "text_offset": 0,
        "word_length": 3,
        "text": "One",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 375,
        "text_offset": 4,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 87,
        "text_offset": 16,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 275,
        "text_offset": 19,
        "word_length": 3,
        "text": "try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 175,
        "text_offset": 23,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 237,
        "text_offset": 27,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17375000,
        "duration_milliseconds": 512,
        "text_offset": 33,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22750000,
        "duration_milliseconds": 337,
        "text_offset": 42,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26375000,
        "duration_milliseconds": 100,
        "text_offset": 47,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 162,
        "text_offset": 49,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36750000,
        "duration_milliseconds": 187,
        "text_offset": 53,
        "word_length": 4,
        "text": "here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38875000,
        "duration_milliseconds": 250,
        "text_offset": 58,
        "word_length": 4,
        "text": "lies",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41625000,
        "duration_milliseconds": 112,
        "text_offset": 63,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "duration_milliseconds": 462,
        "text_offset": 67,
        "word_length": 7,
        "text": "problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 62,
        "text_offset": 74,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 49375000,
        "duration_milliseconds": 800,
        "text_offset": 76,
        "word_length": 10,
        "text": "Complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57625000,
        "duration_milliseconds": 100,
        "text_offset": 86,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 325,
        "text_offset": 88,
        "word_length": 2,
        "text": "So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70375000,
        "duration_milliseconds": 75,
        "text_offset": 90,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 71125000,
        "duration_milliseconds": 162,
        "text_offset": 92,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73000000,
        "duration_milliseconds": 212,
        "text_offset": 97,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75375000,
        "duration_milliseconds": 137,
        "text_offset": 103,
        "word_length": 3,
        "text": "new",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77000000,
        "duration_milliseconds": 312,
        "text_offset": 107,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80250000,
        "duration_milliseconds": 337,
        "text_offset": 112,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83750000,
        "duration_milliseconds": 250,
        "text_offset": 117,
        "word_length": 4,
        "text": "adds",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86375000,
        "duration_milliseconds": 87,
        "text_offset": 122,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87500000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88625000,
        "duration_milliseconds": 300,
        "text_offset": 129,
        "word_length": 4,
        "text": "trip",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92500000,
        "duration_milliseconds": 187,
        "text_offset": 133,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 94375000,
        "duration_milliseconds": 112,
        "text_offset": 135,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95625000,
        "duration_milliseconds": 400,
        "text_offset": 139,
        "word_length": 9,
        "text": "challenge",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99750000,
        "duration_milliseconds": 75,
        "text_offset": 149,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100750000,
        "duration_milliseconds": 350,
        "text_offset": 152,
        "word_length": 7,
        "text": "finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104500000,
        "duration_milliseconds": 87,
        "text_offset": 160,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105500000,
        "duration_milliseconds": 450,
        "text_offset": 164,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110250000,
        "duration_milliseconds": 187,
        "text_offset": 173,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112375000,
        "duration_milliseconds": 275,
        "text_offset": 179,
        "word_length": 5,
        "text": "grows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115375000,
        "duration_milliseconds": 800,
        "text_offset": 185,
        "word_length": 13,
        "text": "significantly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123625000,
        "duration_milliseconds": 100,
        "text_offset": 198,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "one-approach-is-to-try-out-every-possible-route-313d974f.mp3",
    "final_audio": "one-approach-is-to-try-out-every-possible-route-313d974f.mp3"
  },
  {
    "input_text": "The Problem to find the shortest way between multiple points is called the Traveling Salesperson Problem (TSP). Alex goal is to keep the distance traveled as low as possible.",
    "input_data": {
      "input_text": "The Problem to find the shortest way between multiple points is called the Traveling Salesperson Problem (TSP). Alex goal is to keep the distance traveled as low as possible.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Problem to find the shortest way between multiple points is called the Traveling Salesperson Problem (TSP). Alex goal is to keep the distance traveled as low as possible.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Problem to find the shortest way between multiple points is called the Traveling Salesperson Problem (TSP). Alex goal is to keep the distance traveled as low as possible.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 387,
        "text_offset": 4,
        "word_length": 7,
        "text": "Problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6250000,
        "duration_milliseconds": 100,
        "text_offset": 12,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 262,
        "text_offset": 15,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10375000,
        "duration_milliseconds": 75,
        "text_offset": 20,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 462,
        "text_offset": 24,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 137,
        "text_offset": 33,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17750000,
        "duration_milliseconds": 350,
        "text_offset": 37,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21500000,
        "duration_milliseconds": 462,
        "text_offset": 45,
        "word_length": 8,
        "text": "multiple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26375000,
        "duration_milliseconds": 350,
        "text_offset": 54,
        "word_length": 6,
        "text": "points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30125000,
        "duration_milliseconds": 112,
        "text_offset": 61,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 237,
        "text_offset": 64,
        "word_length": 6,
        "text": "called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34125000,
        "duration_milliseconds": 75,
        "text_offset": 71,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35000000,
        "duration_milliseconds": 425,
        "text_offset": 75,
        "word_length": 9,
        "text": "Traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 700,
        "text_offset": 85,
        "word_length": 11,
        "text": "Salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 437,
        "text_offset": 97,
        "word_length": 7,
        "text": "Problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "duration_milliseconds": 37,
        "text_offset": 105,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 52375000,
        "duration_milliseconds": 687,
        "text_offset": 106,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59500000,
        "duration_milliseconds": 100,
        "text_offset": 110,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 68125000,
        "duration_milliseconds": 387,
        "text_offset": 112,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72125000,
        "duration_milliseconds": 275,
        "text_offset": 117,
        "word_length": 4,
        "text": "goal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75125000,
        "duration_milliseconds": 100,
        "text_offset": 122,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76375000,
        "duration_milliseconds": 112,
        "text_offset": 125,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77750000,
        "duration_milliseconds": 200,
        "text_offset": 128,
        "word_length": 4,
        "text": "keep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "duration_milliseconds": 112,
        "text_offset": 133,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81375000,
        "duration_milliseconds": 400,
        "text_offset": 137,
        "word_length": 8,
        "text": "distance",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85500000,
        "duration_milliseconds": 375,
        "text_offset": 146,
        "word_length": 8,
        "text": "traveled",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89500000,
        "duration_milliseconds": 125,
        "text_offset": 155,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91000000,
        "duration_milliseconds": 187,
        "text_offset": 158,
        "word_length": 3,
        "text": "low",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93125000,
        "duration_milliseconds": 100,
        "text_offset": 162,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94250000,
        "duration_milliseconds": 587,
        "text_offset": 165,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100250000,
        "duration_milliseconds": 100,
        "text_offset": 173,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-problem-to-find-the-shortest-way-between-54944622.mp3",
    "final_audio": "the-problem-to-find-the-shortest-way-between-54944622.mp3"
  },
  {
    "input_text": "There are 2 main conditions: He needs to visit every city exactly once, starting from a specific one and returning to the starting city.",
    "input_data": {
      "input_text": "There are 2 main conditions: He needs to visit every city exactly once, starting from a specific one and returning to the starting city.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">There are 2 main conditions: He needs to visit every city exactly once, starting from a specific one and returning to the starting city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">There are 2 main conditions: He needs to visit every city exactly once, starting from a specific one and returning to the starting city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 5,
        "text": "There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 100,
        "text_offset": 6,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3625000,
        "duration_milliseconds": 162,
        "text_offset": 10,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 212,
        "text_offset": 12,
        "word_length": 4,
        "text": "main",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 562,
        "text_offset": 17,
        "word_length": 10,
        "text": "conditions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14125000,
        "duration_milliseconds": 150,
        "text_offset": 27,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 87,
        "text_offset": 29,
        "word_length": 2,
        "text": "He",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16875000,
        "duration_milliseconds": 237,
        "text_offset": 32,
        "word_length": 5,
        "text": "needs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19500000,
        "duration_milliseconds": 87,
        "text_offset": 38,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "duration_milliseconds": 312,
        "text_offset": 41,
        "word_length": 5,
        "text": "visit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 237,
        "text_offset": 47,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 287,
        "text_offset": 53,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29625000,
        "duration_milliseconds": 487,
        "text_offset": 58,
        "word_length": 7,
        "text": "exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34750000,
        "duration_milliseconds": 325,
        "text_offset": 66,
        "word_length": 4,
        "text": "once",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39000000,
        "duration_milliseconds": 187,
        "text_offset": 70,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 40875000,
        "duration_milliseconds": 362,
        "text_offset": 72,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44625000,
        "duration_milliseconds": 150,
        "text_offset": 81,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 50,
        "text_offset": 86,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46875000,
        "duration_milliseconds": 487,
        "text_offset": 88,
        "word_length": 8,
        "text": "specific",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "duration_milliseconds": 225,
        "text_offset": 97,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54500000,
        "duration_milliseconds": 87,
        "text_offset": 101,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55625000,
        "duration_milliseconds": 425,
        "text_offset": 105,
        "word_length": 9,
        "text": "returning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60000000,
        "duration_milliseconds": 87,
        "text_offset": 115,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61125000,
        "duration_milliseconds": 100,
        "text_offset": 118,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62375000,
        "duration_milliseconds": 362,
        "text_offset": 122,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 412,
        "text_offset": 131,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70625000,
        "duration_milliseconds": 100,
        "text_offset": 135,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "there-are-2-main-conditions-he-needs-to-visit-c7cf1ee3.mp3",
    "final_audio": "there-are-2-main-conditions-he-needs-to-visit-c7cf1ee3.mp3"
  },
  {
    "input_text": "To solve it, we'll think of each city as a point, or 'node', on a graph. The edges symbolize possible paths Alex can take.",
    "input_data": {
      "input_text": "To solve it, we'll think of each city as a point, or 'node', on a graph. The edges symbolize possible paths Alex can take.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">To solve it, we'll think of each city as a point, or 'node', on a graph. The edges symbolize possible paths Alex can take.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">To solve it, we'll think of each city as a point, or 'node', on a graph. The edges symbolize possible paths Alex can take.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 125,
        "text_offset": 0,
        "word_length": 2,
        "text": "To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1875000,
        "duration_milliseconds": 300,
        "text_offset": 3,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 100,
        "text_offset": 9,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 62,
        "text_offset": 11,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 150,
        "text_offset": 13,
        "word_length": 5,
        "text": "we'll",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 212,
        "text_offset": 19,
        "word_length": 5,
        "text": "think",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11625000,
        "duration_milliseconds": 100,
        "text_offset": 25,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 175,
        "text_offset": 28,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14875000,
        "duration_milliseconds": 287,
        "text_offset": 33,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19375000,
        "duration_milliseconds": 62,
        "text_offset": 41,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 300,
        "text_offset": 43,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24250000,
        "duration_milliseconds": 100,
        "text_offset": 48,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 25250000,
        "duration_milliseconds": 112,
        "text_offset": 50,
        "word_length": 2,
        "text": "or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26625000,
        "duration_milliseconds": 300,
        "text_offset": 54,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 87,
        "text_offset": 59,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 112,
        "text_offset": 61,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32875000,
        "duration_milliseconds": 50,
        "text_offset": 64,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 637,
        "text_offset": 66,
        "word_length": 5,
        "text": "graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40250000,
        "duration_milliseconds": 100,
        "text_offset": 71,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 48875000,
        "duration_milliseconds": 137,
        "text_offset": 73,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50500000,
        "duration_milliseconds": 312,
        "text_offset": 77,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53875000,
        "duration_milliseconds": 475,
        "text_offset": 83,
        "word_length": 9,
        "text": "symbolize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58750000,
        "duration_milliseconds": 500,
        "text_offset": 93,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64000000,
        "duration_milliseconds": 400,
        "text_offset": 102,
        "word_length": 5,
        "text": "paths",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68125000,
        "duration_milliseconds": 325,
        "text_offset": 108,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71500000,
        "duration_milliseconds": 150,
        "text_offset": 113,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73250000,
        "duration_milliseconds": 387,
        "text_offset": 117,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 100,
        "text_offset": 121,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "to-solve-it-we-ll-think-of-each-city-as-a-point-or-d1b3759d.mp3",
    "final_audio": "to-solve-it-we-ll-think-of-each-city-as-a-point-or-d1b3759d.mp3"
  },
  {
    "input_text": "It's complete, this means there's a direct path from every city to every other city.",
    "input_data": {
      "input_text": "It's complete, this means there's a direct path from every city to every other city.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">It's complete, this means there's a direct path from every city to every other city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">It's complete, this means there's a direct path from every city to every other city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 200,
        "text_offset": 0,
        "word_length": 4,
        "text": "It's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2750000,
        "duration_milliseconds": 462,
        "text_offset": 5,
        "word_length": 8,
        "text": "complete",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 150,
        "text_offset": 13,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 187,
        "text_offset": 15,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 237,
        "text_offset": 20,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 200,
        "text_offset": 26,
        "word_length": 7,
        "text": "there's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 62,
        "text_offset": 34,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 337,
        "text_offset": 36,
        "word_length": 6,
        "text": "direct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 300,
        "text_offset": 43,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "duration_milliseconds": 175,
        "text_offset": 48,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 250,
        "text_offset": 53,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29250000,
        "duration_milliseconds": 300,
        "text_offset": 59,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32500000,
        "duration_milliseconds": 137,
        "text_offset": 64,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34125000,
        "duration_milliseconds": 300,
        "text_offset": 67,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 212,
        "text_offset": 73,
        "word_length": 5,
        "text": "other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39750000,
        "duration_milliseconds": 412,
        "text_offset": 79,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44125000,
        "duration_milliseconds": 100,
        "text_offset": 83,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "it-s-complete-this-means-there-s-a-direct-path-ddb2d54b.mp3",
    "final_audio": "it-s-complete-this-means-there-s-a-direct-path-ddb2d54b.mp3"
  },
  {
    "input_text": "Our TSP is symmetric. It means the distance from city A to B is identical to the distance from B to A.",
    "input_data": {
      "input_text": "Our TSP is symmetric. It means the distance from city A to B is identical to the distance from B to A.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Our TSP is symmetric. It means the distance from city A to B is identical to the distance from B to A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Our TSP is symmetric. It means the distance from city A to B is identical to the distance from B to A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 3,
        "text": "Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 700,
        "text_offset": 4,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 150,
        "text_offset": 8,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 637,
        "text_offset": 11,
        "word_length": 9,
        "text": "symmetric",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 100,
        "text_offset": 20,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 27000000,
        "duration_milliseconds": 175,
        "text_offset": 22,
        "word_length": 2,
        "text": "It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 262,
        "text_offset": 25,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 125,
        "text_offset": 31,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33250000,
        "duration_milliseconds": 425,
        "text_offset": 35,
        "word_length": 8,
        "text": "distance",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 200,
        "text_offset": 44,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "duration_milliseconds": 337,
        "text_offset": 49,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 112,
        "text_offset": 54,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "duration_milliseconds": 100,
        "text_offset": 56,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46125000,
        "duration_milliseconds": 125,
        "text_offset": 59,
        "word_length": 1,
        "text": "B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 125,
        "text_offset": 61,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49125000,
        "duration_milliseconds": 562,
        "text_offset": 64,
        "word_length": 9,
        "text": "identical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 87,
        "text_offset": 74,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 125,
        "text_offset": 77,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57375000,
        "duration_milliseconds": 412,
        "text_offset": 81,
        "word_length": 8,
        "text": "distance",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61750000,
        "duration_milliseconds": 187,
        "text_offset": 90,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63875000,
        "duration_milliseconds": 150,
        "text_offset": 95,
        "word_length": 1,
        "text": "B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65625000,
        "duration_milliseconds": 125,
        "text_offset": 97,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "duration_milliseconds": 312,
        "text_offset": 100,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 100,
        "text_offset": 101,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "our-tsp-is-symmetric-it-means-the-distance-from-c8a15b03.mp3",
    "final_audio": "our-tsp-is-symmetric-it-means-the-distance-from-c8a15b03.mp3"
  },
  {
    "input_text": "Also, in our model, the direct path between any two cities is always the shortest. This means for two cities A and B there is no path with an added point that is shorter than the direct connection. adhering to the triangle inequality principle.",
    "input_data": {
      "input_text": "Also, in our model, the direct path between any two cities is always the shortest. This means for two cities A and B there is no path with an added point that is shorter than the direct connection. adhering to the triangle inequality principle.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Also, in our model, the direct path between any two cities is always the shortest. This means for two cities A and B there is no path with an added point that is shorter than the direct connection. adhering to the triangle inequality principle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Also, in our model, the direct path between any two cities is always the shortest. This means for two cities A and B there is no path with an added point that is shorter than the direct connection. adhering to the triangle inequality principle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 462,
        "text_offset": 0,
        "word_length": 4,
        "text": "Also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 87,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 112,
        "text_offset": 6,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 100,
        "text_offset": 9,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 362,
        "text_offset": 13,
        "word_length": 5,
        "text": "model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14125000,
        "duration_milliseconds": 62,
        "text_offset": 18,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 112,
        "text_offset": 20,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 350,
        "text_offset": 24,
        "word_length": 6,
        "text": "direct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 300,
        "text_offset": 31,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 387,
        "text_offset": 36,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 187,
        "text_offset": 44,
        "word_length": 3,
        "text": "any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 175,
        "text_offset": 48,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 400,
        "text_offset": 52,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35500000,
        "duration_milliseconds": 125,
        "text_offset": 59,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 337,
        "text_offset": 62,
        "word_length": 6,
        "text": "always",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40625000,
        "duration_milliseconds": 87,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41625000,
        "duration_milliseconds": 537,
        "text_offset": 73,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47250000,
        "duration_milliseconds": 100,
        "text_offset": 81,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 55750000,
        "duration_milliseconds": 200,
        "text_offset": 83,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57875000,
        "duration_milliseconds": 225,
        "text_offset": 88,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60375000,
        "duration_milliseconds": 150,
        "text_offset": 94,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62125000,
        "duration_milliseconds": 175,
        "text_offset": 98,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64125000,
        "duration_milliseconds": 412,
        "text_offset": 102,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68500000,
        "duration_milliseconds": 150,
        "text_offset": 109,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 112,
        "text_offset": 111,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71625000,
        "duration_milliseconds": 137,
        "text_offset": 115,
        "word_length": 1,
        "text": "B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73125000,
        "duration_milliseconds": 187,
        "text_offset": 117,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75250000,
        "duration_milliseconds": 125,
        "text_offset": 123,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76750000,
        "duration_milliseconds": 175,
        "text_offset": 126,
        "word_length": 2,
        "text": "no",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78625000,
        "duration_milliseconds": 325,
        "text_offset": 129,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82125000,
        "duration_milliseconds": 125,
        "text_offset": 134,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83500000,
        "duration_milliseconds": 100,
        "text_offset": 139,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84750000,
        "duration_milliseconds": 300,
        "text_offset": 142,
        "word_length": 5,
        "text": "added",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88000000,
        "duration_milliseconds": 262,
        "text_offset": 148,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90875000,
        "duration_milliseconds": 125,
        "text_offset": 154,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92250000,
        "duration_milliseconds": 75,
        "text_offset": 159,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93250000,
        "duration_milliseconds": 350,
        "text_offset": 162,
        "word_length": 7,
        "text": "shorter",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96875000,
        "duration_milliseconds": 125,
        "text_offset": 170,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98375000,
        "duration_milliseconds": 87,
        "text_offset": 175,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99500000,
        "duration_milliseconds": 325,
        "text_offset": 179,
        "word_length": 6,
        "text": "direct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103000000,
        "duration_milliseconds": 550,
        "text_offset": 186,
        "word_length": 10,
        "text": "connection",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108750000,
        "duration_milliseconds": 100,
        "text_offset": 196,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 117375000,
        "duration_milliseconds": 500,
        "text_offset": 198,
        "word_length": 8,
        "text": "adhering",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122500000,
        "duration_milliseconds": 100,
        "text_offset": 207,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123750000,
        "duration_milliseconds": 125,
        "text_offset": 210,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125250000,
        "duration_milliseconds": 587,
        "text_offset": 214,
        "word_length": 8,
        "text": "triangle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131250000,
        "duration_milliseconds": 637,
        "text_offset": 223,
        "word_length": 10,
        "text": "inequality",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137875000,
        "duration_milliseconds": 675,
        "text_offset": 234,
        "word_length": 9,
        "text": "principle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144750000,
        "duration_milliseconds": 100,
        "text_offset": 243,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "also-in-our-model-the-direct-path-between-any-two-449168ee.mp3",
    "final_audio": "also-in-our-model-the-direct-path-between-any-two-449168ee.mp3"
  },
  {
    "input_text": "With these rules in mind, let's explore how Alex can find the shortest route.",
    "input_data": {
      "input_text": "With these rules in mind, let's explore how Alex can find the shortest route.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">With these rules in mind, let's explore how Alex can find the shortest route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">With these rules in mind, let's explore how Alex can find the shortest route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 4,
        "text": "With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 187,
        "text_offset": 5,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 262,
        "text_offset": 11,
        "word_length": 5,
        "text": "rules",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 87,
        "text_offset": 17,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 337,
        "text_offset": 20,
        "word_length": 4,
        "text": "mind",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 112,
        "text_offset": 24,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 162,
        "text_offset": 26,
        "word_length": 5,
        "text": "let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 450,
        "text_offset": 32,
        "word_length": 7,
        "text": "explore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 137,
        "text_offset": 40,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22500000,
        "duration_milliseconds": 362,
        "text_offset": 44,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26375000,
        "duration_milliseconds": 137,
        "text_offset": 49,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28000000,
        "duration_milliseconds": 262,
        "text_offset": 53,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30750000,
        "duration_milliseconds": 62,
        "text_offset": 58,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 437,
        "text_offset": 62,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36125000,
        "duration_milliseconds": 312,
        "text_offset": 71,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 100,
        "text_offset": 76,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "with-these-rules-in-mind-let-s-explore-how-alex-6f913760.mp3",
    "final_audio": "with-these-rules-in-mind-let-s-explore-how-alex-6f913760.mp3"
  },
  {
    "input_text": "There are symmetrical and asymmetrical TSPs.",
    "input_data": {
      "input_text": "There are symmetrical and asymmetrical TSPs.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">There are symmetrical and asymmetrical TSPs.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">There are symmetrical and asymmetrical TSPs.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 5,
        "text": "There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2750000,
        "duration_milliseconds": 112,
        "text_offset": 6,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 675,
        "text_offset": 10,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11125000,
        "duration_milliseconds": 162,
        "text_offset": 22,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 775,
        "text_offset": 26,
        "word_length": 12,
        "text": "asymmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 900,
        "text_offset": 39,
        "word_length": 4,
        "text": "TSPs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30125000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "there-are-symmetrical-and-asymmetrical-tsps-4db852ac.mp3",
    "final_audio": "there-are-symmetrical-and-asymmetrical-tsps-4db852ac.mp3"
  },
  {
    "input_text": "First we will explain the symmetrical TSP",
    "input_data": {
      "input_text": "First we will explain the symmetrical TSP",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">First we will explain the symmetrical TSP</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">First we will explain the symmetrical TSP</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 400,
        "text_offset": 0,
        "word_length": 5,
        "text": "First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 125,
        "text_offset": 6,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6250000,
        "duration_milliseconds": 137,
        "text_offset": 9,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7875000,
        "duration_milliseconds": 425,
        "text_offset": 14,
        "word_length": 7,
        "text": "explain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 100,
        "text_offset": 22,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13500000,
        "duration_milliseconds": 650,
        "text_offset": 26,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 800,
        "text_offset": 38,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "first-we-will-explain-the-symmetrical-tsp-a7a12429.mp3",
    "final_audio": "first-we-will-explain-the-symmetrical-tsp-a7a12429.mp3"
  },
  {
    "input_text": "A TSP is called symmetrical, if the edges between two nodes have the same value in both directions. This means the way form one town to another would be exact the same in both directions. This isn't really accurate in real life because of conditions of the landscape or construction sites.",
    "input_data": {
      "input_text": "A TSP is called symmetrical, if the edges between two nodes have the same value in both directions. This means the way form one town to another would be exact the same in both directions. This isn't really accurate in real life because of conditions of the landscape or construction sites.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">A TSP is called symmetrical, if the edges between two nodes have the same value in both directions. This means the way form one town to another would be exact the same in both directions. This isn't really accurate in real life because of conditions of the landscape or construction sites.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">A TSP is called symmetrical, if the edges between two nodes have the same value in both directions. This means the way form one town to another would be exact the same in both directions. This isn't really accurate in real life because of conditions of the landscape or construction sites.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 512,
        "text_offset": 2,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 125,
        "text_offset": 6,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 225,
        "text_offset": 9,
        "word_length": 6,
        "text": "called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11375000,
        "duration_milliseconds": 625,
        "text_offset": 16,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 100,
        "text_offset": 27,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 19500000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 87,
        "text_offset": 32,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21875000,
        "duration_milliseconds": 312,
        "text_offset": 36,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25250000,
        "duration_milliseconds": 350,
        "text_offset": 42,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 187,
        "text_offset": 50,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31125000,
        "duration_milliseconds": 312,
        "text_offset": 54,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34500000,
        "duration_milliseconds": 125,
        "text_offset": 60,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36000000,
        "duration_milliseconds": 87,
        "text_offset": 65,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 275,
        "text_offset": 69,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "duration_milliseconds": 387,
        "text_offset": 74,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44125000,
        "duration_milliseconds": 100,
        "text_offset": 80,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45375000,
        "duration_milliseconds": 212,
        "text_offset": 83,
        "word_length": 4,
        "text": "both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 650,
        "text_offset": 88,
        "word_length": 10,
        "text": "directions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54375000,
        "duration_milliseconds": 100,
        "text_offset": 98,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 63000000,
        "duration_milliseconds": 237,
        "text_offset": 100,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65500000,
        "duration_milliseconds": 237,
        "text_offset": 105,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68125000,
        "duration_milliseconds": 112,
        "text_offset": 111,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69375000,
        "duration_milliseconds": 150,
        "text_offset": 115,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71000000,
        "duration_milliseconds": 287,
        "text_offset": 119,
        "word_length": 4,
        "text": "form",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74125000,
        "duration_milliseconds": 187,
        "text_offset": 124,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76250000,
        "duration_milliseconds": 275,
        "text_offset": 128,
        "word_length": 4,
        "text": "town",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79250000,
        "duration_milliseconds": 125,
        "text_offset": 133,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80750000,
        "duration_milliseconds": 362,
        "text_offset": 136,
        "word_length": 7,
        "text": "another",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84625000,
        "duration_milliseconds": 112,
        "text_offset": 144,
        "word_length": 5,
        "text": "would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86000000,
        "duration_milliseconds": 125,
        "text_offset": 150,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87500000,
        "duration_milliseconds": 412,
        "text_offset": 153,
        "word_length": 5,
        "text": "exact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91750000,
        "duration_milliseconds": 87,
        "text_offset": 159,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92875000,
        "duration_milliseconds": 325,
        "text_offset": 163,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96250000,
        "duration_milliseconds": 100,
        "text_offset": 168,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 212,
        "text_offset": 171,
        "word_length": 4,
        "text": "both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99750000,
        "duration_milliseconds": 650,
        "text_offset": 176,
        "word_length": 10,
        "text": "directions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106500000,
        "duration_milliseconds": 100,
        "text_offset": 186,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 115000000,
        "duration_milliseconds": 212,
        "text_offset": 188,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117375000,
        "duration_milliseconds": 250,
        "text_offset": 193,
        "word_length": 5,
        "text": "isn't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "duration_milliseconds": 262,
        "text_offset": 199,
        "word_length": 6,
        "text": "really",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122750000,
        "duration_milliseconds": 425,
        "text_offset": 206,
        "word_length": 8,
        "text": "accurate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127125000,
        "duration_milliseconds": 112,
        "text_offset": 215,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128500000,
        "duration_milliseconds": 187,
        "text_offset": 218,
        "word_length": 4,
        "text": "real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130625000,
        "duration_milliseconds": 262,
        "text_offset": 223,
        "word_length": 4,
        "text": "life",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133375000,
        "duration_milliseconds": 325,
        "text_offset": 228,
        "word_length": 7,
        "text": "because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136750000,
        "duration_milliseconds": 75,
        "text_offset": 236,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137750000,
        "duration_milliseconds": 537,
        "text_offset": 239,
        "word_length": 10,
        "text": "conditions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143375000,
        "duration_milliseconds": 75,
        "text_offset": 250,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144375000,
        "duration_milliseconds": 100,
        "text_offset": 253,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145625000,
        "duration_milliseconds": 500,
        "text_offset": 257,
        "word_length": 9,
        "text": "landscape",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150750000,
        "duration_milliseconds": 125,
        "text_offset": 267,
        "word_length": 2,
        "text": "or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152250000,
        "duration_milliseconds": 625,
        "text_offset": 270,
        "word_length": 12,
        "text": "construction",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158750000,
        "duration_milliseconds": 462,
        "text_offset": 283,
        "word_length": 5,
        "text": "sites",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163500000,
        "duration_milliseconds": 100,
        "text_offset": 288,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "a-tsp-is-called-symmetrical-if-the-edges-between-39c7fed0.mp3",
    "final_audio": "a-tsp-is-called-symmetrical-if-the-edges-between-39c7fed0.mp3"
  },
  {
    "input_text": "Thats why there is also a asymmetrical TSP.",
    "input_data": {
      "input_text": "Thats why there is also a asymmetrical TSP.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Thats why there is also a asymmetrical TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Thats why there is also a asymmetrical TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 5,
        "text": "Thats",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 137,
        "text_offset": 6,
        "word_length": 3,
        "text": "why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 187,
        "text_offset": 10,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7000000,
        "duration_milliseconds": 125,
        "text_offset": 16,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 275,
        "text_offset": 19,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 87,
        "text_offset": 24,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 775,
        "text_offset": 26,
        "word_length": 12,
        "text": "asymmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "duration_milliseconds": 762,
        "text_offset": 39,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28375000,
        "duration_milliseconds": 100,
        "text_offset": 42,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "thats-why-there-is-also-a-asymmetrical-tsp-cecea753.mp3",
    "final_audio": "thats-why-there-is-also-a-asymmetrical-tsp-cecea753.mp3"
  },
  {
    "input_text": "The TSP is called asymmetrical if there are two edges between every node and they don't have the same weight. As you can see the graph is then directed. This is way more accurate to the real world, but this is also twice as complex to solve then the symmetrical. This is why we only observe symmetrical TSPs in the following.",
    "input_data": {
      "input_text": "The TSP is called asymmetrical if there are two edges between every node and they don't have the same weight. As you can see the graph is then directed. This is way more accurate to the real world, but this is also twice as complex to solve then the symmetrical. This is why we only observe symmetrical TSPs in the following.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The TSP is called asymmetrical if there are two edges between every node and they don't have the same weight. As you can see the graph is then directed. This is way more accurate to the real world, but this is also twice as complex to solve then the symmetrical. This is why we only observe symmetrical TSPs in the following.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The TSP is called asymmetrical if there are two edges between every node and they don't have the same weight. As you can see the graph is then directed. This is way more accurate to the real world, but this is also twice as complex to solve then the symmetrical. This is why we only observe symmetrical TSPs in the following.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 500,
        "text_offset": 4,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 125,
        "text_offset": 8,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 262,
        "text_offset": 11,
        "word_length": 6,
        "text": "called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11625000,
        "duration_milliseconds": 737,
        "text_offset": 18,
        "word_length": 12,
        "text": "asymmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19250000,
        "duration_milliseconds": 100,
        "text_offset": 31,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 150,
        "text_offset": 34,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22000000,
        "duration_milliseconds": 100,
        "text_offset": 40,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 225,
        "text_offset": 44,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25625000,
        "duration_milliseconds": 300,
        "text_offset": 48,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28875000,
        "duration_milliseconds": 350,
        "text_offset": 54,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32625000,
        "duration_milliseconds": 225,
        "text_offset": 62,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35125000,
        "duration_milliseconds": 312,
        "text_offset": 68,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38375000,
        "duration_milliseconds": 100,
        "text_offset": 73,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39625000,
        "duration_milliseconds": 100,
        "text_offset": 77,
        "word_length": 4,
        "text": "they",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40750000,
        "duration_milliseconds": 187,
        "text_offset": 82,
        "word_length": 5,
        "text": "don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42875000,
        "duration_milliseconds": 162,
        "text_offset": 88,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44750000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 262,
        "text_offset": 97,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 350,
        "text_offset": 102,
        "word_length": 6,
        "text": "weight",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52250000,
        "duration_milliseconds": 100,
        "text_offset": 108,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 60875000,
        "duration_milliseconds": 212,
        "text_offset": 110,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63250000,
        "duration_milliseconds": 112,
        "text_offset": 113,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64625000,
        "duration_milliseconds": 162,
        "text_offset": 117,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66500000,
        "duration_milliseconds": 200,
        "text_offset": 121,
        "word_length": 3,
        "text": "see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 125,
        "text_offset": 125,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 362,
        "text_offset": 129,
        "word_length": 5,
        "text": "graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74000000,
        "duration_milliseconds": 125,
        "text_offset": 135,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75500000,
        "duration_milliseconds": 175,
        "text_offset": 138,
        "word_length": 4,
        "text": "then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 575,
        "text_offset": 143,
        "word_length": 8,
        "text": "directed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83375000,
        "duration_milliseconds": 100,
        "text_offset": 151,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 91875000,
        "duration_milliseconds": 212,
        "text_offset": 153,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94250000,
        "duration_milliseconds": 112,
        "text_offset": 158,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95625000,
        "duration_milliseconds": 175,
        "text_offset": 161,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 262,
        "text_offset": 165,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100250000,
        "duration_milliseconds": 375,
        "text_offset": 170,
        "word_length": 8,
        "text": "accurate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104250000,
        "duration_milliseconds": 87,
        "text_offset": 179,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105375000,
        "duration_milliseconds": 100,
        "text_offset": 182,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106500000,
        "duration_milliseconds": 250,
        "text_offset": 186,
        "word_length": 4,
        "text": "real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109250000,
        "duration_milliseconds": 275,
        "text_offset": 191,
        "word_length": 5,
        "text": "world",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112875000,
        "duration_milliseconds": 100,
        "text_offset": 196,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 113875000,
        "duration_milliseconds": 137,
        "text_offset": 198,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115500000,
        "duration_milliseconds": 162,
        "text_offset": 202,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117250000,
        "duration_milliseconds": 125,
        "text_offset": 207,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118750000,
        "duration_milliseconds": 250,
        "text_offset": 210,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121375000,
        "duration_milliseconds": 325,
        "text_offset": 215,
        "word_length": 5,
        "text": "twice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124875000,
        "duration_milliseconds": 112,
        "text_offset": 221,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126250000,
        "duration_milliseconds": 475,
        "text_offset": 224,
        "word_length": 7,
        "text": "complex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131250000,
        "duration_milliseconds": 100,
        "text_offset": 232,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132500000,
        "duration_milliseconds": 300,
        "text_offset": 235,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135750000,
        "duration_milliseconds": 137,
        "text_offset": 241,
        "word_length": 4,
        "text": "then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137375000,
        "duration_milliseconds": 87,
        "text_offset": 246,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138375000,
        "duration_milliseconds": 662,
        "text_offset": 250,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145125000,
        "duration_milliseconds": 100,
        "text_offset": 261,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 153750000,
        "duration_milliseconds": 237,
        "text_offset": 263,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 156375000,
        "duration_milliseconds": 112,
        "text_offset": 268,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 157750000,
        "duration_milliseconds": 162,
        "text_offset": 271,
        "word_length": 3,
        "text": "why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 159625000,
        "duration_milliseconds": 162,
        "text_offset": 275,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 161500000,
        "duration_milliseconds": 275,
        "text_offset": 278,
        "word_length": 4,
        "text": "only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 164500000,
        "duration_milliseconds": 387,
        "text_offset": 283,
        "word_length": 7,
        "text": "observe",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168625000,
        "duration_milliseconds": 637,
        "text_offset": 291,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175250000,
        "duration_milliseconds": 700,
        "text_offset": 303,
        "word_length": 4,
        "text": "TSPs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 182500000,
        "duration_milliseconds": 75,
        "text_offset": 308,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183500000,
        "duration_milliseconds": 87,
        "text_offset": 311,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184625000,
        "duration_milliseconds": 512,
        "text_offset": 315,
        "word_length": 9,
        "text": "following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190000000,
        "duration_milliseconds": 100,
        "text_offset": 324,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-tsp-is-called-asymmetrical-if-there-are-two-34e6abe5.mp3",
    "final_audio": "the-tsp-is-called-asymmetrical-if-there-are-two-34e6abe5.mp3"
  },
  {
    "input_text": "now we go on with the next topic",
    "input_data": {
      "input_text": "now we go on with the next topic",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">now we go on with the next topic</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">now we go on with the next topic</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 3,
        "text": "now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 137,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 250,
        "text_offset": 7,
        "word_length": 2,
        "text": "go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 125,
        "text_offset": 13,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 87,
        "text_offset": 18,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 250,
        "text_offset": 22,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 437,
        "text_offset": 27,
        "word_length": 5,
        "text": "topic",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "now-we-go-on-with-the-next-topic-f94b96a8.mp3",
    "final_audio": "now-we-go-on-with-the-next-topic-f94b96a8.mp3"
  },
  {
    "input_text": "To solve TSP, we have two primary approaches: the Optimal and the Approximation methods.",
    "input_data": {
      "input_text": "To solve TSP, we have two primary approaches: the Optimal and the Approximation methods.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">To solve TSP, we have two primary approaches: the Optimal and the Approximation methods.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">To solve TSP, we have two primary approaches: the Optimal and the Approximation methods.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 125,
        "text_offset": 0,
        "word_length": 2,
        "text": "To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "duration_milliseconds": 300,
        "text_offset": 3,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 600,
        "text_offset": 9,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 100,
        "text_offset": 12,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 100,
        "text_offset": 14,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 150,
        "text_offset": 17,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16250000,
        "duration_milliseconds": 187,
        "text_offset": 22,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18375000,
        "duration_milliseconds": 512,
        "text_offset": 26,
        "word_length": 7,
        "text": "primary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 562,
        "text_offset": 34,
        "word_length": 10,
        "text": "approaches",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 100,
        "text_offset": 44,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 112,
        "text_offset": 46,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 437,
        "text_offset": 50,
        "word_length": 7,
        "text": "Optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 75,
        "text_offset": 58,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38375000,
        "duration_milliseconds": 100,
        "text_offset": 62,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 775,
        "text_offset": 66,
        "word_length": 13,
        "text": "Approximation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47375000,
        "duration_milliseconds": 462,
        "text_offset": 80,
        "word_length": 7,
        "text": "methods",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52125000,
        "duration_milliseconds": 100,
        "text_offset": 87,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "to-solve-tsp-we-have-two-primary-approaches-the-8f4d7a7e.mp3",
    "final_audio": "to-solve-tsp-we-have-two-primary-approaches-the-8f4d7a7e.mp3"
  },
  {
    "input_text": "In the Optimal category, we have two prominent algorithms: Brute Force and Branch and Bound.",
    "input_data": {
      "input_text": "In the Optimal category, we have two prominent algorithms: Brute Force and Branch and Bound.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">In the Optimal category, we have two prominent algorithms: Brute Force and Branch and Bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">In the Optimal category, we have two prominent algorithms: Brute Force and Branch and Bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3625000,
        "duration_milliseconds": 412,
        "text_offset": 7,
        "word_length": 7,
        "text": "Optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 550,
        "text_offset": 15,
        "word_length": 8,
        "text": "category",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 125,
        "text_offset": 23,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 15625000,
        "duration_milliseconds": 100,
        "text_offset": 25,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 150,
        "text_offset": 28,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 187,
        "text_offset": 33,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 450,
        "text_offset": 37,
        "word_length": 9,
        "text": "prominent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25375000,
        "duration_milliseconds": 662,
        "text_offset": 47,
        "word_length": 10,
        "text": "algorithms",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 150,
        "text_offset": 57,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 34500000,
        "duration_milliseconds": 225,
        "text_offset": 59,
        "word_length": 5,
        "text": "Brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 325,
        "text_offset": 65,
        "word_length": 5,
        "text": "Force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40375000,
        "duration_milliseconds": 112,
        "text_offset": 71,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41750000,
        "duration_milliseconds": 350,
        "text_offset": 75,
        "word_length": 6,
        "text": "Branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45375000,
        "duration_milliseconds": 100,
        "text_offset": 82,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46625000,
        "duration_milliseconds": 450,
        "text_offset": 86,
        "word_length": 5,
        "text": "Bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51375000,
        "duration_milliseconds": 100,
        "text_offset": 91,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "in-the-optimal-category-we-have-two-prominent-2ecc4a51.mp3",
    "final_audio": "in-the-optimal-category-we-have-two-prominent-2ecc4a51.mp3"
  },
  {
    "input_text": "Moving on to the Approximation approach, we'll explain the algorithms k nearest neighbors (kNN) and Christofides. But let's start with the optimal solutions first.",
    "input_data": {
      "input_text": "Moving on to the Approximation approach, we'll explain the algorithms k nearest neighbors (kNN) and Christofides. But let's start with the optimal solutions first.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Moving on to the Approximation approach, we'll explain the algorithms k nearest neighbors (kNN) and Christofides. But let's start with the optimal solutions first.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Moving on to the Approximation approach, we'll explain the algorithms k nearest neighbors (kNN) and Christofides. But let's start with the optimal solutions first.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 350,
        "text_offset": 0,
        "word_length": 6,
        "text": "Moving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 100,
        "text_offset": 7,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5500000,
        "duration_milliseconds": 87,
        "text_offset": 10,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7875000,
        "duration_milliseconds": 762,
        "text_offset": 17,
        "word_length": 13,
        "text": "Approximation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 412,
        "text_offset": 31,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 137,
        "text_offset": 39,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 137,
        "text_offset": 41,
        "word_length": 5,
        "text": "we'll",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 387,
        "text_offset": 47,
        "word_length": 7,
        "text": "explain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28000000,
        "duration_milliseconds": 112,
        "text_offset": 55,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 600,
        "text_offset": 59,
        "word_length": 10,
        "text": "algorithms",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35625000,
        "duration_milliseconds": 200,
        "text_offset": 70,
        "word_length": 1,
        "text": "k",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 337,
        "text_offset": 72,
        "word_length": 7,
        "text": "nearest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41250000,
        "duration_milliseconds": 425,
        "text_offset": 80,
        "word_length": 9,
        "text": "neighbors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46375000,
        "duration_milliseconds": 12,
        "text_offset": 90,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 512,
        "text_offset": 91,
        "word_length": 3,
        "text": "kNN",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52875000,
        "duration_milliseconds": 62,
        "text_offset": 94,
        "word_length": 1,
        "text": ")",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 53500000,
        "duration_milliseconds": 112,
        "text_offset": 96,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54875000,
        "duration_milliseconds": 862,
        "text_offset": 100,
        "word_length": 12,
        "text": "Christofides",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63750000,
        "duration_milliseconds": 100,
        "text_offset": 112,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 72375000,
        "duration_milliseconds": 175,
        "text_offset": 114,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74375000,
        "duration_milliseconds": 212,
        "text_offset": 118,
        "word_length": 5,
        "text": "let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76625000,
        "duration_milliseconds": 312,
        "text_offset": 124,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "duration_milliseconds": 125,
        "text_offset": 130,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81500000,
        "duration_milliseconds": 100,
        "text_offset": 135,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82750000,
        "duration_milliseconds": 425,
        "text_offset": 139,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87250000,
        "duration_milliseconds": 525,
        "text_offset": 147,
        "word_length": 9,
        "text": "solutions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92750000,
        "duration_milliseconds": 500,
        "text_offset": 157,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "duration_milliseconds": 100,
        "text_offset": 162,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "moving-on-to-the-approximation-approach-we-ll-185a1c28.mp3",
    "final_audio": "moving-on-to-the-approximation-approach-we-ll-185a1c28.mp3"
  },
  {
    "input_text": "The Brute Force method is a straightforward but time-consuming approach to solve the TSP. It involves trying out all possible orders in which the cities can be visited.",
    "input_data": {
      "input_text": "The Brute Force method is a straightforward but time-consuming approach to solve the TSP. It involves trying out all possible orders in which the cities can be visited.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solve the TSP. It involves trying out all possible orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solve the TSP. It involves trying out all possible orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "duration_milliseconds": 225,
        "text_offset": 4,
        "word_length": 5,
        "text": "Brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 262,
        "text_offset": 10,
        "word_length": 5,
        "text": "Force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 325,
        "text_offset": 16,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 100,
        "text_offset": 23,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12125000,
        "duration_milliseconds": 62,
        "text_offset": 26,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 725,
        "text_offset": 28,
        "word_length": 15,
        "text": "straightforward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 150,
        "text_offset": 44,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 712,
        "text_offset": 48,
        "word_length": 14,
        "text": "time-consuming",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29500000,
        "duration_milliseconds": 387,
        "text_offset": 63,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 100,
        "text_offset": 72,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 325,
        "text_offset": 75,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38250000,
        "duration_milliseconds": 100,
        "text_offset": 81,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39375000,
        "duration_milliseconds": 712,
        "text_offset": 85,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 100,
        "text_offset": 88,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 55375000,
        "duration_milliseconds": 162,
        "text_offset": 90,
        "word_length": 2,
        "text": "It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57250000,
        "duration_milliseconds": 400,
        "text_offset": 93,
        "word_length": 8,
        "text": "involves",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61500000,
        "duration_milliseconds": 300,
        "text_offset": 102,
        "word_length": 6,
        "text": "trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64750000,
        "duration_milliseconds": 162,
        "text_offset": 109,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66625000,
        "duration_milliseconds": 200,
        "text_offset": 113,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 512,
        "text_offset": 117,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74125000,
        "duration_milliseconds": 350,
        "text_offset": 126,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77875000,
        "duration_milliseconds": 112,
        "text_offset": 133,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79250000,
        "duration_milliseconds": 200,
        "text_offset": 136,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81375000,
        "duration_milliseconds": 112,
        "text_offset": 142,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82625000,
        "duration_milliseconds": 375,
        "text_offset": 146,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86625000,
        "duration_milliseconds": 137,
        "text_offset": 153,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88125000,
        "duration_milliseconds": 112,
        "text_offset": 157,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89500000,
        "duration_milliseconds": 500,
        "text_offset": 160,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94625000,
        "duration_milliseconds": 100,
        "text_offset": 167,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-brute-force-method-is-a-straightforward-but-ff1ee3a1.mp3",
    "final_audio": "the-brute-force-method-is-a-straightforward-but-ff1ee3a1.mp3"
  },
  {
    "input_text": "As the first step in our Brute-Force algorithm, we generate all possible permutations of the cities. This means creating every possible order in which the cities can be visited.",
    "input_data": {
      "input_text": "As the first step in our Brute-Force algorithm, we generate all possible permutations of the cities. This means creating every possible order in which the cities can be visited.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As the first step in our Brute-Force algorithm, we generate all possible permutations of the cities. This means creating every possible order in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As the first step in our Brute-Force algorithm, we generate all possible permutations of the cities. This means creating every possible order in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 275,
        "text_offset": 7,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 237,
        "text_offset": 13,
        "word_length": 4,
        "text": "step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9750000,
        "duration_milliseconds": 100,
        "text_offset": 18,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 125,
        "text_offset": 21,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 487,
        "text_offset": 25,
        "word_length": 11,
        "text": "Brute-Force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 625,
        "text_offset": 37,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24750000,
        "duration_milliseconds": 162,
        "text_offset": 46,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 112,
        "text_offset": 48,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 462,
        "text_offset": 51,
        "word_length": 8,
        "text": "generate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32500000,
        "duration_milliseconds": 250,
        "text_offset": 60,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35125000,
        "duration_milliseconds": 500,
        "text_offset": 64,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40375000,
        "duration_milliseconds": 800,
        "text_offset": 73,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 62,
        "text_offset": 86,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49500000,
        "duration_milliseconds": 100,
        "text_offset": 89,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50750000,
        "duration_milliseconds": 475,
        "text_offset": 93,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55750000,
        "duration_milliseconds": 100,
        "text_offset": 99,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 64250000,
        "duration_milliseconds": 250,
        "text_offset": 101,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "duration_milliseconds": 262,
        "text_offset": 106,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69875000,
        "duration_milliseconds": 512,
        "text_offset": 112,
        "word_length": 8,
        "text": "creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75125000,
        "duration_milliseconds": 237,
        "text_offset": 121,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77750000,
        "duration_milliseconds": 512,
        "text_offset": 127,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83125000,
        "duration_milliseconds": 300,
        "text_offset": 136,
        "word_length": 5,
        "text": "order",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86375000,
        "duration_milliseconds": 125,
        "text_offset": 142,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87875000,
        "duration_milliseconds": 212,
        "text_offset": 145,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90250000,
        "duration_milliseconds": 125,
        "text_offset": 151,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91625000,
        "duration_milliseconds": 387,
        "text_offset": 155,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95750000,
        "duration_milliseconds": 162,
        "text_offset": 162,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 112,
        "text_offset": 166,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98875000,
        "duration_milliseconds": 500,
        "text_offset": 169,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104125000,
        "duration_milliseconds": 100,
        "text_offset": 176,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "as-the-first-step-in-our-brute-force-algorithm-we-7d626424.mp3",
    "final_audio": "as-the-first-step-in-our-brute-force-algorithm-we-7d626424.mp3"
  },
  {
    "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
    "input_data": {
      "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 362,
        "text_offset": 0,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 162,
        "text_offset": 6,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 562,
        "text_offset": 15,
        "word_length": 9,
        "text": "generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 725,
        "text_offset": 25,
        "word_length": 11,
        "text": "permutation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24000000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 550,
        "text_offset": 41,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 112,
        "text_offset": 51,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 250,
        "text_offset": 55,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36250000,
        "duration_milliseconds": 87,
        "text_offset": 62,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 100,
        "text_offset": 65,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38625000,
        "duration_milliseconds": 312,
        "text_offset": 69,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "duration_milliseconds": 137,
        "text_offset": 74,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 362,
        "text_offset": 77,
        "word_length": 7,
        "text": "summing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 112,
        "text_offset": 85,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48750000,
        "duration_milliseconds": 562,
        "text_offset": 89,
        "word_length": 9,
        "text": "distances",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54625000,
        "duration_milliseconds": 337,
        "text_offset": 99,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58250000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59375000,
        "duration_milliseconds": 400,
        "text_offset": 111,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 487,
        "text_offset": 119,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "then-for-each-generated-permutation-we-calculate-e0cb741a.mp3",
    "final_audio": "then-for-each-generated-permutation-we-calculate-e0cb741a.mp3"
  },
  {
    "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours. This is the optimal solution to the Traveling Salesperson Problem.",
    "input_data": {
      "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours. This is the optimal solution to the Traveling Salesperson Problem.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours. This is the optimal solution to the Traveling Salesperson Problem.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours. This is the optimal solution to the Traveling Salesperson Problem.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 350,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 112,
        "text_offset": 5,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 150,
        "text_offset": 8,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 587,
        "text_offset": 16,
        "word_length": 8,
        "text": "Identify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 125,
        "text_offset": 25,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 312,
        "text_offset": 29,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "duration_milliseconds": 125,
        "text_offset": 34,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22500000,
        "duration_milliseconds": 87,
        "text_offset": 39,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23500000,
        "duration_milliseconds": 500,
        "text_offset": 43,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28750000,
        "duration_milliseconds": 262,
        "text_offset": 52,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31625000,
        "duration_milliseconds": 287,
        "text_offset": 59,
        "word_length": 5,
        "text": "among",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34750000,
        "duration_milliseconds": 137,
        "text_offset": 65,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36375000,
        "duration_milliseconds": 112,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 650,
        "text_offset": 73,
        "word_length": 10,
        "text": "calculated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "duration_milliseconds": 475,
        "text_offset": 84,
        "word_length": 5,
        "text": "tours",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49500000,
        "duration_milliseconds": 100,
        "text_offset": 89,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 58125000,
        "duration_milliseconds": 250,
        "text_offset": 91,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60875000,
        "duration_milliseconds": 112,
        "text_offset": 96,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62250000,
        "duration_milliseconds": 125,
        "text_offset": 99,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63750000,
        "duration_milliseconds": 437,
        "text_offset": 103,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68375000,
        "duration_milliseconds": 475,
        "text_offset": 111,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73375000,
        "duration_milliseconds": 87,
        "text_offset": 120,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74375000,
        "duration_milliseconds": 112,
        "text_offset": 123,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75750000,
        "duration_milliseconds": 412,
        "text_offset": 127,
        "word_length": 9,
        "text": "Traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80125000,
        "duration_milliseconds": 712,
        "text_offset": 137,
        "word_length": 11,
        "text": "Salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87500000,
        "duration_milliseconds": 475,
        "text_offset": 149,
        "word_length": 7,
        "text": "Problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92375000,
        "duration_milliseconds": 100,
        "text_offset": 156,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-need-to-identify-the-tour-with-the-shortest-ca60383f.mp3",
    "final_audio": "now-we-need-to-identify-the-tour-with-the-shortest-ca60383f.mp3"
  },
  {
    "input_text": "We can calculate the number of possible paths as the number of possible permutations of n elements when each permutation is counted as a separate operation",
    "input_data": {
      "input_text": "We can calculate the number of possible paths as the number of possible permutations of n elements when each permutation is counted as a separate operation",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We can calculate the number of possible paths as the number of possible permutations of n elements when each permutation is counted as a separate operation</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We can calculate the number of possible paths as the number of possible permutations of n elements when each permutation is counted as a separate operation</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 162,
        "text_offset": 3,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 562,
        "text_offset": 7,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 100,
        "text_offset": 17,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 325,
        "text_offset": 21,
        "word_length": 6,
        "text": "number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 100,
        "text_offset": 28,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16000000,
        "duration_milliseconds": 500,
        "text_offset": 31,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 400,
        "text_offset": 40,
        "word_length": 5,
        "text": "paths",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25500000,
        "duration_milliseconds": 137,
        "text_offset": 46,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27125000,
        "duration_milliseconds": 100,
        "text_offset": 49,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28375000,
        "duration_milliseconds": 325,
        "text_offset": 53,
        "word_length": 6,
        "text": "number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 100,
        "text_offset": 60,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 500,
        "text_offset": 63,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38250000,
        "duration_milliseconds": 787,
        "text_offset": 72,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 87,
        "text_offset": 85,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47375000,
        "duration_milliseconds": 137,
        "text_offset": 88,
        "word_length": 1,
        "text": "n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "duration_milliseconds": 425,
        "text_offset": 90,
        "word_length": 8,
        "text": "elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53500000,
        "duration_milliseconds": 162,
        "text_offset": 99,
        "word_length": 4,
        "text": "when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55375000,
        "duration_milliseconds": 175,
        "text_offset": 104,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57375000,
        "duration_milliseconds": 687,
        "text_offset": 109,
        "word_length": 11,
        "text": "permutation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64500000,
        "duration_milliseconds": 112,
        "text_offset": 121,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65875000,
        "duration_milliseconds": 375,
        "text_offset": 124,
        "word_length": 7,
        "text": "counted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69875000,
        "duration_milliseconds": 137,
        "text_offset": 132,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71500000,
        "duration_milliseconds": 62,
        "text_offset": 135,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72250000,
        "duration_milliseconds": 400,
        "text_offset": 137,
        "word_length": 8,
        "text": "separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76500000,
        "duration_milliseconds": 662,
        "text_offset": 146,
        "word_length": 9,
        "text": "operation",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "we-can-calculate-the-number-of-possible-paths-as-bfdc720d.mp3",
    "final_audio": "we-can-calculate-the-number-of-possible-paths-as-bfdc720d.mp3"
  },
  {
    "input_text": "For the example we've seen before we used 5 nodes, so we get 12 possible routes.",
    "input_data": {
      "input_text": "For the example we've seen before we used 5 nodes, so we get 12 possible routes.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For the example we've seen before we used 5 nodes, so we get 12 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For the example we've seen before we used 5 nodes, so we get 12 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 62,
        "text_offset": 4,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 525,
        "text_offset": 8,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8625000,
        "duration_milliseconds": 162,
        "text_offset": 16,
        "word_length": 5,
        "text": "we've",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 250,
        "text_offset": 22,
        "word_length": 4,
        "text": "seen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 325,
        "text_offset": 27,
        "word_length": 6,
        "text": "before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18125000,
        "duration_milliseconds": 212,
        "text_offset": 37,
        "word_length": 4,
        "text": "used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "duration_milliseconds": 262,
        "text_offset": 42,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23250000,
        "duration_milliseconds": 362,
        "text_offset": 44,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 137,
        "text_offset": 49,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 29125000,
        "duration_milliseconds": 100,
        "text_offset": 51,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 112,
        "text_offset": 54,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 175,
        "text_offset": 57,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33375000,
        "duration_milliseconds": 300,
        "text_offset": 61,
        "word_length": 2,
        "text": "12",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36625000,
        "duration_milliseconds": 475,
        "text_offset": 64,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41625000,
        "duration_milliseconds": 387,
        "text_offset": 73,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45625000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-the-example-we-ve-seen-before-we-used-5-nodes-b2fe434c.mp3",
    "final_audio": "for-the-example-we-ve-seen-before-we-used-5-nodes-b2fe434c.mp3"
  },
  {
    "input_text": "If we just increase the number of nodes by 1, we already get 60 possible routes.",
    "input_data": {
      "input_text": "If we just increase the number of nodes by 1, we already get 60 possible routes.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">If we just increase the number of nodes by 1, we already get 60 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">If we just increase the number of nodes by 1, we already get 60 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3875000,
        "duration_milliseconds": 237,
        "text_offset": 6,
        "word_length": 4,
        "text": "just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 375,
        "text_offset": 11,
        "word_length": 8,
        "text": "increase",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 100,
        "text_offset": 20,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11750000,
        "duration_milliseconds": 300,
        "text_offset": 24,
        "word_length": 6,
        "text": "number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 75,
        "text_offset": 31,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16000000,
        "duration_milliseconds": 262,
        "text_offset": 34,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 125,
        "text_offset": 40,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 312,
        "text_offset": 43,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24250000,
        "duration_milliseconds": 162,
        "text_offset": 44,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 112,
        "text_offset": 46,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 387,
        "text_offset": 49,
        "word_length": 7,
        "text": "already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 175,
        "text_offset": 57,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33375000,
        "duration_milliseconds": 412,
        "text_offset": 61,
        "word_length": 2,
        "text": "60",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37625000,
        "duration_milliseconds": 487,
        "text_offset": 64,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42750000,
        "duration_milliseconds": 387,
        "text_offset": 73,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "if-we-just-increase-the-number-of-nodes-by-1-we-0db7743e.mp3",
    "final_audio": "if-we-just-increase-the-number-of-nodes-by-1-we-0db7743e.mp3"
  },
  {
    "input_text": "For 10 nodes, it's already 181440 potential shortest paths!!",
    "input_data": {
      "input_text": "For 10 nodes, it's already 181440 potential shortest paths!!",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For 10 nodes, it's already 181440 potential shortest paths!!</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For 10 nodes, it's already 181440 potential shortest paths!!</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 212,
        "text_offset": 4,
        "word_length": 2,
        "text": "10",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 337,
        "text_offset": 7,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 75,
        "text_offset": 12,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 137,
        "text_offset": 14,
        "word_length": 4,
        "text": "it's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 362,
        "text_offset": 19,
        "word_length": 7,
        "text": "already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 537,
        "text_offset": 27,
        "word_length": 6,
        "text": "181440",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41000000,
        "duration_milliseconds": 500,
        "text_offset": 34,
        "word_length": 9,
        "text": "potential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 362,
        "text_offset": 44,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50125000,
        "duration_milliseconds": 475,
        "text_offset": 53,
        "word_length": 5,
        "text": "paths",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 100,
        "text_offset": 58,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-10-nodes-it-s-already-181440-potential-0eb159b8.mp3",
    "final_audio": "for-10-nodes-it-s-already-181440-potential-0eb159b8.mp3"
  },
  {
    "input_text": "This is because we got an exponential time complexity.",
    "input_data": {
      "input_text": "This is because we got an exponential time complexity.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is because we got an exponential time complexity.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is because we got an exponential time complexity.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 137,
        "text_offset": 5,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 325,
        "text_offset": 8,
        "word_length": 7,
        "text": "because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 112,
        "text_offset": 16,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9625000,
        "duration_milliseconds": 212,
        "text_offset": 19,
        "word_length": 3,
        "text": "got",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 112,
        "text_offset": 23,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 712,
        "text_offset": 26,
        "word_length": 11,
        "text": "exponential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 262,
        "text_offset": 38,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23375000,
        "duration_milliseconds": 812,
        "text_offset": 43,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31625000,
        "duration_milliseconds": 100,
        "text_offset": 53,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-is-because-we-got-an-exponential-time-0e9cea1c.mp3",
    "final_audio": "this-is-because-we-got-an-exponential-time-0e9cea1c.mp3"
  },
  {
    "input_text": "Another way of solving the TSP is with the help of the branch and bound method. Let's start with a simple TSP example. Again we have a set of cities and need to find the shortest possible route visiting each city exactly once.",
    "input_data": {
      "input_text": "Another way of solving the TSP is with the help of the branch and bound method. Let's start with a simple TSP example. Again we have a set of cities and need to find the shortest possible route visiting each city exactly once.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Another way of solving the TSP is with the help of the branch and bound method. Let's start with a simple TSP example. Again we have a set of cities and need to find the shortest possible route visiting each city exactly once.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Another way of solving the TSP is with the help of the branch and bound method. Let's start with a simple TSP example. Again we have a set of cities and need to find the shortest possible route visiting each city exactly once.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 412,
        "text_offset": 0,
        "word_length": 7,
        "text": "Another",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 137,
        "text_offset": 8,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 100,
        "text_offset": 12,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7750000,
        "duration_milliseconds": 400,
        "text_offset": 15,
        "word_length": 7,
        "text": "solving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 100,
        "text_offset": 23,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 575,
        "text_offset": 27,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19000000,
        "duration_milliseconds": 125,
        "text_offset": 31,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "duration_milliseconds": 137,
        "text_offset": 34,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 100,
        "text_offset": 39,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23375000,
        "duration_milliseconds": 225,
        "text_offset": 43,
        "word_length": 4,
        "text": "help",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25750000,
        "duration_milliseconds": 87,
        "text_offset": 48,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26875000,
        "duration_milliseconds": 100,
        "text_offset": 51,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28125000,
        "duration_milliseconds": 350,
        "text_offset": 55,
        "word_length": 6,
        "text": "branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 100,
        "text_offset": 62,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 262,
        "text_offset": 66,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35750000,
        "duration_milliseconds": 425,
        "text_offset": 72,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40125000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 48750000,
        "duration_milliseconds": 262,
        "text_offset": 80,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51625000,
        "duration_milliseconds": 287,
        "text_offset": 86,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54750000,
        "duration_milliseconds": 137,
        "text_offset": 92,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56375000,
        "duration_milliseconds": 62,
        "text_offset": 97,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57125000,
        "duration_milliseconds": 387,
        "text_offset": 99,
        "word_length": 6,
        "text": "simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61250000,
        "duration_milliseconds": 562,
        "text_offset": 106,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67125000,
        "duration_milliseconds": 662,
        "text_offset": 110,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73875000,
        "duration_milliseconds": 100,
        "text_offset": 117,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 82500000,
        "duration_milliseconds": 412,
        "text_offset": 119,
        "word_length": 5,
        "text": "Again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86875000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88125000,
        "duration_milliseconds": 150,
        "text_offset": 128,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89750000,
        "duration_milliseconds": 62,
        "text_offset": 133,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90625000,
        "duration_milliseconds": 212,
        "text_offset": 135,
        "word_length": 3,
        "text": "set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93000000,
        "duration_milliseconds": 87,
        "text_offset": 139,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94125000,
        "duration_milliseconds": 375,
        "text_offset": 142,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98125000,
        "duration_milliseconds": 87,
        "text_offset": 149,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99250000,
        "duration_milliseconds": 150,
        "text_offset": 153,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100875000,
        "duration_milliseconds": 75,
        "text_offset": 158,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101875000,
        "duration_milliseconds": 250,
        "text_offset": 161,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104500000,
        "duration_milliseconds": 75,
        "text_offset": 166,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105375000,
        "duration_milliseconds": 437,
        "text_offset": 170,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109875000,
        "duration_milliseconds": 475,
        "text_offset": 179,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114875000,
        "duration_milliseconds": 187,
        "text_offset": 188,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116875000,
        "duration_milliseconds": 450,
        "text_offset": 194,
        "word_length": 8,
        "text": "visiting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121500000,
        "duration_milliseconds": 150,
        "text_offset": 203,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123250000,
        "duration_milliseconds": 287,
        "text_offset": 208,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126375000,
        "duration_milliseconds": 500,
        "text_offset": 213,
        "word_length": 7,
        "text": "exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131625000,
        "duration_milliseconds": 437,
        "text_offset": 221,
        "word_length": 4,
        "text": "once",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136125000,
        "duration_milliseconds": 100,
        "text_offset": 225,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "another-way-of-solving-the-tsp-is-with-the-help-of-da5ad669.mp3",
    "final_audio": "another-way-of-solving-the-tsp-is-with-the-help-of-da5ad669.mp3"
  },
  {
    "input_text": "The Branch-and-Bound method begins by constructing a tree of all possibilities. First we need a Graph. Let's use the same graph and start at node one.",
    "input_data": {
      "input_text": "The Branch-and-Bound method begins by constructing a tree of all possibilities. First we need a Graph. Let's use the same graph and start at node one.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Branch-and-Bound method begins by constructing a tree of all possibilities. First we need a Graph. Let's use the same graph and start at node one.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Branch-and-Bound method begins by constructing a tree of all possibilities. First we need a Graph. Let's use the same graph and start at node one.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 125,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1875000,
        "duration_milliseconds": 712,
        "text_offset": 4,
        "word_length": 16,
        "text": "Branch-and-Bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9250000,
        "duration_milliseconds": 287,
        "text_offset": 21,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 412,
        "text_offset": 28,
        "word_length": 6,
        "text": "begins",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 150,
        "text_offset": 35,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 662,
        "text_offset": 38,
        "word_length": 12,
        "text": "constructing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25375000,
        "duration_milliseconds": 50,
        "text_offset": 51,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 287,
        "text_offset": 53,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 100,
        "text_offset": 58,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 175,
        "text_offset": 61,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 862,
        "text_offset": 65,
        "word_length": 13,
        "text": "possibilities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41000000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 49500000,
        "duration_milliseconds": 412,
        "text_offset": 80,
        "word_length": 5,
        "text": "First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53875000,
        "duration_milliseconds": 112,
        "text_offset": 86,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55250000,
        "duration_milliseconds": 175,
        "text_offset": 89,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57250000,
        "duration_milliseconds": 62,
        "text_offset": 94,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58000000,
        "duration_milliseconds": 650,
        "text_offset": 96,
        "word_length": 5,
        "text": "Graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64750000,
        "duration_milliseconds": 100,
        "text_offset": 101,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 73375000,
        "duration_milliseconds": 287,
        "text_offset": 103,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76500000,
        "duration_milliseconds": 175,
        "text_offset": 109,
        "word_length": 3,
        "text": "use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78500000,
        "duration_milliseconds": 112,
        "text_offset": 113,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79750000,
        "duration_milliseconds": 275,
        "text_offset": 117,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82750000,
        "duration_milliseconds": 350,
        "text_offset": 122,
        "word_length": 5,
        "text": "graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86375000,
        "duration_milliseconds": 100,
        "text_offset": 128,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87625000,
        "duration_milliseconds": 312,
        "text_offset": 132,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91000000,
        "duration_milliseconds": 100,
        "text_offset": 138,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92125000,
        "duration_milliseconds": 212,
        "text_offset": 141,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94500000,
        "duration_milliseconds": 275,
        "text_offset": 146,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 100,
        "text_offset": 149,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-branch-and-bound-method-begins-by-constructing-0e9f9083.mp3",
    "final_audio": "the-branch-and-bound-method-begins-by-constructing-0e9f9083.mp3"
  },
  {
    "input_text": "Now we have to look at the next possible nodes. In this case we have four options. We can go to node 2, 3, 4 or 5.",
    "input_data": {
      "input_text": "Now we have to look at the next possible nodes. In this case we have four options. We can go to node 2, 3, 4 or 5.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we have to look at the next possible nodes. In this case we have four options. We can go to node 2, 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we have to look at the next possible nodes. In this case we have four options. We can go to node 2, 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 250,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 125,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 175,
        "text_offset": 7,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 100,
        "text_offset": 12,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7750000,
        "duration_milliseconds": 225,
        "text_offset": 15,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 75,
        "text_offset": 20,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 100,
        "text_offset": 23,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 275,
        "text_offset": 27,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 475,
        "text_offset": 32,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 437,
        "text_offset": 41,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25000000,
        "duration_milliseconds": 100,
        "text_offset": 46,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 187,
        "text_offset": 48,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35750000,
        "duration_milliseconds": 200,
        "text_offset": 51,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "duration_milliseconds": 275,
        "text_offset": 56,
        "word_length": 4,
        "text": "case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40875000,
        "duration_milliseconds": 137,
        "text_offset": 61,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42500000,
        "duration_milliseconds": 187,
        "text_offset": 64,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44625000,
        "duration_milliseconds": 300,
        "text_offset": 69,
        "word_length": 4,
        "text": "four",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47875000,
        "duration_milliseconds": 500,
        "text_offset": 74,
        "word_length": 7,
        "text": "options",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53125000,
        "duration_milliseconds": 100,
        "text_offset": 81,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 61750000,
        "duration_milliseconds": 162,
        "text_offset": 83,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63500000,
        "duration_milliseconds": 137,
        "text_offset": 86,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65125000,
        "duration_milliseconds": 125,
        "text_offset": 90,
        "word_length": 2,
        "text": "go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66500000,
        "duration_milliseconds": 87,
        "text_offset": 93,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67500000,
        "duration_milliseconds": 237,
        "text_offset": 96,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70125000,
        "duration_milliseconds": 262,
        "text_offset": 101,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73625000,
        "duration_milliseconds": 62,
        "text_offset": 102,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 74250000,
        "duration_milliseconds": 400,
        "text_offset": 104,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79125000,
        "duration_milliseconds": 75,
        "text_offset": 105,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 79875000,
        "duration_milliseconds": 362,
        "text_offset": 107,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84500000,
        "duration_milliseconds": 125,
        "text_offset": 109,
        "word_length": 2,
        "text": "or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86000000,
        "duration_milliseconds": 500,
        "text_offset": 112,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91250000,
        "duration_milliseconds": 100,
        "text_offset": 113,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-have-to-look-at-the-next-possible-nodes-in-8e8c1e2f.mp3",
    "final_audio": "now-we-have-to-look-at-the-next-possible-nodes-in-8e8c1e2f.mp3"
  },
  {
    "input_text": "At the same time we can tranform the graph on the right to a tree with node one as the root. This tree will show all the possible routes that the salesperson can use. As explained, starting with node one the next possible nodes could be node 2, 3, 4 or 5.",
    "input_data": {
      "input_text": "At the same time we can tranform the graph on the right to a tree with node one as the root. This tree will show all the possible routes that the salesperson can use. As explained, starting with node one the next possible nodes could be node 2, 3, 4 or 5.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">At the same time we can tranform the graph on the right to a tree with node one as the root. This tree will show all the possible routes that the salesperson can use. As explained, starting with node one the next possible nodes could be node 2, 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">At the same time we can tranform the graph on the right to a tree with node one as the root. This tree will show all the possible routes that the salesperson can use. As explained, starting with node one the next possible nodes could be node 2, 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 2,
        "text": "At",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3750000,
        "duration_milliseconds": 237,
        "text_offset": 7,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6375000,
        "duration_milliseconds": 262,
        "text_offset": 12,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 112,
        "text_offset": 17,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10375000,
        "duration_milliseconds": 125,
        "text_offset": 20,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 487,
        "text_offset": 24,
        "word_length": 8,
        "text": "tranform",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17000000,
        "duration_milliseconds": 100,
        "text_offset": 33,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18250000,
        "duration_milliseconds": 300,
        "text_offset": 37,
        "word_length": 5,
        "text": "graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21500000,
        "duration_milliseconds": 87,
        "text_offset": 43,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 87,
        "text_offset": 46,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 237,
        "text_offset": 50,
        "word_length": 5,
        "text": "right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26375000,
        "duration_milliseconds": 125,
        "text_offset": 56,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 62,
        "text_offset": 59,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 225,
        "text_offset": 61,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31000000,
        "duration_milliseconds": 162,
        "text_offset": 66,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32875000,
        "duration_milliseconds": 262,
        "text_offset": 71,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35750000,
        "duration_milliseconds": 175,
        "text_offset": 76,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 112,
        "text_offset": 80,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39125000,
        "duration_milliseconds": 87,
        "text_offset": 83,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40250000,
        "duration_milliseconds": 350,
        "text_offset": 87,
        "word_length": 4,
        "text": "root",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "duration_milliseconds": 100,
        "text_offset": 91,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 52625000,
        "duration_milliseconds": 237,
        "text_offset": 93,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55125000,
        "duration_milliseconds": 200,
        "text_offset": 98,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57250000,
        "duration_milliseconds": 137,
        "text_offset": 103,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58875000,
        "duration_milliseconds": 250,
        "text_offset": 108,
        "word_length": 4,
        "text": "show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61625000,
        "duration_milliseconds": 200,
        "text_offset": 113,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63750000,
        "duration_milliseconds": 125,
        "text_offset": 117,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65125000,
        "duration_milliseconds": 450,
        "text_offset": 121,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69875000,
        "duration_milliseconds": 275,
        "text_offset": 130,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72875000,
        "duration_milliseconds": 137,
        "text_offset": 137,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74500000,
        "duration_milliseconds": 100,
        "text_offset": 142,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75625000,
        "duration_milliseconds": 712,
        "text_offset": 146,
        "word_length": 11,
        "text": "salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83000000,
        "duration_milliseconds": 150,
        "text_offset": 158,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84750000,
        "duration_milliseconds": 437,
        "text_offset": 162,
        "word_length": 3,
        "text": "use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89375000,
        "duration_milliseconds": 100,
        "text_offset": 165,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 97875000,
        "duration_milliseconds": 200,
        "text_offset": 167,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100125000,
        "duration_milliseconds": 487,
        "text_offset": 170,
        "word_length": 9,
        "text": "explained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "duration_milliseconds": 112,
        "text_offset": 179,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 107125000,
        "duration_milliseconds": 375,
        "text_offset": 181,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111000000,
        "duration_milliseconds": 150,
        "text_offset": 190,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112750000,
        "duration_milliseconds": 225,
        "text_offset": 195,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115250000,
        "duration_milliseconds": 162,
        "text_offset": 200,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117125000,
        "duration_milliseconds": 75,
        "text_offset": 204,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "duration_milliseconds": 262,
        "text_offset": 208,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120875000,
        "duration_milliseconds": 450,
        "text_offset": 213,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125625000,
        "duration_milliseconds": 275,
        "text_offset": 222,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128500000,
        "duration_milliseconds": 137,
        "text_offset": 228,
        "word_length": 5,
        "text": "could",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130125000,
        "duration_milliseconds": 100,
        "text_offset": 234,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131375000,
        "duration_milliseconds": 225,
        "text_offset": 237,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133750000,
        "duration_milliseconds": 262,
        "text_offset": 242,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137375000,
        "duration_milliseconds": 62,
        "text_offset": 243,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 138125000,
        "duration_milliseconds": 425,
        "text_offset": 245,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143250000,
        "duration_milliseconds": 62,
        "text_offset": 246,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 143875000,
        "duration_milliseconds": 362,
        "text_offset": 248,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148500000,
        "duration_milliseconds": 100,
        "text_offset": 250,
        "word_length": 2,
        "text": "or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149750000,
        "duration_milliseconds": 475,
        "text_offset": 253,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154750000,
        "duration_milliseconds": 100,
        "text_offset": 254,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "at-the-same-time-we-can-tranform-the-graph-on-the-b00d1e3b.mp3",
    "final_audio": "at-the-same-time-we-can-tranform-the-graph-on-the-b00d1e3b.mp3"
  },
  {
    "input_text": "This would be the first version of the tree. Now we have to take a look at the next steps. Let's say we choose node 2 as the second node to travel to.",
    "input_data": {
      "input_text": "This would be the first version of the tree. Now we have to take a look at the next steps. Let's say we choose node 2 as the second node to travel to.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This would be the first version of the tree. Now we have to take a look at the next steps. Let's say we choose node 2 as the second node to travel to.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This would be the first version of the tree. Now we have to take a look at the next steps. Let's say we choose node 2 as the second node to travel to.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 262,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 150,
        "text_offset": 5,
        "word_length": 5,
        "text": "would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 112,
        "text_offset": 11,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6250000,
        "duration_milliseconds": 125,
        "text_offset": 14,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 350,
        "text_offset": 18,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 375,
        "text_offset": 24,
        "word_length": 7,
        "text": "version",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 87,
        "text_offset": 32,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16375000,
        "duration_milliseconds": 100,
        "text_offset": 35,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 437,
        "text_offset": 39,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 250,
        "text_offset": 45,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33250000,
        "duration_milliseconds": 137,
        "text_offset": 49,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 175,
        "text_offset": 52,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36875000,
        "duration_milliseconds": 87,
        "text_offset": 57,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37875000,
        "duration_milliseconds": 225,
        "text_offset": 60,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40250000,
        "duration_milliseconds": 62,
        "text_offset": 65,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41125000,
        "duration_milliseconds": 262,
        "text_offset": 67,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "duration_milliseconds": 75,
        "text_offset": 72,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "duration_milliseconds": 100,
        "text_offset": 75,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46125000,
        "duration_milliseconds": 250,
        "text_offset": 79,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48875000,
        "duration_milliseconds": 487,
        "text_offset": 84,
        "word_length": 5,
        "text": "steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53875000,
        "duration_milliseconds": 100,
        "text_offset": 89,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 62500000,
        "duration_milliseconds": 262,
        "text_offset": 91,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65250000,
        "duration_milliseconds": 137,
        "text_offset": 97,
        "word_length": 3,
        "text": "say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66875000,
        "duration_milliseconds": 112,
        "text_offset": 101,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68250000,
        "duration_milliseconds": 287,
        "text_offset": 104,
        "word_length": 6,
        "text": "choose",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71375000,
        "duration_milliseconds": 237,
        "text_offset": 111,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74000000,
        "duration_milliseconds": 250,
        "text_offset": 116,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76750000,
        "duration_milliseconds": 125,
        "text_offset": 118,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78250000,
        "duration_milliseconds": 112,
        "text_offset": 121,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79625000,
        "duration_milliseconds": 350,
        "text_offset": 125,
        "word_length": 6,
        "text": "second",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83375000,
        "duration_milliseconds": 162,
        "text_offset": 132,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85125000,
        "duration_milliseconds": 62,
        "text_offset": 137,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86000000,
        "duration_milliseconds": 387,
        "text_offset": 140,
        "word_length": 6,
        "text": "travel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90125000,
        "duration_milliseconds": 237,
        "text_offset": 147,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92625000,
        "duration_milliseconds": 112,
        "text_offset": 149,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-would-be-the-first-version-of-the-tree-now-we-934aba13.mp3",
    "final_audio": "this-would-be-the-first-version-of-the-tree-now-we-934aba13.mp3"
  },
  {
    "input_text": "Starting from node 2, the next options would be node 3, 4 or 5.",
    "input_data": {
      "input_text": "Starting from node 2, the next options would be node 3, 4 or 5.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Starting from node 2, the next options would be node 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Starting from node 2, the next options would be node 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 450,
        "text_offset": 0,
        "word_length": 8,
        "text": "Starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 162,
        "text_offset": 9,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 200,
        "text_offset": 14,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 225,
        "text_offset": 19,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 50,
        "text_offset": 20,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 87,
        "text_offset": 22,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 275,
        "text_offset": 26,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 337,
        "text_offset": 31,
        "word_length": 7,
        "text": "options",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 125,
        "text_offset": 39,
        "word_length": 5,
        "text": "would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 112,
        "text_offset": 45,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 200,
        "text_offset": 48,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25875000,
        "duration_milliseconds": 325,
        "text_offset": 53,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30000000,
        "duration_milliseconds": 87,
        "text_offset": 54,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 30875000,
        "duration_milliseconds": 400,
        "text_offset": 56,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35875000,
        "duration_milliseconds": 137,
        "text_offset": 58,
        "word_length": 2,
        "text": "or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37500000,
        "duration_milliseconds": 475,
        "text_offset": 61,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42500000,
        "duration_milliseconds": 100,
        "text_offset": 62,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "starting-from-node-2-the-next-options-would-be-78225796.mp3",
    "final_audio": "starting-from-node-2-the-next-options-would-be-78225796.mp3"
  },
  {
    "input_text": "Now we can create the next step at the tree. Again the next possible nodes to travel to would be node 3, 4 and 5.",
    "input_data": {
      "input_text": "Now we can create the next step at the tree. Again the next possible nodes to travel to would be node 3, 4 and 5.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we can create the next step at the tree. Again the next possible nodes to travel to would be node 3, 4 and 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we can create the next step at the tree. Again the next possible nodes to travel to would be node 3, 4 and 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 137,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5125000,
        "duration_milliseconds": 162,
        "text_offset": 7,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7000000,
        "duration_milliseconds": 337,
        "text_offset": 11,
        "word_length": 6,
        "text": "create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10625000,
        "duration_milliseconds": 100,
        "text_offset": 18,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11750000,
        "duration_milliseconds": 262,
        "text_offset": 22,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 275,
        "text_offset": 27,
        "word_length": 4,
        "text": "step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 75,
        "text_offset": 32,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18625000,
        "duration_milliseconds": 100,
        "text_offset": 35,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 412,
        "text_offset": 39,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24125000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 312,
        "text_offset": 45,
        "word_length": 5,
        "text": "Again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36125000,
        "duration_milliseconds": 75,
        "text_offset": 51,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 262,
        "text_offset": 55,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39875000,
        "duration_milliseconds": 450,
        "text_offset": 60,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44625000,
        "duration_milliseconds": 262,
        "text_offset": 69,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47375000,
        "duration_milliseconds": 87,
        "text_offset": 75,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48500000,
        "duration_milliseconds": 337,
        "text_offset": 78,
        "word_length": 6,
        "text": "travel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52125000,
        "duration_milliseconds": 87,
        "text_offset": 85,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53125000,
        "duration_milliseconds": 125,
        "text_offset": 88,
        "word_length": 5,
        "text": "would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54625000,
        "duration_milliseconds": 112,
        "text_offset": 94,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 225,
        "text_offset": 97,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58500000,
        "duration_milliseconds": 337,
        "text_offset": 102,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62750000,
        "duration_milliseconds": 75,
        "text_offset": 103,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 63500000,
        "duration_milliseconds": 337,
        "text_offset": 105,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69125000,
        "duration_milliseconds": 487,
        "text_offset": 111,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74250000,
        "duration_milliseconds": 100,
        "text_offset": 112,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-can-create-the-next-step-at-the-tree-again-38548e14.mp3",
    "final_audio": "now-we-can-create-the-next-step-at-the-tree-again-38548e14.mp3"
  },
  {
    "input_text": "Let's continue creating one possible route. We decide to travel to node 5 as our next city.",
    "input_data": {
      "input_text": "Let's continue creating one possible route. We decide to travel to node 5 as our next city.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's continue creating one possible route. We decide to travel to node 5 as our next city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's continue creating one possible route. We decide to travel to node 5 as our next city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 250,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 500,
        "text_offset": 6,
        "word_length": 8,
        "text": "continue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 462,
        "text_offset": 15,
        "word_length": 8,
        "text": "creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 212,
        "text_offset": 24,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15500000,
        "duration_milliseconds": 500,
        "text_offset": 28,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 337,
        "text_offset": 37,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24375000,
        "duration_milliseconds": 100,
        "text_offset": 42,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 162,
        "text_offset": 44,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34750000,
        "duration_milliseconds": 387,
        "text_offset": 47,
        "word_length": 6,
        "text": "decide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38875000,
        "duration_milliseconds": 75,
        "text_offset": 54,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39875000,
        "duration_milliseconds": 375,
        "text_offset": 57,
        "word_length": 6,
        "text": "travel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43875000,
        "duration_milliseconds": 87,
        "text_offset": 64,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44875000,
        "duration_milliseconds": 237,
        "text_offset": 67,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 387,
        "text_offset": 72,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51625000,
        "duration_milliseconds": 112,
        "text_offset": 74,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53000000,
        "duration_milliseconds": 112,
        "text_offset": 77,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54375000,
        "duration_milliseconds": 250,
        "text_offset": 81,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57000000,
        "duration_milliseconds": 375,
        "text_offset": 86,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "duration_milliseconds": 100,
        "text_offset": 90,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-continue-creating-one-possible-route-we-4250b805.mp3",
    "final_audio": "let-s-continue-creating-one-possible-route-we-4250b805.mp3"
  },
  {
    "input_text": "Starting from node 5, there are two cities left that have not been visited yet. Node 3 and 4.",
    "input_data": {
      "input_text": "Starting from node 5, there are two cities left that have not been visited yet. Node 3 and 4.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Starting from node 5, there are two cities left that have not been visited yet. Node 3 and 4.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Starting from node 5, there are two cities left that have not been visited yet. Node 3 and 4.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 462,
        "text_offset": 0,
        "word_length": 8,
        "text": "Starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 162,
        "text_offset": 9,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 200,
        "text_offset": 14,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 375,
        "text_offset": 19,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 100,
        "text_offset": 20,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 162,
        "text_offset": 22,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17000000,
        "duration_milliseconds": 112,
        "text_offset": 28,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18250000,
        "duration_milliseconds": 212,
        "text_offset": 32,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 387,
        "text_offset": 36,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24750000,
        "duration_milliseconds": 275,
        "text_offset": 43,
        "word_length": 4,
        "text": "left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 100,
        "text_offset": 48,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 137,
        "text_offset": 53,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30500000,
        "duration_milliseconds": 237,
        "text_offset": 58,
        "word_length": 3,
        "text": "not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 150,
        "text_offset": 62,
        "word_length": 4,
        "text": "been",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34750000,
        "duration_milliseconds": 425,
        "text_offset": 67,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39250000,
        "duration_milliseconds": 300,
        "text_offset": 75,
        "word_length": 3,
        "text": "yet",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 337,
        "text_offset": 80,
        "word_length": 4,
        "text": "Node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54500000,
        "duration_milliseconds": 275,
        "text_offset": 85,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57500000,
        "duration_milliseconds": 100,
        "text_offset": 87,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58625000,
        "duration_milliseconds": 500,
        "text_offset": 91,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63875000,
        "duration_milliseconds": 100,
        "text_offset": 92,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "starting-from-node-5-there-are-two-cities-left-c58b3488.mp3",
    "final_audio": "starting-from-node-5-there-are-two-cities-left-c58b3488.mp3"
  },
  {
    "input_text": "Let's go back to the tree and add the last two options, node 3 and 4",
    "input_data": {
      "input_text": "Let's go back to the tree and add the last two options, node 3 and 4",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's go back to the tree and add the last two options, node 3 and 4</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's go back to the tree and add the last two options, node 3 and 4</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 112,
        "text_offset": 6,
        "word_length": 2,
        "text": "go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 212,
        "text_offset": 9,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6375000,
        "duration_milliseconds": 87,
        "text_offset": 14,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 112,
        "text_offset": 17,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 237,
        "text_offset": 21,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11375000,
        "duration_milliseconds": 87,
        "text_offset": 26,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 162,
        "text_offset": 30,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 87,
        "text_offset": 34,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 262,
        "text_offset": 38,
        "word_length": 4,
        "text": "last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18250000,
        "duration_milliseconds": 175,
        "text_offset": 43,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 412,
        "text_offset": 47,
        "word_length": 7,
        "text": "options",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25250000,
        "duration_milliseconds": 137,
        "text_offset": 54,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26750000,
        "duration_milliseconds": 212,
        "text_offset": 56,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 212,
        "text_offset": 61,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 87,
        "text_offset": 63,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32500000,
        "duration_milliseconds": 450,
        "text_offset": 67,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "let-s-go-back-to-the-tree-and-add-the-last-two-674aad1d.mp3",
    "final_audio": "let-s-go-back-to-the-tree-and-add-the-last-two-674aad1d.mp3"
  },
  {
    "input_text": "This time we choose node 3 as the next city.",
    "input_data": {
      "input_text": "This time we choose node 3 as the next city.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This time we choose node 3 as the next city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This time we choose node 3 as the next city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 225,
        "text_offset": 5,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5500000,
        "duration_milliseconds": 112,
        "text_offset": 10,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 287,
        "text_offset": 13,
        "word_length": 6,
        "text": "choose",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 212,
        "text_offset": 20,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 325,
        "text_offset": 25,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 137,
        "text_offset": 27,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 87,
        "text_offset": 30,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 237,
        "text_offset": 34,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "duration_milliseconds": 387,
        "text_offset": 39,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-time-we-choose-node-3-as-the-next-city-4919d50c.mp3",
    "final_audio": "this-time-we-choose-node-3-as-the-next-city-4919d50c.mp3"
  },
  {
    "input_text": "As you can see the last city, that we have not visited is city 4.",
    "input_data": {
      "input_text": "As you can see the last city, that we have not visited is city 4.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As you can see the last city, that we have not visited is city 4.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As you can see the last city, that we have not visited is city 4.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 150,
        "text_offset": 7,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 200,
        "text_offset": 11,
        "word_length": 3,
        "text": "see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 125,
        "text_offset": 15,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9625000,
        "duration_milliseconds": 275,
        "text_offset": 19,
        "word_length": 4,
        "text": "last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12625000,
        "duration_milliseconds": 287,
        "text_offset": 24,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16375000,
        "duration_milliseconds": 62,
        "text_offset": 28,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 137,
        "text_offset": 30,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 100,
        "text_offset": 35,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "duration_milliseconds": 137,
        "text_offset": 38,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 212,
        "text_offset": 43,
        "word_length": 3,
        "text": "not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 437,
        "text_offset": 47,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28500000,
        "duration_milliseconds": 125,
        "text_offset": 55,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30000000,
        "duration_milliseconds": 250,
        "text_offset": 58,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 412,
        "text_offset": 63,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37125000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "as-you-can-see-the-last-city-that-we-have-not-6891ee7e.mp3",
    "final_audio": "as-you-can-see-the-last-city-that-we-have-not-6891ee7e.mp3"
  },
  {
    "input_text": "Let's also add node 4 in the tree. Now we have visited every city.",
    "input_data": {
      "input_text": "Let's also add node 4 in the tree. Now we have visited every city.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's also add node 4 in the tree. Now we have visited every city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's also add node 4 in the tree. Now we have visited every city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 250,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 300,
        "text_offset": 6,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 162,
        "text_offset": 11,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 212,
        "text_offset": 15,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10750000,
        "duration_milliseconds": 275,
        "text_offset": 20,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13750000,
        "duration_milliseconds": 62,
        "text_offset": 22,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 87,
        "text_offset": 25,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 412,
        "text_offset": 29,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20125000,
        "duration_milliseconds": 100,
        "text_offset": 33,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 312,
        "text_offset": 35,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "duration_milliseconds": 162,
        "text_offset": 39,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33875000,
        "duration_milliseconds": 175,
        "text_offset": 42,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35875000,
        "duration_milliseconds": 475,
        "text_offset": 47,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40750000,
        "duration_milliseconds": 262,
        "text_offset": 55,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 437,
        "text_offset": 61,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 100,
        "text_offset": 65,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-also-add-node-4-in-the-tree-now-we-have-e2892f1e.mp3",
    "final_audio": "let-s-also-add-node-4-in-the-tree-now-we-have-e2892f1e.mp3"
  },
  {
    "input_text": "At the end we have to travel to the city where we started the tour. Let's finish our route by traveling back to city 1.",
    "input_data": {
      "input_text": "At the end we have to travel to the city where we started the tour. Let's finish our route by traveling back to city 1.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">At the end we have to travel to the city where we started the tour. Let's finish our route by traveling back to city 1.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">At the end we have to travel to the city where we started the tour. Let's finish our route by traveling back to city 1.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 2,
        "text": "At",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4000000,
        "duration_milliseconds": 287,
        "text_offset": 7,
        "word_length": 3,
        "text": "end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 112,
        "text_offset": 11,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 150,
        "text_offset": 14,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 87,
        "text_offset": 19,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 375,
        "text_offset": 22,
        "word_length": 6,
        "text": "travel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15125000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16250000,
        "duration_milliseconds": 125,
        "text_offset": 32,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17750000,
        "duration_milliseconds": 325,
        "text_offset": 36,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 212,
        "text_offset": 41,
        "word_length": 5,
        "text": "where",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 125,
        "text_offset": 47,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 350,
        "text_offset": 50,
        "word_length": 7,
        "text": "started",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28875000,
        "duration_milliseconds": 100,
        "text_offset": 58,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30125000,
        "duration_milliseconds": 450,
        "text_offset": 62,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 100,
        "text_offset": 66,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 43500000,
        "duration_milliseconds": 287,
        "text_offset": 68,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46500000,
        "duration_milliseconds": 325,
        "text_offset": 74,
        "word_length": 6,
        "text": "finish",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "duration_milliseconds": 125,
        "text_offset": 81,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51500000,
        "duration_milliseconds": 212,
        "text_offset": 85,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53875000,
        "duration_milliseconds": 112,
        "text_offset": 91,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55250000,
        "duration_milliseconds": 437,
        "text_offset": 94,
        "word_length": 9,
        "text": "traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59875000,
        "duration_milliseconds": 237,
        "text_offset": 104,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62375000,
        "duration_milliseconds": 75,
        "text_offset": 109,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63375000,
        "duration_milliseconds": 300,
        "text_offset": 112,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66625000,
        "duration_milliseconds": 337,
        "text_offset": 117,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 100,
        "text_offset": 118,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "at-the-end-we-have-to-travel-to-the-city-where-we-1f2f997a.mp3",
    "final_audio": "at-the-end-we-have-to-travel-to-the-city-where-we-1f2f997a.mp3"
  },
  {
    "input_text": "Now we can also finish our route on the tree by adding node 1 as our last node.",
    "input_data": {
      "input_text": "Now we can also finish our route on the tree by adding node 1 as our last node.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we can also finish our route on the tree by adding node 1 as our last node.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we can also finish our route on the tree by adding node 1 as our last node.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 137,
        "text_offset": 7,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 262,
        "text_offset": 11,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 312,
        "text_offset": 16,
        "word_length": 6,
        "text": "finish",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12125000,
        "duration_milliseconds": 137,
        "text_offset": 23,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13750000,
        "duration_milliseconds": 175,
        "text_offset": 27,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 100,
        "text_offset": 33,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16875000,
        "duration_milliseconds": 87,
        "text_offset": 36,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "duration_milliseconds": 262,
        "text_offset": 40,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 162,
        "text_offset": 45,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22500000,
        "duration_milliseconds": 325,
        "text_offset": 48,
        "word_length": 6,
        "text": "adding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 200,
        "text_offset": 55,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28250000,
        "duration_milliseconds": 175,
        "text_offset": 60,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 125,
        "text_offset": 62,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 125,
        "text_offset": 65,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33250000,
        "duration_milliseconds": 262,
        "text_offset": 69,
        "word_length": 4,
        "text": "last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36000000,
        "duration_milliseconds": 325,
        "text_offset": 74,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-can-also-finish-our-route-on-the-tree-by-6dd97e31.mp3",
    "final_audio": "now-we-can-also-finish-our-route-on-the-tree-by-6dd97e31.mp3"
  },
  {
    "input_text": "As you can see this is one possible route and the tree is not complete. Let's create the complete tree.",
    "input_data": {
      "input_text": "As you can see this is one possible route and the tree is not complete. Let's create the complete tree.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As you can see this is one possible route and the tree is not complete. Let's create the complete tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As you can see this is one possible route and the tree is not complete. Let's create the complete tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 162,
        "text_offset": 7,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 212,
        "text_offset": 11,
        "word_length": 3,
        "text": "see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 187,
        "text_offset": 15,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 137,
        "text_offset": 20,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 250,
        "text_offset": 23,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 512,
        "text_offset": 27,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 275,
        "text_offset": 36,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22875000,
        "duration_milliseconds": 75,
        "text_offset": 42,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 87,
        "text_offset": 46,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24875000,
        "duration_milliseconds": 225,
        "text_offset": 50,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 112,
        "text_offset": 55,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28500000,
        "duration_milliseconds": 175,
        "text_offset": 58,
        "word_length": 3,
        "text": "not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30500000,
        "duration_milliseconds": 537,
        "text_offset": 62,
        "word_length": 8,
        "text": "complete",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36125000,
        "duration_milliseconds": 100,
        "text_offset": 70,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 44750000,
        "duration_milliseconds": 275,
        "text_offset": 72,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 350,
        "text_offset": 78,
        "word_length": 6,
        "text": "create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51375000,
        "duration_milliseconds": 112,
        "text_offset": 85,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52750000,
        "duration_milliseconds": 400,
        "text_offset": 89,
        "word_length": 8,
        "text": "complete",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57000000,
        "duration_milliseconds": 437,
        "text_offset": 98,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61625000,
        "duration_milliseconds": 100,
        "text_offset": 102,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "as-you-can-see-this-is-one-possible-route-and-the-68209a8c.mp3",
    "final_audio": "as-you-can-see-this-is-one-possible-route-and-the-68209a8c.mp3"
  },
  {
    "input_text": "This tree shows every possible route, if you start from node one. Here we can now see that there are 24 possible routes to get to the last node. But is you take a closer look at the first and last route, you can see that the routes are identical, if we have a symmetrical TSP. That means if we have a symmetrical TSP, as in our example, we can ignore half of the routes.",
    "input_data": {
      "input_text": "This tree shows every possible route, if you start from node one. Here we can now see that there are 24 possible routes to get to the last node. But is you take a closer look at the first and last route, you can see that the routes are identical, if we have a symmetrical TSP. That means if we have a symmetrical TSP, as in our example, we can ignore half of the routes.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This tree shows every possible route, if you start from node one. Here we can now see that there are 24 possible routes to get to the last node. But is you take a closer look at the first and last route, you can see that the routes are identical, if we have a symmetrical TSP. That means if we have a symmetrical TSP, as in our example, we can ignore half of the routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This tree shows every possible route, if you start from node one. Here we can now see that there are 24 possible routes to get to the last node. But is you take a closer look at the first and last route, you can see that the routes are identical, if we have a symmetrical TSP. That means if we have a symmetrical TSP, as in our example, we can ignore half of the routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 200,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 187,
        "text_offset": 5,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 300,
        "text_offset": 10,
        "word_length": 5,
        "text": "shows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7750000,
        "duration_milliseconds": 225,
        "text_offset": 16,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 487,
        "text_offset": 22,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 262,
        "text_offset": 31,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18875000,
        "duration_milliseconds": 137,
        "text_offset": 36,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 100,
        "text_offset": 41,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22875000,
        "duration_milliseconds": 312,
        "text_offset": 45,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26250000,
        "duration_milliseconds": 175,
        "text_offset": 51,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28250000,
        "duration_milliseconds": 212,
        "text_offset": 56,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 262,
        "text_offset": 61,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 42000000,
        "duration_milliseconds": 225,
        "text_offset": 66,
        "word_length": 4,
        "text": "Here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "duration_milliseconds": 112,
        "text_offset": 71,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 150,
        "text_offset": 74,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 175,
        "text_offset": 78,
        "word_length": 3,
        "text": "now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49500000,
        "duration_milliseconds": 237,
        "text_offset": 82,
        "word_length": 3,
        "text": "see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "duration_milliseconds": 150,
        "text_offset": 86,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53750000,
        "duration_milliseconds": 150,
        "text_offset": 91,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55500000,
        "duration_milliseconds": 100,
        "text_offset": 97,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56625000,
        "duration_milliseconds": 512,
        "text_offset": 101,
        "word_length": 2,
        "text": "24",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61875000,
        "duration_milliseconds": 475,
        "text_offset": 104,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66875000,
        "duration_milliseconds": 287,
        "text_offset": 113,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "duration_milliseconds": 100,
        "text_offset": 120,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71250000,
        "duration_milliseconds": 150,
        "text_offset": 123,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72875000,
        "duration_milliseconds": 75,
        "text_offset": 127,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73875000,
        "duration_milliseconds": 100,
        "text_offset": 130,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75000000,
        "duration_milliseconds": 275,
        "text_offset": 134,
        "word_length": 4,
        "text": "last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77875000,
        "duration_milliseconds": 312,
        "text_offset": 139,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81250000,
        "duration_milliseconds": 100,
        "text_offset": 143,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 89750000,
        "duration_milliseconds": 162,
        "text_offset": 145,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91500000,
        "duration_milliseconds": 112,
        "text_offset": 149,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92875000,
        "duration_milliseconds": 87,
        "text_offset": 152,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "duration_milliseconds": 187,
        "text_offset": 156,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "duration_milliseconds": 75,
        "text_offset": 161,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97000000,
        "duration_milliseconds": 375,
        "text_offset": 163,
        "word_length": 6,
        "text": "closer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101000000,
        "duration_milliseconds": 187,
        "text_offset": 170,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103125000,
        "duration_milliseconds": 75,
        "text_offset": 175,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104125000,
        "duration_milliseconds": 100,
        "text_offset": 178,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105250000,
        "duration_milliseconds": 350,
        "text_offset": 182,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109000000,
        "duration_milliseconds": 87,
        "text_offset": 188,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110125000,
        "duration_milliseconds": 275,
        "text_offset": 192,
        "word_length": 4,
        "text": "last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113125000,
        "duration_milliseconds": 250,
        "text_offset": 197,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116625000,
        "duration_milliseconds": 125,
        "text_offset": 202,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 117875000,
        "duration_milliseconds": 112,
        "text_offset": 204,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119250000,
        "duration_milliseconds": 150,
        "text_offset": 208,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121000000,
        "duration_milliseconds": 187,
        "text_offset": 212,
        "word_length": 3,
        "text": "see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123125000,
        "duration_milliseconds": 137,
        "text_offset": 216,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124750000,
        "duration_milliseconds": 100,
        "text_offset": 221,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125875000,
        "duration_milliseconds": 250,
        "text_offset": 225,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128500000,
        "duration_milliseconds": 125,
        "text_offset": 232,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130000000,
        "duration_milliseconds": 575,
        "text_offset": 236,
        "word_length": 9,
        "text": "identical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136750000,
        "duration_milliseconds": 112,
        "text_offset": 245,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 138125000,
        "duration_milliseconds": 125,
        "text_offset": 247,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139625000,
        "duration_milliseconds": 100,
        "text_offset": 250,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 140875000,
        "duration_milliseconds": 150,
        "text_offset": 253,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 142500000,
        "duration_milliseconds": 62,
        "text_offset": 258,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143250000,
        "duration_milliseconds": 600,
        "text_offset": 260,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149500000,
        "duration_milliseconds": 750,
        "text_offset": 272,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 157250000,
        "duration_milliseconds": 100,
        "text_offset": 275,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 165875000,
        "duration_milliseconds": 225,
        "text_offset": 277,
        "word_length": 4,
        "text": "That",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168375000,
        "duration_milliseconds": 250,
        "text_offset": 282,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 171125000,
        "duration_milliseconds": 112,
        "text_offset": 288,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172500000,
        "duration_milliseconds": 112,
        "text_offset": 291,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173875000,
        "duration_milliseconds": 150,
        "text_offset": 294,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175500000,
        "duration_milliseconds": 62,
        "text_offset": 299,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176250000,
        "duration_milliseconds": 625,
        "text_offset": 301,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 182750000,
        "duration_milliseconds": 650,
        "text_offset": 313,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190125000,
        "duration_milliseconds": 125,
        "text_offset": 316,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 191375000,
        "duration_milliseconds": 150,
        "text_offset": 318,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 193125000,
        "duration_milliseconds": 100,
        "text_offset": 321,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194375000,
        "duration_milliseconds": 112,
        "text_offset": 324,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195625000,
        "duration_milliseconds": 500,
        "text_offset": 328,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 201625000,
        "duration_milliseconds": 137,
        "text_offset": 335,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 203000000,
        "duration_milliseconds": 125,
        "text_offset": 337,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 204500000,
        "duration_milliseconds": 137,
        "text_offset": 340,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 206125000,
        "duration_milliseconds": 325,
        "text_offset": 344,
        "word_length": 6,
        "text": "ignore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209625000,
        "duration_milliseconds": 237,
        "text_offset": 351,
        "word_length": 4,
        "text": "half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212125000,
        "duration_milliseconds": 87,
        "text_offset": 356,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213250000,
        "duration_milliseconds": 87,
        "text_offset": 359,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 214250000,
        "duration_milliseconds": 400,
        "text_offset": 363,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218375000,
        "duration_milliseconds": 100,
        "text_offset": 369,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-tree-shows-every-possible-route-if-you-start-4ee98700.mp3",
    "final_audio": "this-tree-shows-every-possible-route-if-you-start-4ee98700.mp3"
  },
  {
    "input_text": "Let's blur out the routes that we can ignore.",
    "input_data": {
      "input_text": "Let's blur out the routes that we can ignore.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's blur out the routes that we can ignore.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's blur out the routes that we can ignore.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 275,
        "text_offset": 6,
        "word_length": 4,
        "text": "blur",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 137,
        "text_offset": 11,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8125000,
        "duration_milliseconds": 112,
        "text_offset": 15,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 300,
        "text_offset": 19,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 137,
        "text_offset": 26,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 125,
        "text_offset": 31,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 150,
        "text_offset": 34,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 537,
        "text_offset": 38,
        "word_length": 6,
        "text": "ignore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23250000,
        "duration_milliseconds": 100,
        "text_offset": 44,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-blur-out-the-routes-that-we-can-ignore-e1331f7c.mp3",
    "final_audio": "let-s-blur-out-the-routes-that-we-can-ignore-e1331f7c.mp3"
  },
  {
    "input_text": "Here we can also visualize which route we took in the first example.",
    "input_data": {
      "input_text": "Here we can also visualize which route we took in the first example.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Here we can also visualize which route we took in the first example.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Here we can also visualize which route we took in the first example.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 4,
        "text": "Here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 125,
        "text_offset": 5,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 162,
        "text_offset": 8,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6375000,
        "duration_milliseconds": 250,
        "text_offset": 12,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 600,
        "text_offset": 17,
        "word_length": 9,
        "text": "visualize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 187,
        "text_offset": 27,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 212,
        "text_offset": 33,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 112,
        "text_offset": 39,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 212,
        "text_offset": 42,
        "word_length": 4,
        "text": "took",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 75,
        "text_offset": 47,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24625000,
        "duration_milliseconds": 87,
        "text_offset": 50,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25625000,
        "duration_milliseconds": 287,
        "text_offset": 54,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28750000,
        "duration_milliseconds": 587,
        "text_offset": 60,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34750000,
        "duration_milliseconds": 100,
        "text_offset": 67,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "here-we-can-also-visualize-which-route-we-took-in-31d4c51e.mp3",
    "final_audio": "here-we-can-also-visualize-which-route-we-took-in-31d4c51e.mp3"
  },
  {
    "input_text": "After having created a tree for every possible route, the branch and bound method calculates the cost for every route and compares it to the best route so far. If the cost of the current route is higher than the cost of the best route so far, the current route will be discarded.",
    "input_data": {
      "input_text": "After having created a tree for every possible route, the branch and bound method calculates the cost for every route and compares it to the best route so far. If the cost of the current route is higher than the cost of the best route so far, the current route will be discarded.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">After having created a tree for every possible route, the branch and bound method calculates the cost for every route and compares it to the best route so far. If the cost of the current route is higher than the cost of the best route so far, the current route will be discarded.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">After having created a tree for every possible route, the branch and bound method calculates the cost for every route and compares it to the best route so far. If the cost of the current route is higher than the cost of the best route so far, the current route will be discarded.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 312,
        "text_offset": 0,
        "word_length": 5,
        "text": "After",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3875000,
        "duration_milliseconds": 262,
        "text_offset": 6,
        "word_length": 6,
        "text": "having",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 425,
        "text_offset": 13,
        "word_length": 7,
        "text": "created",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 50,
        "text_offset": 21,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 250,
        "text_offset": 23,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 175,
        "text_offset": 28,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16500000,
        "duration_milliseconds": 200,
        "text_offset": 32,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 475,
        "text_offset": 38,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 212,
        "text_offset": 47,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26875000,
        "duration_milliseconds": 100,
        "text_offset": 52,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 28000000,
        "duration_milliseconds": 100,
        "text_offset": 54,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29125000,
        "duration_milliseconds": 337,
        "text_offset": 58,
        "word_length": 6,
        "text": "branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33375000,
        "duration_milliseconds": 75,
        "text_offset": 65,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34375000,
        "duration_milliseconds": 237,
        "text_offset": 69,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 287,
        "text_offset": 75,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40125000,
        "duration_milliseconds": 612,
        "text_offset": 82,
        "word_length": 10,
        "text": "calculates",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46375000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 312,
        "text_offset": 97,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 162,
        "text_offset": 102,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52875000,
        "duration_milliseconds": 250,
        "text_offset": 106,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55625000,
        "duration_milliseconds": 225,
        "text_offset": 112,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58000000,
        "duration_milliseconds": 87,
        "text_offset": 118,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59125000,
        "duration_milliseconds": 400,
        "text_offset": 122,
        "word_length": 8,
        "text": "compares",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63375000,
        "duration_milliseconds": 87,
        "text_offset": 131,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64500000,
        "duration_milliseconds": 87,
        "text_offset": 134,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65500000,
        "duration_milliseconds": 100,
        "text_offset": 137,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66750000,
        "duration_milliseconds": 250,
        "text_offset": 141,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69500000,
        "duration_milliseconds": 162,
        "text_offset": 146,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71375000,
        "duration_milliseconds": 162,
        "text_offset": 152,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73250000,
        "duration_milliseconds": 387,
        "text_offset": 155,
        "word_length": 3,
        "text": "far",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 100,
        "text_offset": 158,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 86000000,
        "duration_milliseconds": 162,
        "text_offset": 160,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87750000,
        "duration_milliseconds": 112,
        "text_offset": 163,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89125000,
        "duration_milliseconds": 312,
        "text_offset": 167,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92500000,
        "duration_milliseconds": 62,
        "text_offset": 172,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93375000,
        "duration_milliseconds": 100,
        "text_offset": 175,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94625000,
        "duration_milliseconds": 337,
        "text_offset": 179,
        "word_length": 7,
        "text": "current",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98250000,
        "duration_milliseconds": 200,
        "text_offset": 187,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100500000,
        "duration_milliseconds": 125,
        "text_offset": 193,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102000000,
        "duration_milliseconds": 300,
        "text_offset": 196,
        "word_length": 6,
        "text": "higher",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105250000,
        "duration_milliseconds": 125,
        "text_offset": 203,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106750000,
        "duration_milliseconds": 100,
        "text_offset": 208,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108000000,
        "duration_milliseconds": 362,
        "text_offset": 212,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111875000,
        "duration_milliseconds": 62,
        "text_offset": 217,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112750000,
        "duration_milliseconds": 100,
        "text_offset": 220,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "duration_milliseconds": 262,
        "text_offset": 224,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116875000,
        "duration_milliseconds": 162,
        "text_offset": 229,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118750000,
        "duration_milliseconds": 175,
        "text_offset": 235,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120625000,
        "duration_milliseconds": 312,
        "text_offset": 238,
        "word_length": 3,
        "text": "far",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124750000,
        "duration_milliseconds": 162,
        "text_offset": 241,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 126375000,
        "duration_milliseconds": 112,
        "text_offset": 243,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127750000,
        "duration_milliseconds": 350,
        "text_offset": 247,
        "word_length": 7,
        "text": "current",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131500000,
        "duration_milliseconds": 187,
        "text_offset": 255,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133625000,
        "duration_milliseconds": 125,
        "text_offset": 261,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135125000,
        "duration_milliseconds": 100,
        "text_offset": 266,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136375000,
        "duration_milliseconds": 637,
        "text_offset": 269,
        "word_length": 9,
        "text": "discarded",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143000000,
        "duration_milliseconds": 100,
        "text_offset": 278,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "after-having-created-a-tree-for-every-possible-7d1de374.mp3",
    "final_audio": "after-having-created-a-tree-for-every-possible-7d1de374.mp3"
  },
  {
    "input_text": "Let's take a look at an example. Lets say the algorithm calculated our route first with the cost of 15. As it is the first route, it is also the best route so far.",
    "input_data": {
      "input_text": "Let's take a look at an example. Lets say the algorithm calculated our route first with the cost of 15. As it is the first route, it is also the best route so far.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's take a look at an example. Lets say the algorithm calculated our route first with the cost of 15. As it is the first route, it is also the best route so far.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's take a look at an example. Lets say the algorithm calculated our route first with the cost of 15. As it is the first route, it is also the best route so far.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 312,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3750000,
        "duration_milliseconds": 187,
        "text_offset": 6,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 62,
        "text_offset": 11,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 262,
        "text_offset": 13,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9625000,
        "duration_milliseconds": 112,
        "text_offset": 18,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 87,
        "text_offset": 21,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 662,
        "text_offset": 24,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18625000,
        "duration_milliseconds": 100,
        "text_offset": 31,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 250,
        "text_offset": 33,
        "word_length": 4,
        "text": "Lets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30000000,
        "duration_milliseconds": 162,
        "text_offset": 38,
        "word_length": 3,
        "text": "say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 125,
        "text_offset": 42,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33375000,
        "duration_milliseconds": 625,
        "text_offset": 46,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39875000,
        "duration_milliseconds": 687,
        "text_offset": 56,
        "word_length": 10,
        "text": "calculated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "duration_milliseconds": 125,
        "text_offset": 67,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48500000,
        "duration_milliseconds": 175,
        "text_offset": 71,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50500000,
        "duration_milliseconds": 362,
        "text_offset": 77,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54375000,
        "duration_milliseconds": 112,
        "text_offset": 83,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55750000,
        "duration_milliseconds": 112,
        "text_offset": 88,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57125000,
        "duration_milliseconds": 325,
        "text_offset": 92,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60625000,
        "duration_milliseconds": 75,
        "text_offset": 97,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61625000,
        "duration_milliseconds": 575,
        "text_offset": 100,
        "word_length": 2,
        "text": "15",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67625000,
        "duration_milliseconds": 100,
        "text_offset": 102,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 76250000,
        "duration_milliseconds": 212,
        "text_offset": 104,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78625000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79750000,
        "duration_milliseconds": 125,
        "text_offset": 110,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81250000,
        "duration_milliseconds": 112,
        "text_offset": 113,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "duration_milliseconds": 312,
        "text_offset": 117,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85875000,
        "duration_milliseconds": 275,
        "text_offset": 123,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89625000,
        "duration_milliseconds": 137,
        "text_offset": 128,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 91000000,
        "duration_milliseconds": 87,
        "text_offset": 130,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92000000,
        "duration_milliseconds": 125,
        "text_offset": 133,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93500000,
        "duration_milliseconds": 250,
        "text_offset": 136,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96250000,
        "duration_milliseconds": 112,
        "text_offset": 141,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 262,
        "text_offset": 145,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100375000,
        "duration_milliseconds": 175,
        "text_offset": 150,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102375000,
        "duration_milliseconds": 200,
        "text_offset": 156,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104625000,
        "duration_milliseconds": 412,
        "text_offset": 159,
        "word_length": 3,
        "text": "far",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109000000,
        "duration_milliseconds": 100,
        "text_offset": 162,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-take-a-look-at-an-example-lets-say-the-83f5b01e.mp3",
    "final_audio": "let-s-take-a-look-at-an-example-lets-say-the-83f5b01e.mp3"
  },
  {
    "input_text": "Next, the algorithm calculates the route on the left. The cost of this route is 12. As this route is better than the best route so far, it becomes the new best route.",
    "input_data": {
      "input_text": "Next, the algorithm calculates the route on the left. The cost of this route is 12. As this route is better than the best route so far, it becomes the new best route.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Next, the algorithm calculates the route on the left. The cost of this route is 12. As this route is better than the best route so far, it becomes the new best route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Next, the algorithm calculates the route on the left. The cost of this route is 12. As this route is better than the best route so far, it becomes the new best route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 462,
        "text_offset": 0,
        "word_length": 4,
        "text": "Next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 87,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 125,
        "text_offset": 6,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 637,
        "text_offset": 10,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 625,
        "text_offset": 20,
        "word_length": 10,
        "text": "calculates",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21375000,
        "duration_milliseconds": 125,
        "text_offset": 31,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22875000,
        "duration_milliseconds": 237,
        "text_offset": 35,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25500000,
        "duration_milliseconds": 100,
        "text_offset": 41,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26750000,
        "duration_milliseconds": 75,
        "text_offset": 44,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 412,
        "text_offset": 48,
        "word_length": 4,
        "text": "left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 100,
        "text_offset": 52,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 40625000,
        "duration_milliseconds": 137,
        "text_offset": 54,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42250000,
        "duration_milliseconds": 337,
        "text_offset": 58,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 75,
        "text_offset": 63,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46875000,
        "duration_milliseconds": 187,
        "text_offset": 66,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "duration_milliseconds": 237,
        "text_offset": 71,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51625000,
        "duration_milliseconds": 125,
        "text_offset": 77,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53000000,
        "duration_milliseconds": 562,
        "text_offset": 80,
        "word_length": 2,
        "text": "12",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58875000,
        "duration_milliseconds": 100,
        "text_offset": 82,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 67500000,
        "duration_milliseconds": 175,
        "text_offset": 84,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69500000,
        "duration_milliseconds": 175,
        "text_offset": 87,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71500000,
        "duration_milliseconds": 162,
        "text_offset": 92,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73375000,
        "duration_milliseconds": 125,
        "text_offset": 98,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74875000,
        "duration_milliseconds": 275,
        "text_offset": 101,
        "word_length": 6,
        "text": "better",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77750000,
        "duration_milliseconds": 125,
        "text_offset": 108,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79250000,
        "duration_milliseconds": 100,
        "text_offset": 113,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80375000,
        "duration_milliseconds": 262,
        "text_offset": 117,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83250000,
        "duration_milliseconds": 162,
        "text_offset": 122,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85125000,
        "duration_milliseconds": 175,
        "text_offset": 128,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87125000,
        "duration_milliseconds": 325,
        "text_offset": 131,
        "word_length": 3,
        "text": "far",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91375000,
        "duration_milliseconds": 112,
        "text_offset": 134,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 92500000,
        "duration_milliseconds": 50,
        "text_offset": 136,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93125000,
        "duration_milliseconds": 362,
        "text_offset": 139,
        "word_length": 7,
        "text": "becomes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97000000,
        "duration_milliseconds": 87,
        "text_offset": 147,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "duration_milliseconds": 137,
        "text_offset": 151,
        "word_length": 3,
        "text": "new",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99500000,
        "duration_milliseconds": 262,
        "text_offset": 155,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102375000,
        "duration_milliseconds": 325,
        "text_offset": 160,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105875000,
        "duration_milliseconds": 100,
        "text_offset": 165,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "next-the-algorithm-calculates-the-route-on-the-4c2fd5d2.mp3",
    "final_audio": "next-the-algorithm-calculates-the-route-on-the-4c2fd5d2.mp3"
  },
  {
    "input_text": "Now the algorithm calculates the next route. In our example it will be the seventh possible route.",
    "input_data": {
      "input_text": "Now the algorithm calculates the next route. In our example it will be the seventh possible route.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now the algorithm calculates the next route. In our example it will be the seventh possible route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now the algorithm calculates the next route. In our example it will be the seventh possible route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 300,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3625000,
        "duration_milliseconds": 150,
        "text_offset": 4,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 637,
        "text_offset": 8,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 650,
        "text_offset": 18,
        "word_length": 10,
        "text": "calculates",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 287,
        "text_offset": 33,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "duration_milliseconds": 362,
        "text_offset": 38,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26875000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 200,
        "text_offset": 45,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37625000,
        "duration_milliseconds": 150,
        "text_offset": 48,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39250000,
        "duration_milliseconds": 537,
        "text_offset": 52,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44875000,
        "duration_milliseconds": 100,
        "text_offset": 60,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46125000,
        "duration_milliseconds": 125,
        "text_offset": 63,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 125,
        "text_offset": 68,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "duration_milliseconds": 125,
        "text_offset": 71,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50375000,
        "duration_milliseconds": 412,
        "text_offset": 75,
        "word_length": 7,
        "text": "seventh",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54625000,
        "duration_milliseconds": 500,
        "text_offset": 83,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59875000,
        "duration_milliseconds": 350,
        "text_offset": 92,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 100,
        "text_offset": 97,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-the-algorithm-calculates-the-next-route-in-our-0028c478.mp3",
    "final_audio": "now-the-algorithm-calculates-the-next-route-in-our-0028c478.mp3"
  },
  {
    "input_text": "In this route the algorithm realizes at the third node that the added costs are at 14. Since the cost of the route till the third node is already higher than the cost of the best route, the algorithm can discard this route without calculating it untill the end.",
    "input_data": {
      "input_text": "In this route the algorithm realizes at the third node that the added costs are at 14. Since the cost of the route till the third node is already higher than the cost of the best route, the algorithm can discard this route without calculating it untill the end.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">In this route the algorithm realizes at the third node that the added costs are at 14. Since the cost of the route till the third node is already higher than the cost of the best route, the algorithm can discard this route without calculating it untill the end.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">In this route the algorithm realizes at the third node that the added costs are at 14. Since the cost of the route till the third node is already higher than the cost of the best route, the algorithm can discard this route without calculating it untill the end.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 187,
        "text_offset": 3,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 212,
        "text_offset": 8,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 112,
        "text_offset": 14,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 587,
        "text_offset": 18,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 550,
        "text_offset": 28,
        "word_length": 8,
        "text": "realizes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 75,
        "text_offset": 37,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 112,
        "text_offset": 40,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 275,
        "text_offset": 44,
        "word_length": 5,
        "text": "third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25625000,
        "duration_milliseconds": 237,
        "text_offset": 50,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28250000,
        "duration_milliseconds": 112,
        "text_offset": 55,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29625000,
        "duration_milliseconds": 112,
        "text_offset": 60,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31000000,
        "duration_milliseconds": 300,
        "text_offset": 64,
        "word_length": 5,
        "text": "added",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34250000,
        "duration_milliseconds": 400,
        "text_offset": 70,
        "word_length": 5,
        "text": "costs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38500000,
        "duration_milliseconds": 137,
        "text_offset": 76,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40125000,
        "duration_milliseconds": 75,
        "text_offset": 80,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41125000,
        "duration_milliseconds": 600,
        "text_offset": 83,
        "word_length": 2,
        "text": "14",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47375000,
        "duration_milliseconds": 100,
        "text_offset": 85,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 300,
        "text_offset": 87,
        "word_length": 5,
        "text": "Since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59125000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60375000,
        "duration_milliseconds": 312,
        "text_offset": 97,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63750000,
        "duration_milliseconds": 50,
        "text_offset": 102,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64500000,
        "duration_milliseconds": 87,
        "text_offset": 105,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65625000,
        "duration_milliseconds": 212,
        "text_offset": 109,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "duration_milliseconds": 137,
        "text_offset": 115,
        "word_length": 4,
        "text": "till",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69500000,
        "duration_milliseconds": 112,
        "text_offset": 120,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70875000,
        "duration_milliseconds": 262,
        "text_offset": 124,
        "word_length": 5,
        "text": "third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73750000,
        "duration_milliseconds": 200,
        "text_offset": 130,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75875000,
        "duration_milliseconds": 112,
        "text_offset": 135,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77250000,
        "duration_milliseconds": 350,
        "text_offset": 138,
        "word_length": 7,
        "text": "already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81000000,
        "duration_milliseconds": 312,
        "text_offset": 146,
        "word_length": 6,
        "text": "higher",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84375000,
        "duration_milliseconds": 112,
        "text_offset": 153,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85750000,
        "duration_milliseconds": 100,
        "text_offset": 158,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87000000,
        "duration_milliseconds": 325,
        "text_offset": 162,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90500000,
        "duration_milliseconds": 75,
        "text_offset": 167,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91500000,
        "duration_milliseconds": 75,
        "text_offset": 170,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92375000,
        "duration_milliseconds": 237,
        "text_offset": 174,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95000000,
        "duration_milliseconds": 225,
        "text_offset": 179,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98250000,
        "duration_milliseconds": 200,
        "text_offset": 184,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 100375000,
        "duration_milliseconds": 125,
        "text_offset": 186,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101875000,
        "duration_milliseconds": 587,
        "text_offset": 190,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108000000,
        "duration_milliseconds": 125,
        "text_offset": 200,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109500000,
        "duration_milliseconds": 450,
        "text_offset": 204,
        "word_length": 7,
        "text": "discard",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114250000,
        "duration_milliseconds": 187,
        "text_offset": 212,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116375000,
        "duration_milliseconds": 200,
        "text_offset": 217,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118625000,
        "duration_milliseconds": 325,
        "text_offset": 223,
        "word_length": 7,
        "text": "without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122125000,
        "duration_milliseconds": 687,
        "text_offset": 231,
        "word_length": 11,
        "text": "calculating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129250000,
        "duration_milliseconds": 87,
        "text_offset": 243,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130375000,
        "duration_milliseconds": 262,
        "text_offset": 246,
        "word_length": 6,
        "text": "untill",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133125000,
        "duration_milliseconds": 100,
        "text_offset": 253,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134375000,
        "duration_milliseconds": 387,
        "text_offset": 257,
        "word_length": 3,
        "text": "end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138500000,
        "duration_milliseconds": 100,
        "text_offset": 260,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "in-this-route-the-algorithm-realizes-at-the-third-fb0a0eb2.mp3",
    "final_audio": "in-this-route-the-algorithm-realizes-at-the-third-fb0a0eb2.mp3"
  },
  {
    "input_text": "This way of calculating the best route is applied to every route. At the end the algorithm will have found the best route. In this example it is the first route.",
    "input_data": {
      "input_text": "This way of calculating the best route is applied to every route. At the end the algorithm will have found the best route. In this example it is the first route.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This way of calculating the best route is applied to every route. At the end the algorithm will have found the best route. In this example it is the first route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This way of calculating the best route is applied to every route. At the end the algorithm will have found the best route. In this example it is the first route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 150,
        "text_offset": 5,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 100,
        "text_offset": 9,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 675,
        "text_offset": 12,
        "word_length": 11,
        "text": "calculating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 100,
        "text_offset": 24,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 262,
        "text_offset": 28,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17125000,
        "duration_milliseconds": 237,
        "text_offset": 33,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19625000,
        "duration_milliseconds": 125,
        "text_offset": 39,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21125000,
        "duration_milliseconds": 350,
        "text_offset": 42,
        "word_length": 7,
        "text": "applied",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24750000,
        "duration_milliseconds": 112,
        "text_offset": 50,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 287,
        "text_offset": 53,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29125000,
        "duration_milliseconds": 337,
        "text_offset": 59,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32625000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 41125000,
        "duration_milliseconds": 212,
        "text_offset": 66,
        "word_length": 2,
        "text": "At",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43375000,
        "duration_milliseconds": 112,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44750000,
        "duration_milliseconds": 287,
        "text_offset": 73,
        "word_length": 3,
        "text": "end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47750000,
        "duration_milliseconds": 100,
        "text_offset": 77,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "duration_milliseconds": 612,
        "text_offset": 81,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55375000,
        "duration_milliseconds": 125,
        "text_offset": 91,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56750000,
        "duration_milliseconds": 150,
        "text_offset": 96,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58500000,
        "duration_milliseconds": 275,
        "text_offset": 101,
        "word_length": 5,
        "text": "found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61375000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62375000,
        "duration_milliseconds": 275,
        "text_offset": 111,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65375000,
        "duration_milliseconds": 350,
        "text_offset": 116,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "duration_milliseconds": 100,
        "text_offset": 121,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 77625000,
        "duration_milliseconds": 187,
        "text_offset": 123,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79750000,
        "duration_milliseconds": 175,
        "text_offset": 126,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81750000,
        "duration_milliseconds": 562,
        "text_offset": 131,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87625000,
        "duration_milliseconds": 112,
        "text_offset": 139,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "duration_milliseconds": 125,
        "text_offset": 142,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90500000,
        "duration_milliseconds": 112,
        "text_offset": 145,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91750000,
        "duration_milliseconds": 337,
        "text_offset": 149,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95375000,
        "duration_milliseconds": 375,
        "text_offset": 155,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99375000,
        "duration_milliseconds": 100,
        "text_offset": 160,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-way-of-calculating-the-best-route-is-applied-48b27187.mp3",
    "final_audio": "this-way-of-calculating-the-best-route-is-applied-48b27187.mp3"
  },
  {
    "input_text": "Let's take a look now at the time complexity of the branch and bound method. As explained, the algorithm calculates every possible route. But as we have seen before, it can discard routes that are worse than the best route so far.",
    "input_data": {
      "input_text": "Let's take a look now at the time complexity of the branch and bound method. As explained, the algorithm calculates every possible route. But as we have seen before, it can discard routes that are worse than the best route so far.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's take a look now at the time complexity of the branch and bound method. As explained, the algorithm calculates every possible route. But as we have seen before, it can discard routes that are worse than the best route so far.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's take a look now at the time complexity of the branch and bound method. As explained, the algorithm calculates every possible route. But as we have seen before, it can discard routes that are worse than the best route so far.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 262,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 187,
        "text_offset": 6,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 62,
        "text_offset": 11,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 200,
        "text_offset": 13,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 225,
        "text_offset": 18,
        "word_length": 3,
        "text": "now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10750000,
        "duration_milliseconds": 75,
        "text_offset": 22,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11750000,
        "duration_milliseconds": 100,
        "text_offset": 25,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "duration_milliseconds": 262,
        "text_offset": 29,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 662,
        "text_offset": 34,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 75,
        "text_offset": 45,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 112,
        "text_offset": 48,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25000000,
        "duration_milliseconds": 350,
        "text_offset": 52,
        "word_length": 6,
        "text": "branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 100,
        "text_offset": 59,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29875000,
        "duration_milliseconds": 262,
        "text_offset": 63,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 475,
        "text_offset": 69,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37625000,
        "duration_milliseconds": 100,
        "text_offset": 75,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 237,
        "text_offset": 77,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48875000,
        "duration_milliseconds": 512,
        "text_offset": 80,
        "word_length": 9,
        "text": "explained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 125,
        "text_offset": 89,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 56250000,
        "duration_milliseconds": 112,
        "text_offset": 91,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57625000,
        "duration_milliseconds": 612,
        "text_offset": 95,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64000000,
        "duration_milliseconds": 625,
        "text_offset": 105,
        "word_length": 10,
        "text": "calculates",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70375000,
        "duration_milliseconds": 262,
        "text_offset": 116,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73250000,
        "duration_milliseconds": 512,
        "text_offset": 122,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78625000,
        "duration_milliseconds": 337,
        "text_offset": 131,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82250000,
        "duration_milliseconds": 100,
        "text_offset": 136,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 90750000,
        "duration_milliseconds": 150,
        "text_offset": 138,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92500000,
        "duration_milliseconds": 112,
        "text_offset": 142,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93875000,
        "duration_milliseconds": 100,
        "text_offset": 145,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95125000,
        "duration_milliseconds": 112,
        "text_offset": 148,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96500000,
        "duration_milliseconds": 212,
        "text_offset": 153,
        "word_length": 4,
        "text": "seen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98750000,
        "duration_milliseconds": 437,
        "text_offset": 158,
        "word_length": 6,
        "text": "before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104125000,
        "duration_milliseconds": 112,
        "text_offset": 164,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 105375000,
        "duration_milliseconds": 75,
        "text_offset": 166,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106375000,
        "duration_milliseconds": 125,
        "text_offset": 169,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107875000,
        "duration_milliseconds": 450,
        "text_offset": 173,
        "word_length": 7,
        "text": "discard",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112625000,
        "duration_milliseconds": 262,
        "text_offset": 181,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115500000,
        "duration_milliseconds": 112,
        "text_offset": 188,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116875000,
        "duration_milliseconds": 100,
        "text_offset": 193,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118125000,
        "duration_milliseconds": 237,
        "text_offset": 197,
        "word_length": 5,
        "text": "worse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120750000,
        "duration_milliseconds": 125,
        "text_offset": 203,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122125000,
        "duration_milliseconds": 100,
        "text_offset": 208,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123250000,
        "duration_milliseconds": 262,
        "text_offset": 212,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126125000,
        "duration_milliseconds": 162,
        "text_offset": 217,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "duration_milliseconds": 162,
        "text_offset": 223,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129875000,
        "duration_milliseconds": 387,
        "text_offset": 226,
        "word_length": 3,
        "text": "far",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134000000,
        "duration_milliseconds": 100,
        "text_offset": 229,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-take-a-look-now-at-the-time-complexity-of-54a96426.mp3",
    "final_audio": "let-s-take-a-look-now-at-the-time-complexity-of-54a96426.mp3"
  },
  {
    "input_text": "That means the algorithm does not have to calculate every route untill the end. Still having to calculate every possible route makes the branch and bound method very time consuming. In the worst case the algorithm has to calculate every possible route untill the end and the time complexity is the same as the brute force method.",
    "input_data": {
      "input_text": "That means the algorithm does not have to calculate every route untill the end. Still having to calculate every possible route makes the branch and bound method very time consuming. In the worst case the algorithm has to calculate every possible route untill the end and the time complexity is the same as the brute force method.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">That means the algorithm does not have to calculate every route untill the end. Still having to calculate every possible route makes the branch and bound method very time consuming. In the worst case the algorithm has to calculate every possible route untill the end and the time complexity is the same as the brute force method.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">That means the algorithm does not have to calculate every route untill the end. Still having to calculate every possible route makes the branch and bound method very time consuming. In the worst case the algorithm has to calculate every possible route untill the end and the time complexity is the same as the brute force method.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 4,
        "text": "That",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 250,
        "text_offset": 5,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 112,
        "text_offset": 11,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 587,
        "text_offset": 15,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13375000,
        "duration_milliseconds": 175,
        "text_offset": 25,
        "word_length": 4,
        "text": "does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 187,
        "text_offset": 30,
        "word_length": 3,
        "text": "not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17375000,
        "duration_milliseconds": 162,
        "text_offset": 34,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19250000,
        "duration_milliseconds": 112,
        "text_offset": 39,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 587,
        "text_offset": 42,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26625000,
        "duration_milliseconds": 262,
        "text_offset": 52,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 237,
        "text_offset": 58,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 287,
        "text_offset": 64,
        "word_length": 6,
        "text": "untill",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 100,
        "text_offset": 71,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36125000,
        "duration_milliseconds": 412,
        "text_offset": 75,
        "word_length": 3,
        "text": "end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40500000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 49000000,
        "duration_milliseconds": 325,
        "text_offset": 80,
        "word_length": 5,
        "text": "Still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52375000,
        "duration_milliseconds": 250,
        "text_offset": 86,
        "word_length": 6,
        "text": "having",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 87,
        "text_offset": 93,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56125000,
        "duration_milliseconds": 562,
        "text_offset": 96,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61875000,
        "duration_milliseconds": 237,
        "text_offset": 106,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64375000,
        "duration_milliseconds": 525,
        "text_offset": 112,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69875000,
        "duration_milliseconds": 200,
        "text_offset": 121,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "duration_milliseconds": 212,
        "text_offset": 127,
        "word_length": 5,
        "text": "makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74375000,
        "duration_milliseconds": 112,
        "text_offset": 133,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75625000,
        "duration_milliseconds": 350,
        "text_offset": 137,
        "word_length": 6,
        "text": "branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79250000,
        "duration_milliseconds": 100,
        "text_offset": 144,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80500000,
        "duration_milliseconds": 262,
        "text_offset": 148,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83375000,
        "duration_milliseconds": 312,
        "text_offset": 154,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86750000,
        "duration_milliseconds": 250,
        "text_offset": 161,
        "word_length": 4,
        "text": "very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89500000,
        "duration_milliseconds": 262,
        "text_offset": 166,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92250000,
        "duration_milliseconds": 575,
        "text_offset": 171,
        "word_length": 9,
        "text": "consuming",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98250000,
        "duration_milliseconds": 100,
        "text_offset": 180,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 106875000,
        "duration_milliseconds": 162,
        "text_offset": 182,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108625000,
        "duration_milliseconds": 87,
        "text_offset": 185,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109750000,
        "duration_milliseconds": 262,
        "text_offset": 189,
        "word_length": 5,
        "text": "worst",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112625000,
        "duration_milliseconds": 262,
        "text_offset": 195,
        "word_length": 4,
        "text": "case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115500000,
        "duration_milliseconds": 112,
        "text_offset": 200,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116875000,
        "duration_milliseconds": 550,
        "text_offset": 204,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122625000,
        "duration_milliseconds": 175,
        "text_offset": 214,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124625000,
        "duration_milliseconds": 112,
        "text_offset": 218,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126000000,
        "duration_milliseconds": 550,
        "text_offset": 221,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131625000,
        "duration_milliseconds": 225,
        "text_offset": 231,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134000000,
        "duration_milliseconds": 512,
        "text_offset": 237,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139375000,
        "duration_milliseconds": 225,
        "text_offset": 246,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141750000,
        "duration_milliseconds": 262,
        "text_offset": 252,
        "word_length": 6,
        "text": "untill",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144500000,
        "duration_milliseconds": 100,
        "text_offset": 259,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145750000,
        "duration_milliseconds": 250,
        "text_offset": 263,
        "word_length": 3,
        "text": "end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148375000,
        "duration_milliseconds": 62,
        "text_offset": 267,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149125000,
        "duration_milliseconds": 100,
        "text_offset": 271,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150375000,
        "duration_milliseconds": 262,
        "text_offset": 275,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153125000,
        "duration_milliseconds": 675,
        "text_offset": 280,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160125000,
        "duration_milliseconds": 112,
        "text_offset": 291,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 161375000,
        "duration_milliseconds": 112,
        "text_offset": 294,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 162750000,
        "duration_milliseconds": 287,
        "text_offset": 298,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165875000,
        "duration_milliseconds": 125,
        "text_offset": 303,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 167375000,
        "duration_milliseconds": 112,
        "text_offset": 306,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168625000,
        "duration_milliseconds": 225,
        "text_offset": 310,
        "word_length": 5,
        "text": "brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 171125000,
        "duration_milliseconds": 275,
        "text_offset": 316,
        "word_length": 5,
        "text": "force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174000000,
        "duration_milliseconds": 425,
        "text_offset": 322,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178375000,
        "duration_milliseconds": 100,
        "text_offset": 328,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "that-means-the-algorithm-does-not-have-to-120d2d33.mp3",
    "final_audio": "that-means-the-algorithm-does-not-have-to-120d2d33.mp3"
  },
  {
    "input_text": "However the algorithm performs very well in practice and it is mostly better than the brute force method. For that reason the time complexity of the branch and bound method is mostly better then the brute force algorithm, but still exponential.",
    "input_data": {
      "input_text": "However the algorithm performs very well in practice and it is mostly better than the brute force method. For that reason the time complexity of the branch and bound method is mostly better then the brute force algorithm, but still exponential.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">However the algorithm performs very well in practice and it is mostly better than the brute force method. For that reason the time complexity of the branch and bound method is mostly better then the brute force algorithm, but still exponential.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">However the algorithm performs very well in practice and it is mostly better than the brute force method. For that reason the time complexity of the branch and bound method is mostly better then the brute force algorithm, but still exponential.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 400,
        "text_offset": 0,
        "word_length": 7,
        "text": "However",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 112,
        "text_offset": 8,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 587,
        "text_offset": 12,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 512,
        "text_offset": 22,
        "word_length": 8,
        "text": "performs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 250,
        "text_offset": 31,
        "word_length": 4,
        "text": "very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 225,
        "text_offset": 36,
        "word_length": 4,
        "text": "well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22875000,
        "duration_milliseconds": 100,
        "text_offset": 41,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24125000,
        "duration_milliseconds": 462,
        "text_offset": 44,
        "word_length": 8,
        "text": "practice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28875000,
        "duration_milliseconds": 162,
        "text_offset": 53,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30750000,
        "duration_milliseconds": 87,
        "text_offset": 57,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 112,
        "text_offset": 60,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 375,
        "text_offset": 63,
        "word_length": 6,
        "text": "mostly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 300,
        "text_offset": 70,
        "word_length": 6,
        "text": "better",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40125000,
        "duration_milliseconds": 125,
        "text_offset": 77,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41625000,
        "duration_milliseconds": 100,
        "text_offset": 82,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42750000,
        "duration_milliseconds": 225,
        "text_offset": 86,
        "word_length": 5,
        "text": "brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45250000,
        "duration_milliseconds": 262,
        "text_offset": 92,
        "word_length": 5,
        "text": "force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "duration_milliseconds": 450,
        "text_offset": 98,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52625000,
        "duration_milliseconds": 100,
        "text_offset": 104,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 61250000,
        "duration_milliseconds": 175,
        "text_offset": 106,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63250000,
        "duration_milliseconds": 200,
        "text_offset": 110,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65375000,
        "duration_milliseconds": 275,
        "text_offset": 115,
        "word_length": 6,
        "text": "reason",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68375000,
        "duration_milliseconds": 100,
        "text_offset": 122,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69625000,
        "duration_milliseconds": 262,
        "text_offset": 126,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72375000,
        "duration_milliseconds": 650,
        "text_offset": 131,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79125000,
        "duration_milliseconds": 62,
        "text_offset": 142,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "duration_milliseconds": 112,
        "text_offset": 145,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81375000,
        "duration_milliseconds": 325,
        "text_offset": 149,
        "word_length": 6,
        "text": "branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84750000,
        "duration_milliseconds": 100,
        "text_offset": 156,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86000000,
        "duration_milliseconds": 250,
        "text_offset": 160,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88750000,
        "duration_milliseconds": 300,
        "text_offset": 166,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92000000,
        "duration_milliseconds": 125,
        "text_offset": 173,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93375000,
        "duration_milliseconds": 350,
        "text_offset": 176,
        "word_length": 6,
        "text": "mostly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97000000,
        "duration_milliseconds": 287,
        "text_offset": 183,
        "word_length": 6,
        "text": "better",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100125000,
        "duration_milliseconds": 150,
        "text_offset": 190,
        "word_length": 4,
        "text": "then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101875000,
        "duration_milliseconds": 100,
        "text_offset": 195,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103000000,
        "duration_milliseconds": 225,
        "text_offset": 199,
        "word_length": 5,
        "text": "brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105500000,
        "duration_milliseconds": 275,
        "text_offset": 205,
        "word_length": 5,
        "text": "force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108500000,
        "duration_milliseconds": 562,
        "text_offset": 211,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115125000,
        "duration_milliseconds": 150,
        "text_offset": 220,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 116625000,
        "duration_milliseconds": 137,
        "text_offset": 222,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118250000,
        "duration_milliseconds": 275,
        "text_offset": 226,
        "word_length": 5,
        "text": "still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121125000,
        "duration_milliseconds": 775,
        "text_offset": 232,
        "word_length": 11,
        "text": "exponential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129125000,
        "duration_milliseconds": 100,
        "text_offset": 243,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "however-the-algorithm-performs-very-well-in-051666bf.mp3",
    "final_audio": "however-the-algorithm-performs-very-well-in-051666bf.mp3"
  },
  {
    "input_text": "We need to point out how good is our approximated solution compared to the optimum. In some business cases there is a treshold given by the supervisor so you don't need to know how near the solution is to the optimum but in a theroetic case we want to know this. As we know to determine the optimum is not economically sensible so we need to find an other value to measure our solution.",
    "input_data": {
      "input_text": "We need to point out how good is our approximated solution compared to the optimum. In some business cases there is a treshold given by the supervisor so you don't need to know how near the solution is to the optimum but in a theroetic case we want to know this. As we know to determine the optimum is not economically sensible so we need to find an other value to measure our solution.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We need to point out how good is our approximated solution compared to the optimum. In some business cases there is a treshold given by the supervisor so you don't need to know how near the solution is to the optimum but in a theroetic case we want to know this. As we know to determine the optimum is not economically sensible so we need to find an other value to measure our solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We need to point out how good is our approximated solution compared to the optimum. In some business cases there is a treshold given by the supervisor so you don't need to know how near the solution is to the optimum but in a theroetic case we want to know this. As we know to determine the optimum is not economically sensible so we need to find an other value to measure our solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 150,
        "text_offset": 3,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 87,
        "text_offset": 8,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 237,
        "text_offset": 11,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7875000,
        "duration_milliseconds": 162,
        "text_offset": 17,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9750000,
        "duration_milliseconds": 150,
        "text_offset": 21,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 225,
        "text_offset": 25,
        "word_length": 4,
        "text": "good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14000000,
        "duration_milliseconds": 137,
        "text_offset": 30,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15625000,
        "duration_milliseconds": 125,
        "text_offset": 33,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17000000,
        "duration_milliseconds": 725,
        "text_offset": 37,
        "word_length": 12,
        "text": "approximated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "duration_milliseconds": 462,
        "text_offset": 50,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 400,
        "text_offset": 59,
        "word_length": 8,
        "text": "compared",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 75,
        "text_offset": 68,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34500000,
        "duration_milliseconds": 125,
        "text_offset": 71,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36000000,
        "duration_milliseconds": 487,
        "text_offset": 75,
        "word_length": 7,
        "text": "optimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41125000,
        "duration_milliseconds": 100,
        "text_offset": 82,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 49750000,
        "duration_milliseconds": 187,
        "text_offset": 84,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51875000,
        "duration_milliseconds": 225,
        "text_offset": 87,
        "word_length": 4,
        "text": "some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54375000,
        "duration_milliseconds": 375,
        "text_offset": 92,
        "word_length": 8,
        "text": "business",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58375000,
        "duration_milliseconds": 400,
        "text_offset": 101,
        "word_length": 5,
        "text": "cases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62625000,
        "duration_milliseconds": 162,
        "text_offset": 107,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64375000,
        "duration_milliseconds": 100,
        "text_offset": 113,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65625000,
        "duration_milliseconds": 62,
        "text_offset": 116,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66500000,
        "duration_milliseconds": 475,
        "text_offset": 118,
        "word_length": 8,
        "text": "treshold",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71500000,
        "duration_milliseconds": 287,
        "text_offset": 127,
        "word_length": 5,
        "text": "given",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74625000,
        "duration_milliseconds": 112,
        "text_offset": 133,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75875000,
        "duration_milliseconds": 100,
        "text_offset": 136,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77125000,
        "duration_milliseconds": 700,
        "text_offset": 140,
        "word_length": 10,
        "text": "supervisor",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84375000,
        "duration_milliseconds": 100,
        "text_offset": 151,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85500000,
        "duration_milliseconds": 100,
        "text_offset": 154,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86750000,
        "duration_milliseconds": 200,
        "text_offset": 158,
        "word_length": 5,
        "text": "don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88875000,
        "duration_milliseconds": 137,
        "text_offset": 164,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90375000,
        "duration_milliseconds": 75,
        "text_offset": 169,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91250000,
        "duration_milliseconds": 150,
        "text_offset": 172,
        "word_length": 4,
        "text": "know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92875000,
        "duration_milliseconds": 150,
        "text_offset": 177,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94625000,
        "duration_milliseconds": 212,
        "text_offset": 181,
        "word_length": 4,
        "text": "near",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97000000,
        "duration_milliseconds": 100,
        "text_offset": 186,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98125000,
        "duration_milliseconds": 437,
        "text_offset": 190,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102625000,
        "duration_milliseconds": 125,
        "text_offset": 199,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104125000,
        "duration_milliseconds": 87,
        "text_offset": 202,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105250000,
        "duration_milliseconds": 112,
        "text_offset": 205,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106625000,
        "duration_milliseconds": 462,
        "text_offset": 209,
        "word_length": 7,
        "text": "optimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111500000,
        "duration_milliseconds": 150,
        "text_offset": 217,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113125000,
        "duration_milliseconds": 100,
        "text_offset": 221,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114375000,
        "duration_milliseconds": 50,
        "text_offset": 224,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115125000,
        "duration_milliseconds": 525,
        "text_offset": 226,
        "word_length": 9,
        "text": "theroetic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120625000,
        "duration_milliseconds": 287,
        "text_offset": 236,
        "word_length": 4,
        "text": "case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123625000,
        "duration_milliseconds": 100,
        "text_offset": 241,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124750000,
        "duration_milliseconds": 200,
        "text_offset": 244,
        "word_length": 4,
        "text": "want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126875000,
        "duration_milliseconds": 62,
        "text_offset": 249,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127625000,
        "duration_milliseconds": 162,
        "text_offset": 252,
        "word_length": 4,
        "text": "know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129375000,
        "duration_milliseconds": 337,
        "text_offset": 257,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133000000,
        "duration_milliseconds": 100,
        "text_offset": 261,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 141625000,
        "duration_milliseconds": 200,
        "text_offset": 263,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143875000,
        "duration_milliseconds": 112,
        "text_offset": 266,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145250000,
        "duration_milliseconds": 150,
        "text_offset": 269,
        "word_length": 4,
        "text": "know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146875000,
        "duration_milliseconds": 100,
        "text_offset": 274,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148000000,
        "duration_milliseconds": 462,
        "text_offset": 277,
        "word_length": 9,
        "text": "determine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152875000,
        "duration_milliseconds": 112,
        "text_offset": 287,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154250000,
        "duration_milliseconds": 462,
        "text_offset": 291,
        "word_length": 7,
        "text": "optimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 159000000,
        "duration_milliseconds": 125,
        "text_offset": 299,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160500000,
        "duration_milliseconds": 225,
        "text_offset": 302,
        "word_length": 3,
        "text": "not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 162875000,
        "duration_milliseconds": 700,
        "text_offset": 306,
        "word_length": 12,
        "text": "economically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170125000,
        "duration_milliseconds": 550,
        "text_offset": 319,
        "word_length": 8,
        "text": "sensible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175875000,
        "duration_milliseconds": 112,
        "text_offset": 328,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177250000,
        "duration_milliseconds": 100,
        "text_offset": 331,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178500000,
        "duration_milliseconds": 150,
        "text_offset": 334,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180125000,
        "duration_milliseconds": 75,
        "text_offset": 339,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181000000,
        "duration_milliseconds": 262,
        "text_offset": 342,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183750000,
        "duration_milliseconds": 100,
        "text_offset": 347,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 185000000,
        "duration_milliseconds": 237,
        "text_offset": 350,
        "word_length": 5,
        "text": "other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187625000,
        "duration_milliseconds": 362,
        "text_offset": 356,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191500000,
        "duration_milliseconds": 100,
        "text_offset": 362,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192625000,
        "duration_milliseconds": 325,
        "text_offset": 365,
        "word_length": 7,
        "text": "measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196125000,
        "duration_milliseconds": 112,
        "text_offset": 373,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197500000,
        "duration_milliseconds": 550,
        "text_offset": 377,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203250000,
        "duration_milliseconds": 100,
        "text_offset": 385,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-need-to-point-out-how-good-is-our-approximated-cbdb01d9.mp3",
    "final_audio": "we-need-to-point-out-how-good-is-our-approximated-cbdb01d9.mp3"
  },
  {
    "input_text": "So lets imagine we have these nodes as a tsp",
    "input_data": {
      "input_text": "So lets imagine we have these nodes as a tsp",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">So lets imagine we have these nodes as a tsp</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">So lets imagine we have these nodes as a tsp</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 2,
        "text": "So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 200,
        "text_offset": 3,
        "word_length": 4,
        "text": "lets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 450,
        "text_offset": 8,
        "word_length": 7,
        "text": "imagine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9750000,
        "duration_milliseconds": 125,
        "text_offset": 16,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 225,
        "text_offset": 19,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13750000,
        "duration_milliseconds": 187,
        "text_offset": 24,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 325,
        "text_offset": 30,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19375000,
        "duration_milliseconds": 125,
        "text_offset": 36,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 62,
        "text_offset": 39,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21750000,
        "duration_milliseconds": 737,
        "text_offset": 41,
        "word_length": 3,
        "text": "tsp",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "so-lets-imagine-we-have-these-nodes-as-a-tsp-4c148834.mp3",
    "final_audio": "so-lets-imagine-we-have-these-nodes-as-a-tsp-4c148834.mp3"
  },
  {
    "input_text": "and this is our approximated solution.",
    "input_data": {
      "input_text": "and this is our approximated solution.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">and this is our approximated solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">and this is our approximated solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 225,
        "text_offset": 4,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 162,
        "text_offset": 9,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 175,
        "text_offset": 12,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8625000,
        "duration_milliseconds": 787,
        "text_offset": 16,
        "word_length": 12,
        "text": "approximated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 600,
        "text_offset": 29,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22875000,
        "duration_milliseconds": 100,
        "text_offset": 37,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "and-this-is-our-approximated-solution-3ffadfe9.mp3",
    "final_audio": "and-this-is-our-approximated-solution-3ffadfe9.mp3"
  },
  {
    "input_text": "We take a look at all the weights and sum them up.",
    "input_data": {
      "input_text": "We take a look at all the weights and sum them up.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We take a look at all the weights and sum them up.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We take a look at all the weights and sum them up.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 200,
        "text_offset": 3,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 62,
        "text_offset": 8,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 237,
        "text_offset": 10,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7875000,
        "duration_milliseconds": 87,
        "text_offset": 15,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9000000,
        "duration_milliseconds": 150,
        "text_offset": 18,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10750000,
        "duration_milliseconds": 100,
        "text_offset": 22,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 312,
        "text_offset": 26,
        "word_length": 7,
        "text": "weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15125000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16500000,
        "duration_milliseconds": 200,
        "text_offset": 38,
        "word_length": 3,
        "text": "sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 137,
        "text_offset": 42,
        "word_length": 4,
        "text": "them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 262,
        "text_offset": 47,
        "word_length": 2,
        "text": "up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 100,
        "text_offset": 49,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-take-a-look-at-all-the-weights-and-sum-them-up-ffb8b391.mp3",
    "final_audio": "we-take-a-look-at-all-the-weights-and-sum-them-up-ffb8b391.mp3"
  },
  {
    "input_text": "This is the value for our approximated solution.",
    "input_data": {
      "input_text": "This is the value for our approximated solution.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is the value for our approximated solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is the value for our approximated solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 137,
        "text_offset": 5,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 100,
        "text_offset": 8,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6250000,
        "duration_milliseconds": 400,
        "text_offset": 12,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 200,
        "text_offset": 18,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 137,
        "text_offset": 22,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 787,
        "text_offset": 26,
        "word_length": 12,
        "text": "approximated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 587,
        "text_offset": 39,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28375000,
        "duration_milliseconds": 100,
        "text_offset": 47,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-is-the-value-for-our-approximated-solution-a4b8d73a.mp3",
    "final_audio": "this-is-the-value-for-our-approximated-solution-a4b8d73a.mp3"
  },
  {
    "input_text": "But now we still don't now how good this is compared to the optimum.",
    "input_data": {
      "input_text": "But now we still don't now how good this is compared to the optimum.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">But now we still don't now how good this is compared to the optimum.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">But now we still don't now how good this is compared to the optimum.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 150,
        "text_offset": 4,
        "word_length": 3,
        "text": "now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 137,
        "text_offset": 8,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5750000,
        "duration_milliseconds": 262,
        "text_offset": 11,
        "word_length": 5,
        "text": "still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 187,
        "text_offset": 17,
        "word_length": 5,
        "text": "don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 162,
        "text_offset": 23,
        "word_length": 3,
        "text": "now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 187,
        "text_offset": 27,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 225,
        "text_offset": 31,
        "word_length": 4,
        "text": "good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16875000,
        "duration_milliseconds": 175,
        "text_offset": 36,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 125,
        "text_offset": 41,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20125000,
        "duration_milliseconds": 412,
        "text_offset": 44,
        "word_length": 8,
        "text": "compared",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24375000,
        "duration_milliseconds": 75,
        "text_offset": 53,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25375000,
        "duration_milliseconds": 112,
        "text_offset": 56,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26750000,
        "duration_milliseconds": 487,
        "text_offset": 60,
        "word_length": 7,
        "text": "optimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 100,
        "text_offset": 67,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "but-now-we-still-don-t-now-how-good-this-is-6d2d6ffe.mp3",
    "final_audio": "but-now-we-still-don-t-now-how-good-this-is-6d2d6ffe.mp3"
  },
  {
    "input_text": "For this we use the lower bound.",
    "input_data": {
      "input_text": "For this we use the lower bound.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For this we use the lower bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For this we use the lower bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 212,
        "text_offset": 4,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5125000,
        "duration_milliseconds": 125,
        "text_offset": 9,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 262,
        "text_offset": 12,
        "word_length": 3,
        "text": "use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 112,
        "text_offset": 16,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 312,
        "text_offset": 20,
        "word_length": 5,
        "text": "lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 475,
        "text_offset": 26,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19250000,
        "duration_milliseconds": 100,
        "text_offset": 31,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-this-we-use-the-lower-bound-448c5c17.mp3",
    "final_audio": "for-this-we-use-the-lower-bound-448c5c17.mp3"
  },
  {
    "input_text": "The lower bound is the value of the sum of every weight of every edge in a minimum spanning tree.",
    "input_data": {
      "input_text": "The lower bound is the value of the sum of every weight of every edge in a minimum spanning tree.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The lower bound is the value of the sum of every weight of every edge in a minimum spanning tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The lower bound is the value of the sum of every weight of every edge in a minimum spanning tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 300,
        "text_offset": 4,
        "word_length": 5,
        "text": "lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 337,
        "text_offset": 10,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 112,
        "text_offset": 16,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 100,
        "text_offset": 19,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 375,
        "text_offset": 23,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15500000,
        "duration_milliseconds": 87,
        "text_offset": 29,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16625000,
        "duration_milliseconds": 100,
        "text_offset": 32,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17875000,
        "duration_milliseconds": 200,
        "text_offset": 36,
        "word_length": 3,
        "text": "sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "duration_milliseconds": 100,
        "text_offset": 40,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 237,
        "text_offset": 43,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 212,
        "text_offset": 49,
        "word_length": 6,
        "text": "weight",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26125000,
        "duration_milliseconds": 87,
        "text_offset": 56,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 250,
        "text_offset": 59,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29875000,
        "duration_milliseconds": 225,
        "text_offset": 65,
        "word_length": 4,
        "text": "edge",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32375000,
        "duration_milliseconds": 100,
        "text_offset": 70,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 50,
        "text_offset": 73,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34375000,
        "duration_milliseconds": 375,
        "text_offset": 75,
        "word_length": 7,
        "text": "minimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38375000,
        "duration_milliseconds": 375,
        "text_offset": 83,
        "word_length": 8,
        "text": "spanning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42250000,
        "duration_milliseconds": 337,
        "text_offset": 92,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 100,
        "text_offset": 96,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-lower-bound-is-the-value-of-the-sum-of-every-9d214c4c.mp3",
    "final_audio": "the-lower-bound-is-the-value-of-the-sum-of-every-9d214c4c.mp3"
  },
  {
    "input_text": "So imagine we have these nodes from before.",
    "input_data": {
      "input_text": "So imagine we have these nodes from before.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">So imagine we have these nodes from before.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">So imagine we have these nodes from before.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 250,
        "text_offset": 0,
        "word_length": 2,
        "text": "So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 450,
        "text_offset": 3,
        "word_length": 7,
        "text": "imagine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 125,
        "text_offset": 11,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 212,
        "text_offset": 14,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 187,
        "text_offset": 19,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14000000,
        "duration_milliseconds": 287,
        "text_offset": 25,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17125000,
        "duration_milliseconds": 175,
        "text_offset": 31,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19000000,
        "duration_milliseconds": 562,
        "text_offset": 36,
        "word_length": 6,
        "text": "before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24875000,
        "duration_milliseconds": 100,
        "text_offset": 42,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "so-imagine-we-have-these-nodes-from-before-9c6df581.mp3",
    "final_audio": "so-imagine-we-have-these-nodes-from-before-9c6df581.mp3"
  },
  {
    "input_text": "We add the edges and their weights to the nodes so we get our minimal spanning tree.",
    "input_data": {
      "input_text": "We add the edges and their weights to the nodes so we get our minimal spanning tree.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We add the edges and their weights to the nodes so we get our minimal spanning tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We add the edges and their weights to the nodes so we get our minimal spanning tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 200,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2750000,
        "duration_milliseconds": 175,
        "text_offset": 3,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 100,
        "text_offset": 7,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 387,
        "text_offset": 11,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 87,
        "text_offset": 17,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 150,
        "text_offset": 21,
        "word_length": 5,
        "text": "their",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "duration_milliseconds": 237,
        "text_offset": 27,
        "word_length": 7,
        "text": "weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15500000,
        "duration_milliseconds": 87,
        "text_offset": 35,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16625000,
        "duration_milliseconds": 100,
        "text_offset": 38,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17750000,
        "duration_milliseconds": 325,
        "text_offset": 42,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 112,
        "text_offset": 48,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 125,
        "text_offset": 51,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24000000,
        "duration_milliseconds": 187,
        "text_offset": 54,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26125000,
        "duration_milliseconds": 112,
        "text_offset": 58,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27375000,
        "duration_milliseconds": 362,
        "text_offset": 62,
        "word_length": 7,
        "text": "minimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31250000,
        "duration_milliseconds": 400,
        "text_offset": 70,
        "word_length": 8,
        "text": "spanning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35500000,
        "duration_milliseconds": 337,
        "text_offset": 79,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39125000,
        "duration_milliseconds": 100,
        "text_offset": 83,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-add-the-edges-and-their-weights-to-the-nodes-so-9d3190d6.mp3",
    "final_audio": "we-add-the-edges-and-their-weights-to-the-nodes-so-9d3190d6.mp3"
  },
  {
    "input_text": "We take again a look at all the weights and sum them up.",
    "input_data": {
      "input_text": "We take again a look at all the weights and sum them up.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We take again a look at all the weights and sum them up.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We take again a look at all the weights and sum them up.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 200,
        "text_offset": 3,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 275,
        "text_offset": 8,
        "word_length": 5,
        "text": "again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 62,
        "text_offset": 14,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 212,
        "text_offset": 16,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 87,
        "text_offset": 21,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 137,
        "text_offset": 24,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 100,
        "text_offset": 28,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 312,
        "text_offset": 32,
        "word_length": 7,
        "text": "weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "duration_milliseconds": 112,
        "text_offset": 40,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19375000,
        "duration_milliseconds": 200,
        "text_offset": 44,
        "word_length": 3,
        "text": "sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 137,
        "text_offset": 48,
        "word_length": 4,
        "text": "them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 262,
        "text_offset": 53,
        "word_length": 2,
        "text": "up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 100,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-take-again-a-look-at-all-the-weights-and-sum-a227a4b0.mp3",
    "final_audio": "we-take-again-a-look-at-all-the-weights-and-sum-a227a4b0.mp3"
  },
  {
    "input_text": "This is the value of our lower bound.",
    "input_data": {
      "input_text": "This is the value of our lower bound.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is the value of our lower bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is the value of our lower bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 125,
        "text_offset": 5,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 100,
        "text_offset": 8,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 425,
        "text_offset": 12,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 112,
        "text_offset": 18,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 150,
        "text_offset": 21,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 325,
        "text_offset": 25,
        "word_length": 5,
        "text": "lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17125000,
        "duration_milliseconds": 462,
        "text_offset": 31,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22000000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-is-the-value-of-our-lower-bound-c74de0d4.mp3",
    "final_audio": "this-is-the-value-of-our-lower-bound-c74de0d4.mp3"
  },
  {
    "input_text": "Now we have a value which we can compare to our approximated solution and we know how good it is!",
    "input_data": {
      "input_text": "Now we have a value which we can compare to our approximated solution and we know how good it is!",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we have a value which we can compare to our approximated solution and we know how good it is!</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we have a value which we can compare to our approximated solution and we know how good it is!</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4375000,
        "duration_milliseconds": 150,
        "text_offset": 7,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 62,
        "text_offset": 12,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 387,
        "text_offset": 14,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 175,
        "text_offset": 20,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 125,
        "text_offset": 26,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 150,
        "text_offset": 29,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 375,
        "text_offset": 33,
        "word_length": 7,
        "text": "compare",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20125000,
        "duration_milliseconds": 125,
        "text_offset": 41,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 137,
        "text_offset": 44,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 700,
        "text_offset": 48,
        "word_length": 12,
        "text": "approximated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30375000,
        "duration_milliseconds": 450,
        "text_offset": 61,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35125000,
        "duration_milliseconds": 100,
        "text_offset": 70,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36375000,
        "duration_milliseconds": 112,
        "text_offset": 74,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 162,
        "text_offset": 77,
        "word_length": 4,
        "text": "know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 162,
        "text_offset": 82,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41375000,
        "duration_milliseconds": 162,
        "text_offset": 86,
        "word_length": 4,
        "text": "good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43250000,
        "duration_milliseconds": 87,
        "text_offset": 91,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44375000,
        "duration_milliseconds": 325,
        "text_offset": 94,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47875000,
        "duration_milliseconds": 100,
        "text_offset": 96,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-have-a-value-which-we-can-compare-to-our-c93ccf40.mp3",
    "final_audio": "now-we-have-a-value-which-we-can-compare-to-our-c93ccf40.mp3"
  },
  {
    "input_text": "Now we go on with the next topic",
    "input_data": {
      "input_text": "Now we go on with the next topic",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we go on with the next topic</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we go on with the next topic</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 137,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 250,
        "text_offset": 7,
        "word_length": 2,
        "text": "go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 125,
        "text_offset": 13,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 87,
        "text_offset": 18,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 250,
        "text_offset": 22,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 437,
        "text_offset": 27,
        "word_length": 5,
        "text": "topic",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "now-we-go-on-with-the-next-topic-a0c0909b.mp3",
    "final_audio": "now-we-go-on-with-the-next-topic-a0c0909b.mp3"
  },
  {
    "input_text": "Our first approximation approach is k nearest neighbors (kNN).",
    "input_data": {
      "input_text": "Our first approximation approach is k nearest neighbors (kNN).",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Our first approximation approach is k nearest neighbors (kNN).</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Our first approximation approach is k nearest neighbors (kNN).</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 3,
        "text": "Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2750000,
        "duration_milliseconds": 300,
        "text_offset": 4,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 775,
        "text_offset": 10,
        "word_length": 13,
        "text": "approximation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14000000,
        "duration_milliseconds": 375,
        "text_offset": 24,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17875000,
        "duration_milliseconds": 125,
        "text_offset": 33,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19375000,
        "duration_milliseconds": 212,
        "text_offset": 36,
        "word_length": 1,
        "text": "k",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 350,
        "text_offset": 38,
        "word_length": 7,
        "text": "nearest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25250000,
        "duration_milliseconds": 450,
        "text_offset": 46,
        "word_length": 9,
        "text": "neighbors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 50,
        "text_offset": 56,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 575,
        "text_offset": 57,
        "word_length": 3,
        "text": "kNN",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 100,
        "text_offset": 61,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "our-first-approximation-approach-is-k-nearest-98ddee09.mp3",
    "final_audio": "our-first-approximation-approach-is-k-nearest-98ddee09.mp3"
  },
  {
    "input_text": "We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node.",
    "input_data": {
      "input_text": "We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 287,
        "text_offset": 3,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 87,
        "text_offset": 9,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 62,
        "text_offset": 12,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 487,
        "text_offset": 14,
        "word_length": 8,
        "text": "specific",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12625000,
        "duration_milliseconds": 375,
        "text_offset": 23,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 87,
        "text_offset": 28,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 18125000,
        "duration_milliseconds": 237,
        "text_offset": 29,
        "word_length": 3,
        "text": "any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 312,
        "text_offset": 33,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24125000,
        "duration_milliseconds": 150,
        "text_offset": 38,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25875000,
        "duration_milliseconds": 125,
        "text_offset": 42,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 112,
        "text_offset": 45,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 375,
        "text_offset": 49,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32625000,
        "duration_milliseconds": 375,
        "text_offset": 58,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36500000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 45125000,
        "duration_milliseconds": 212,
        "text_offset": 66,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 100,
        "text_offset": 71,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 237,
        "text_offset": 74,
        "word_length": 5,
        "text": "check",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51250000,
        "duration_milliseconds": 100,
        "text_offset": 80,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52375000,
        "duration_milliseconds": 425,
        "text_offset": 84,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56875000,
        "duration_milliseconds": 287,
        "text_offset": 93,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60000000,
        "duration_milliseconds": 100,
        "text_offset": 98,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61250000,
        "duration_milliseconds": 175,
        "text_offset": 102,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63250000,
        "duration_milliseconds": 162,
        "text_offset": 106,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65125000,
        "duration_milliseconds": 250,
        "text_offset": 111,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67875000,
        "duration_milliseconds": 75,
        "text_offset": 117,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 112,
        "text_offset": 120,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "duration_milliseconds": 437,
        "text_offset": 124,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74625000,
        "duration_milliseconds": 100,
        "text_offset": 128,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 83250000,
        "duration_milliseconds": 312,
        "text_offset": 130,
        "word_length": 4,
        "text": "Same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86625000,
        "duration_milliseconds": 87,
        "text_offset": 135,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87625000,
        "duration_milliseconds": 75,
        "text_offset": 139,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88500000,
        "duration_milliseconds": 275,
        "text_offset": 143,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91500000,
        "duration_milliseconds": 200,
        "text_offset": 148,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93625000,
        "duration_milliseconds": 87,
        "text_offset": 153,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94750000,
        "duration_milliseconds": 250,
        "text_offset": 157,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 162,
        "text_offset": 160,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "duration_milliseconds": 137,
        "text_offset": 163,
        "word_length": 3,
        "text": "...",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 101375000,
        "duration_milliseconds": 125,
        "text_offset": 167,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102875000,
        "duration_milliseconds": 337,
        "text_offset": 170,
        "word_length": 6,
        "text": "repeat",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106500000,
        "duration_milliseconds": 187,
        "text_offset": 177,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108500000,
        "duration_milliseconds": 262,
        "text_offset": 182,
        "word_length": 5,
        "text": "until",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111250000,
        "duration_milliseconds": 162,
        "text_offset": 188,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113125000,
        "duration_milliseconds": 125,
        "text_offset": 194,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114500000,
        "duration_milliseconds": 212,
        "text_offset": 197,
        "word_length": 2,
        "text": "no",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116750000,
        "duration_milliseconds": 537,
        "text_offset": 200,
        "word_length": 9,
        "text": "unvisited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122250000,
        "duration_milliseconds": 337,
        "text_offset": 210,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125875000,
        "duration_milliseconds": 100,
        "text_offset": 214,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-start-at-a-specific-city-any-city-can-be-the-159a63a9.mp3",
    "final_audio": "we-start-at-a-specific-city-any-city-can-be-the-159a63a9.mp3"
  },
  {
    "input_text": "Finally, we draw a connection back to the starting point.",
    "input_data": {
      "input_text": "Finally, we draw a connection back to the starting point.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Finally, we draw a connection back to the starting point.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Finally, we draw a connection back to the starting point.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 525,
        "text_offset": 0,
        "word_length": 7,
        "text": "Finally",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 112,
        "text_offset": 7,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 112,
        "text_offset": 9,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 225,
        "text_offset": 12,
        "word_length": 4,
        "text": "draw",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 62,
        "text_offset": 17,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 475,
        "text_offset": 19,
        "word_length": 10,
        "text": "connection",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17750000,
        "duration_milliseconds": 237,
        "text_offset": 30,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 87,
        "text_offset": 35,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21375000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22750000,
        "duration_milliseconds": 400,
        "text_offset": 42,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27000000,
        "duration_milliseconds": 350,
        "text_offset": 51,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 100,
        "text_offset": 56,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "finally-we-draw-a-connection-back-to-the-starting-e5cfc929.mp3",
    "final_audio": "finally-we-draw-a-connection-back-to-the-starting-e5cfc929.mp3"
  },
  {
    "input_text": "This is how it can look like with more nodes, so more cities Alex has to visit.",
    "input_data": {
      "input_text": "This is how it can look like with more nodes, so more cities Alex has to visit.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is how it can look like with more nodes, so more cities Alex has to visit.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is how it can look like with more nodes, so more cities Alex has to visit.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 112,
        "text_offset": 5,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4375000,
        "duration_milliseconds": 150,
        "text_offset": 8,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 75,
        "text_offset": 12,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 150,
        "text_offset": 15,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 175,
        "text_offset": 19,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 187,
        "text_offset": 24,
        "word_length": 4,
        "text": "like",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 137,
        "text_offset": 29,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 187,
        "text_offset": 34,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16500000,
        "duration_milliseconds": 375,
        "text_offset": 39,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21125000,
        "duration_milliseconds": 137,
        "text_offset": 44,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 22500000,
        "duration_milliseconds": 137,
        "text_offset": 46,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24000000,
        "duration_milliseconds": 187,
        "text_offset": 49,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26125000,
        "duration_milliseconds": 350,
        "text_offset": 54,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29875000,
        "duration_milliseconds": 337,
        "text_offset": 61,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 187,
        "text_offset": 66,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35625000,
        "duration_milliseconds": 87,
        "text_offset": 70,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36750000,
        "duration_milliseconds": 400,
        "text_offset": 73,
        "word_length": 5,
        "text": "visit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41000000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-is-how-it-can-look-like-with-more-nodes-so-30ed290c.mp3",
    "final_audio": "this-is-how-it-can-look-like-with-more-nodes-so-30ed290c.mp3"
  },
  {
    "input_text": "For a dataset with n cities, the time complexity of applying kNN to TSP is O of n squared. Even though it's better than using Branch and Bound with O of 2 to the power of n - 1in most cases we won't find the optimal shortest path.",
    "input_data": {
      "input_text": "For a dataset with n cities, the time complexity of applying kNN to TSP is O of n squared. Even though it's better than using Branch and Bound with O of 2 to the power of n - 1in most cases we won't find the optimal shortest path.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For a dataset with n cities, the time complexity of applying kNN to TSP is O of n squared. Even though it's better than using Branch and Bound with O of 2 to the power of n - 1in most cases we won't find the optimal shortest path.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For a dataset with n cities, the time complexity of applying kNN to TSP is O of n squared. Even though it's better than using Branch and Bound with O of 2 to the power of n - 1in most cases we won't find the optimal shortest path.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 50,
        "text_offset": 4,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 487,
        "text_offset": 6,
        "word_length": 7,
        "text": "dataset",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8625000,
        "duration_milliseconds": 137,
        "text_offset": 14,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 125,
        "text_offset": 19,
        "word_length": 1,
        "text": "n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11750000,
        "duration_milliseconds": 387,
        "text_offset": 21,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16500000,
        "duration_milliseconds": 150,
        "text_offset": 27,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 18000000,
        "duration_milliseconds": 125,
        "text_offset": 29,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19500000,
        "duration_milliseconds": 250,
        "text_offset": 33,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 625,
        "text_offset": 38,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 62,
        "text_offset": 49,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 387,
        "text_offset": 52,
        "word_length": 8,
        "text": "applying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 512,
        "text_offset": 61,
        "word_length": 3,
        "text": "kNN",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38875000,
        "duration_milliseconds": 100,
        "text_offset": 65,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40125000,
        "duration_milliseconds": 587,
        "text_offset": 68,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 162,
        "text_offset": 72,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 137,
        "text_offset": 75,
        "word_length": 1,
        "text": "O",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49750000,
        "duration_milliseconds": 100,
        "text_offset": 77,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 112,
        "text_offset": 80,
        "word_length": 1,
        "text": "n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52250000,
        "duration_milliseconds": 512,
        "text_offset": 82,
        "word_length": 7,
        "text": "squared",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57625000,
        "duration_milliseconds": 100,
        "text_offset": 89,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 66125000,
        "duration_milliseconds": 275,
        "text_offset": 91,
        "word_length": 4,
        "text": "Even",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69125000,
        "duration_milliseconds": 125,
        "text_offset": 96,
        "word_length": 6,
        "text": "though",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70625000,
        "duration_milliseconds": 150,
        "text_offset": 103,
        "word_length": 4,
        "text": "it's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72250000,
        "duration_milliseconds": 287,
        "text_offset": 108,
        "word_length": 6,
        "text": "better",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75250000,
        "duration_milliseconds": 137,
        "text_offset": 115,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76875000,
        "duration_milliseconds": 300,
        "text_offset": 120,
        "word_length": 5,
        "text": "using",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80125000,
        "duration_milliseconds": 337,
        "text_offset": 126,
        "word_length": 6,
        "text": "Branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83750000,
        "duration_milliseconds": 100,
        "text_offset": 133,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85000000,
        "duration_milliseconds": 262,
        "text_offset": 137,
        "word_length": 5,
        "text": "Bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87750000,
        "duration_milliseconds": 125,
        "text_offset": 143,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89250000,
        "duration_milliseconds": 112,
        "text_offset": 148,
        "word_length": 1,
        "text": "O",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90625000,
        "duration_milliseconds": 100,
        "text_offset": 150,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91875000,
        "duration_milliseconds": 175,
        "text_offset": 153,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93875000,
        "duration_milliseconds": 87,
        "text_offset": 155,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94875000,
        "duration_milliseconds": 112,
        "text_offset": 158,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96125000,
        "duration_milliseconds": 325,
        "text_offset": 162,
        "word_length": 5,
        "text": "power",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99625000,
        "duration_milliseconds": 100,
        "text_offset": 168,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100875000,
        "duration_milliseconds": 150,
        "text_offset": 171,
        "word_length": 1,
        "text": "n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103375000,
        "duration_milliseconds": 387,
        "text_offset": 175,
        "word_length": 3,
        "text": "1in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107500000,
        "duration_milliseconds": 237,
        "text_offset": 179,
        "word_length": 4,
        "text": "most",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110125000,
        "duration_milliseconds": 350,
        "text_offset": 184,
        "word_length": 5,
        "text": "cases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113875000,
        "duration_milliseconds": 100,
        "text_offset": 190,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115125000,
        "duration_milliseconds": 212,
        "text_offset": 193,
        "word_length": 5,
        "text": "won't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117500000,
        "duration_milliseconds": 237,
        "text_offset": 199,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "duration_milliseconds": 100,
        "text_offset": 204,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121250000,
        "duration_milliseconds": 400,
        "text_offset": 208,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125375000,
        "duration_milliseconds": 350,
        "text_offset": 216,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129125000,
        "duration_milliseconds": 400,
        "text_offset": 225,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133375000,
        "duration_milliseconds": 100,
        "text_offset": 229,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-a-dataset-with-n-cities-the-time-complexity-of-e4add0d8.mp3",
    "final_audio": "for-a-dataset-with-n-cities-the-time-complexity-of-e4add0d8.mp3"
  },
  {
    "input_text": "Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.",
    "input_data": {
      "input_text": "Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 450,
        "text_offset": 0,
        "word_length": 7,
        "text": "Welcome",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 262,
        "text_offset": 8,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8125000,
        "duration_milliseconds": 487,
        "text_offset": 13,
        "word_length": 4,
        "text": "guys",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 100,
        "text_offset": 17,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 21750000,
        "duration_milliseconds": 412,
        "text_offset": 19,
        "word_length": 5,
        "text": "Today",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26875000,
        "duration_milliseconds": 125,
        "text_offset": 24,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 28125000,
        "duration_milliseconds": 137,
        "text_offset": 26,
        "word_length": 5,
        "text": "we're",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 375,
        "text_offset": 32,
        "word_length": 6,
        "text": "diving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 150,
        "text_offset": 39,
        "word_length": 4,
        "text": "into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 112,
        "text_offset": 44,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36750000,
        "duration_milliseconds": 425,
        "text_offset": 48,
        "word_length": 9,
        "text": "Traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41250000,
        "duration_milliseconds": 712,
        "text_offset": 58,
        "word_length": 11,
        "text": "Salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 450,
        "text_offset": 70,
        "word_length": 7,
        "text": "Problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53250000,
        "duration_milliseconds": 100,
        "text_offset": 77,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "welcome-back-guys-today-we-re-diving-into-the-d4a4871f.mp3",
    "final_audio": "welcome-back-guys-today-we-re-diving-into-the-d4a4871f.mp3"
  },
  {
    "input_text": "Imagine we have a traveling salesperson - tasked with selling your products in various cities.",
    "input_data": {
      "input_text": "Imagine we have a traveling salesperson - tasked with selling your products in various cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Imagine we have a traveling salesperson - tasked with selling your products in various cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Imagine we have a traveling salesperson - tasked with selling your products in various cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 512,
        "text_offset": 0,
        "word_length": 7,
        "text": "Imagine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 112,
        "text_offset": 8,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 137,
        "text_offset": 11,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 62,
        "text_offset": 16,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 425,
        "text_offset": 18,
        "word_length": 9,
        "text": "traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13875000,
        "duration_milliseconds": 712,
        "text_offset": 28,
        "word_length": 11,
        "text": "salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 350,
        "text_offset": 42,
        "word_length": 6,
        "text": "tasked",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25875000,
        "duration_milliseconds": 112,
        "text_offset": 49,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 312,
        "text_offset": 54,
        "word_length": 7,
        "text": "selling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 137,
        "text_offset": 62,
        "word_length": 4,
        "text": "your",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32250000,
        "duration_milliseconds": 437,
        "text_offset": 67,
        "word_length": 8,
        "text": "products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36875000,
        "duration_milliseconds": 125,
        "text_offset": 76,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38375000,
        "duration_milliseconds": 375,
        "text_offset": 79,
        "word_length": 7,
        "text": "various",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 450,
        "text_offset": 87,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47125000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "imagine-we-have-a-traveling-salesperson-tasked-0830d9fe.mp3",
    "final_audio": "imagine-we-have-a-traveling-salesperson-tasked-0830d9fe.mp3"
  },
  {
    "input_text": "This guy is Alex, a salesperson with a big challenge.",
    "input_data": {
      "input_text": "This guy is Alex, a salesperson with a big challenge.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This guy is Alex, a salesperson with a big challenge.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This guy is Alex, a salesperson with a big challenge.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 175,
        "text_offset": 5,
        "word_length": 3,
        "text": "guy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 150,
        "text_offset": 9,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 362,
        "text_offset": 12,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 62,
        "text_offset": 16,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 62,
        "text_offset": 18,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 712,
        "text_offset": 20,
        "word_length": 11,
        "text": "salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "duration_milliseconds": 137,
        "text_offset": 32,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 62,
        "text_offset": 37,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 200,
        "text_offset": 39,
        "word_length": 3,
        "text": "big",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24625000,
        "duration_milliseconds": 550,
        "text_offset": 43,
        "word_length": 9,
        "text": "challenge",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 100,
        "text_offset": 52,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-guy-is-alex-a-salesperson-with-a-big-339dcb93.mp3",
    "final_audio": "this-guy-is-alex-a-salesperson-with-a-big-339dcb93.mp3"
  },
  {
    "input_text": "Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.",
    "input_data": {
      "input_text": "Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 375,
        "text_offset": 0,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 175,
        "text_offset": 5,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 87,
        "text_offset": 9,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 237,
        "text_offset": 12,
        "word_length": 4,
        "text": "sell",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 425,
        "text_offset": 17,
        "word_length": 8,
        "text": "products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 112,
        "text_offset": 26,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 375,
        "text_offset": 29,
        "word_length": 7,
        "text": "various",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20125000,
        "duration_milliseconds": 337,
        "text_offset": 37,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 100,
        "text_offset": 44,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24875000,
        "duration_milliseconds": 237,
        "text_offset": 48,
        "word_length": 5,
        "text": "wants",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27500000,
        "duration_milliseconds": 87,
        "text_offset": 54,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 200,
        "text_offset": 57,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30875000,
        "duration_milliseconds": 87,
        "text_offset": 62,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 437,
        "text_offset": 66,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36500000,
        "duration_milliseconds": 175,
        "text_offset": 75,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38500000,
        "duration_milliseconds": 100,
        "text_offset": 81,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39625000,
        "duration_milliseconds": 262,
        "text_offset": 84,
        "word_length": 4,
        "text": "save",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 375,
        "text_offset": 89,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46375000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 150,
        "text_offset": 95,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56750000,
        "duration_milliseconds": 125,
        "text_offset": 99,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58125000,
        "duration_milliseconds": 200,
        "text_offset": 103,
        "word_length": 4,
        "text": "does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60375000,
        "duration_milliseconds": 375,
        "text_offset": 108,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64375000,
        "duration_milliseconds": 362,
        "text_offset": 113,
        "word_length": 6,
        "text": "figure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68250000,
        "duration_milliseconds": 125,
        "text_offset": 120,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69750000,
        "duration_milliseconds": 100,
        "text_offset": 124,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70875000,
        "duration_milliseconds": 250,
        "text_offset": 128,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73625000,
        "duration_milliseconds": 362,
        "text_offset": 133,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 100,
        "text_offset": 138,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 85875000,
        "duration_milliseconds": 300,
        "text_offset": 140,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "duration_milliseconds": 300,
        "text_offset": 146,
        "word_length": 4,
        "text": "dive",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92250000,
        "duration_milliseconds": 162,
        "text_offset": 151,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "duration_milliseconds": 87,
        "text_offset": 154,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95125000,
        "duration_milliseconds": 212,
        "text_offset": 158,
        "word_length": 4,
        "text": "help",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 350,
        "text_offset": 163,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101250000,
        "duration_milliseconds": 250,
        "text_offset": 168,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103875000,
        "duration_milliseconds": 175,
        "text_offset": 174,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105750000,
        "duration_milliseconds": 462,
        "text_offset": 179,
        "word_length": 6,
        "text": "puzzle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110625000,
        "duration_milliseconds": 100,
        "text_offset": 185,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "alex-has-to-sell-products-in-various-cities-and-575f7417.mp3",
    "final_audio": "alex-has-to-sell-products-in-various-cities-and-575f7417.mp3"
  },
  {
    "input_text": "Let's say he needs to visit 4 cities.",
    "input_data": {
      "input_text": "Let's say he needs to visit 4 cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's say he needs to visit 4 cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's say he needs to visit 4 cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 187,
        "text_offset": 6,
        "word_length": 3,
        "text": "say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 125,
        "text_offset": 10,
        "word_length": 2,
        "text": "he",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 262,
        "text_offset": 13,
        "word_length": 5,
        "text": "needs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 100,
        "text_offset": 19,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 312,
        "text_offset": 22,
        "word_length": 5,
        "text": "visit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 225,
        "text_offset": 28,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17125000,
        "duration_milliseconds": 512,
        "text_offset": 30,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-say-he-needs-to-visit-4-cities-62950463.mp3",
    "final_audio": "let-s-say-he-needs-to-visit-4-cities-62950463.mp3"
  },
  {
    "input_text": "Sounds straightforward, right? What do you think happens if we add one more city to Alex's route?",
    "input_data": {
      "input_text": "Sounds straightforward, right? What do you think happens if we add one more city to Alex's route?",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Sounds straightforward, right? What do you think happens if we add one more city to Alex's route?</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Sounds straightforward, right? What do you think happens if we add one more city to Alex's route?</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 387,
        "text_offset": 0,
        "word_length": 6,
        "text": "Sounds",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 787,
        "text_offset": 7,
        "word_length": 15,
        "text": "straightforward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 100,
        "text_offset": 22,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 387,
        "text_offset": 24,
        "word_length": 5,
        "text": "right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18250000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26750000,
        "duration_milliseconds": 200,
        "text_offset": 31,
        "word_length": 4,
        "text": "What",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28875000,
        "duration_milliseconds": 62,
        "text_offset": 36,
        "word_length": 2,
        "text": "do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29625000,
        "duration_milliseconds": 100,
        "text_offset": 39,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30875000,
        "duration_milliseconds": 212,
        "text_offset": 43,
        "word_length": 5,
        "text": "think",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33250000,
        "duration_milliseconds": 412,
        "text_offset": 49,
        "word_length": 7,
        "text": "happens",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37625000,
        "duration_milliseconds": 112,
        "text_offset": 57,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39000000,
        "duration_milliseconds": 137,
        "text_offset": 60,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40500000,
        "duration_milliseconds": 162,
        "text_offset": 63,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 212,
        "text_offset": 67,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44750000,
        "duration_milliseconds": 175,
        "text_offset": 71,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 287,
        "text_offset": 76,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49875000,
        "duration_milliseconds": 125,
        "text_offset": 81,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51250000,
        "duration_milliseconds": 487,
        "text_offset": 84,
        "word_length": 6,
        "text": "Alex's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56375000,
        "duration_milliseconds": 362,
        "text_offset": 91,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60125000,
        "duration_milliseconds": 100,
        "text_offset": 96,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "sounds-straightforward-right-what-do-you-think-75c55cb4.mp3",
    "final_audio": "sounds-straightforward-right-what-do-you-think-75c55cb4.mp3"
  },
  {
    "input_text": "Of course, if we add more cities it get's more complex. So how do you determine the shortest possible route that connects all these cities?",
    "input_data": {
      "input_text": "Of course, if we add more cities it get's more complex. So how do you determine the shortest possible route that connects all these cities?",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Of course, if we add more cities it get's more complex. So how do you determine the shortest possible route that connects all these cities?</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Of course, if we add more cities it get's more complex. So how do you determine the shortest possible route that connects all these cities?</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "Of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 325,
        "text_offset": 3,
        "word_length": 6,
        "text": "course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 12,
        "text_offset": 9,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 112,
        "text_offset": 11,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 137,
        "text_offset": 14,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9750000,
        "duration_milliseconds": 150,
        "text_offset": 17,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 187,
        "text_offset": 21,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 375,
        "text_offset": 26,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 87,
        "text_offset": 33,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 212,
        "text_offset": 36,
        "word_length": 5,
        "text": "get's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "duration_milliseconds": 200,
        "text_offset": 42,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 625,
        "text_offset": 47,
        "word_length": 7,
        "text": "complex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29500000,
        "duration_milliseconds": 100,
        "text_offset": 54,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 38000000,
        "duration_milliseconds": 187,
        "text_offset": 56,
        "word_length": 2,
        "text": "So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "duration_milliseconds": 125,
        "text_offset": 59,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41375000,
        "duration_milliseconds": 75,
        "text_offset": 63,
        "word_length": 2,
        "text": "do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42250000,
        "duration_milliseconds": 87,
        "text_offset": 66,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43250000,
        "duration_milliseconds": 462,
        "text_offset": 70,
        "word_length": 9,
        "text": "determine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 87,
        "text_offset": 80,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49125000,
        "duration_milliseconds": 437,
        "text_offset": 84,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53625000,
        "duration_milliseconds": 487,
        "text_offset": 93,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58750000,
        "duration_milliseconds": 200,
        "text_offset": 102,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "duration_milliseconds": 137,
        "text_offset": 108,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62625000,
        "duration_milliseconds": 375,
        "text_offset": 113,
        "word_length": 8,
        "text": "connects",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66625000,
        "duration_milliseconds": 137,
        "text_offset": 122,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68250000,
        "duration_milliseconds": 187,
        "text_offset": 126,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 475,
        "text_offset": 132,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75250000,
        "duration_milliseconds": 100,
        "text_offset": 138,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "of-course-if-we-add-more-cities-it-get-s-more-d1f1b866.mp3",
    "final_audio": "of-course-if-we-add-more-cities-it-get-s-more-d1f1b866.mp3"
  },
  {
    "input_text": "One approach is to try out every possible route. But here lies the problem: Complexity! So, with every new city Alex adds to the trip, the challenge of finding the shortest route grows significantly.",
    "input_data": {
      "input_text": "One approach is to try out every possible route. But here lies the problem: Complexity! So, with every new city Alex adds to the trip, the challenge of finding the shortest route grows significantly.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">One approach is to try out every possible route. But here lies the problem: Complexity! So, with every new city Alex adds to the trip, the challenge of finding the shortest route grows significantly.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">One approach is to try out every possible route. But here lies the problem: Complexity! So, with every new city Alex adds to the trip, the challenge of finding the shortest route grows significantly.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 262,
        "text_offset": 0,
        "word_length": 3,
        "text": "One",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 375,
        "text_offset": 4,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 87,
        "text_offset": 16,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 275,
        "text_offset": 19,
        "word_length": 3,
        "text": "try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 175,
        "text_offset": 23,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 237,
        "text_offset": 27,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17375000,
        "duration_milliseconds": 512,
        "text_offset": 33,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22750000,
        "duration_milliseconds": 337,
        "text_offset": 42,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26375000,
        "duration_milliseconds": 100,
        "text_offset": 47,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 162,
        "text_offset": 49,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36750000,
        "duration_milliseconds": 187,
        "text_offset": 53,
        "word_length": 4,
        "text": "here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38875000,
        "duration_milliseconds": 250,
        "text_offset": 58,
        "word_length": 4,
        "text": "lies",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41625000,
        "duration_milliseconds": 112,
        "text_offset": 63,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "duration_milliseconds": 462,
        "text_offset": 67,
        "word_length": 7,
        "text": "problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 62,
        "text_offset": 74,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 49375000,
        "duration_milliseconds": 800,
        "text_offset": 76,
        "word_length": 10,
        "text": "Complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57625000,
        "duration_milliseconds": 100,
        "text_offset": 86,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 325,
        "text_offset": 88,
        "word_length": 2,
        "text": "So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70375000,
        "duration_milliseconds": 75,
        "text_offset": 90,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 71125000,
        "duration_milliseconds": 162,
        "text_offset": 92,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73000000,
        "duration_milliseconds": 212,
        "text_offset": 97,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75375000,
        "duration_milliseconds": 137,
        "text_offset": 103,
        "word_length": 3,
        "text": "new",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77000000,
        "duration_milliseconds": 312,
        "text_offset": 107,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80250000,
        "duration_milliseconds": 337,
        "text_offset": 112,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83750000,
        "duration_milliseconds": 250,
        "text_offset": 117,
        "word_length": 4,
        "text": "adds",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86375000,
        "duration_milliseconds": 87,
        "text_offset": 122,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87500000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88625000,
        "duration_milliseconds": 300,
        "text_offset": 129,
        "word_length": 4,
        "text": "trip",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92500000,
        "duration_milliseconds": 187,
        "text_offset": 133,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 94375000,
        "duration_milliseconds": 112,
        "text_offset": 135,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95625000,
        "duration_milliseconds": 400,
        "text_offset": 139,
        "word_length": 9,
        "text": "challenge",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99750000,
        "duration_milliseconds": 75,
        "text_offset": 149,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100750000,
        "duration_milliseconds": 350,
        "text_offset": 152,
        "word_length": 7,
        "text": "finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104500000,
        "duration_milliseconds": 87,
        "text_offset": 160,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105500000,
        "duration_milliseconds": 450,
        "text_offset": 164,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110250000,
        "duration_milliseconds": 187,
        "text_offset": 173,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112375000,
        "duration_milliseconds": 275,
        "text_offset": 179,
        "word_length": 5,
        "text": "grows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115375000,
        "duration_milliseconds": 800,
        "text_offset": 185,
        "word_length": 13,
        "text": "significantly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123625000,
        "duration_milliseconds": 100,
        "text_offset": 198,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "one-approach-is-to-try-out-every-possible-route-313d974f.mp3",
    "final_audio": "one-approach-is-to-try-out-every-possible-route-313d974f.mp3"
  },
  {
    "input_text": "The Problem to find the shortest way between multiple points is called the Traveling Salesperson Problem (TSP). Alex goal is to keep the distance traveled as low as possible.",
    "input_data": {
      "input_text": "The Problem to find the shortest way between multiple points is called the Traveling Salesperson Problem (TSP). Alex goal is to keep the distance traveled as low as possible.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Problem to find the shortest way between multiple points is called the Traveling Salesperson Problem (TSP). Alex goal is to keep the distance traveled as low as possible.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Problem to find the shortest way between multiple points is called the Traveling Salesperson Problem (TSP). Alex goal is to keep the distance traveled as low as possible.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 387,
        "text_offset": 4,
        "word_length": 7,
        "text": "Problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6250000,
        "duration_milliseconds": 100,
        "text_offset": 12,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 262,
        "text_offset": 15,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10375000,
        "duration_milliseconds": 75,
        "text_offset": 20,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 462,
        "text_offset": 24,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 137,
        "text_offset": 33,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17750000,
        "duration_milliseconds": 350,
        "text_offset": 37,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21500000,
        "duration_milliseconds": 462,
        "text_offset": 45,
        "word_length": 8,
        "text": "multiple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26375000,
        "duration_milliseconds": 350,
        "text_offset": 54,
        "word_length": 6,
        "text": "points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30125000,
        "duration_milliseconds": 112,
        "text_offset": 61,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 237,
        "text_offset": 64,
        "word_length": 6,
        "text": "called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34125000,
        "duration_milliseconds": 75,
        "text_offset": 71,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35000000,
        "duration_milliseconds": 425,
        "text_offset": 75,
        "word_length": 9,
        "text": "Traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 700,
        "text_offset": 85,
        "word_length": 11,
        "text": "Salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 437,
        "text_offset": 97,
        "word_length": 7,
        "text": "Problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "duration_milliseconds": 37,
        "text_offset": 105,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 52375000,
        "duration_milliseconds": 687,
        "text_offset": 106,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59500000,
        "duration_milliseconds": 100,
        "text_offset": 110,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 68125000,
        "duration_milliseconds": 387,
        "text_offset": 112,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72125000,
        "duration_milliseconds": 275,
        "text_offset": 117,
        "word_length": 4,
        "text": "goal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75125000,
        "duration_milliseconds": 100,
        "text_offset": 122,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76375000,
        "duration_milliseconds": 112,
        "text_offset": 125,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77750000,
        "duration_milliseconds": 200,
        "text_offset": 128,
        "word_length": 4,
        "text": "keep",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "duration_milliseconds": 112,
        "text_offset": 133,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81375000,
        "duration_milliseconds": 400,
        "text_offset": 137,
        "word_length": 8,
        "text": "distance",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85500000,
        "duration_milliseconds": 375,
        "text_offset": 146,
        "word_length": 8,
        "text": "traveled",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89500000,
        "duration_milliseconds": 125,
        "text_offset": 155,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91000000,
        "duration_milliseconds": 187,
        "text_offset": 158,
        "word_length": 3,
        "text": "low",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93125000,
        "duration_milliseconds": 100,
        "text_offset": 162,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94250000,
        "duration_milliseconds": 587,
        "text_offset": 165,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100250000,
        "duration_milliseconds": 100,
        "text_offset": 173,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-problem-to-find-the-shortest-way-between-54944622.mp3",
    "final_audio": "the-problem-to-find-the-shortest-way-between-54944622.mp3"
  },
  {
    "input_text": "There are 2 main conditions: He needs to visit every city exactly once, starting from a specific one and returning to the starting city.",
    "input_data": {
      "input_text": "There are 2 main conditions: He needs to visit every city exactly once, starting from a specific one and returning to the starting city.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">There are 2 main conditions: He needs to visit every city exactly once, starting from a specific one and returning to the starting city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">There are 2 main conditions: He needs to visit every city exactly once, starting from a specific one and returning to the starting city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 5,
        "text": "There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 100,
        "text_offset": 6,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3625000,
        "duration_milliseconds": 162,
        "text_offset": 10,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 212,
        "text_offset": 12,
        "word_length": 4,
        "text": "main",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 562,
        "text_offset": 17,
        "word_length": 10,
        "text": "conditions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14125000,
        "duration_milliseconds": 150,
        "text_offset": 27,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 87,
        "text_offset": 29,
        "word_length": 2,
        "text": "He",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16875000,
        "duration_milliseconds": 237,
        "text_offset": 32,
        "word_length": 5,
        "text": "needs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19500000,
        "duration_milliseconds": 87,
        "text_offset": 38,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "duration_milliseconds": 312,
        "text_offset": 41,
        "word_length": 5,
        "text": "visit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 237,
        "text_offset": 47,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 287,
        "text_offset": 53,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29625000,
        "duration_milliseconds": 487,
        "text_offset": 58,
        "word_length": 7,
        "text": "exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34750000,
        "duration_milliseconds": 325,
        "text_offset": 66,
        "word_length": 4,
        "text": "once",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39000000,
        "duration_milliseconds": 187,
        "text_offset": 70,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 40875000,
        "duration_milliseconds": 362,
        "text_offset": 72,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44625000,
        "duration_milliseconds": 150,
        "text_offset": 81,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 50,
        "text_offset": 86,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46875000,
        "duration_milliseconds": 487,
        "text_offset": 88,
        "word_length": 8,
        "text": "specific",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "duration_milliseconds": 225,
        "text_offset": 97,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54500000,
        "duration_milliseconds": 87,
        "text_offset": 101,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55625000,
        "duration_milliseconds": 425,
        "text_offset": 105,
        "word_length": 9,
        "text": "returning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60000000,
        "duration_milliseconds": 87,
        "text_offset": 115,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61125000,
        "duration_milliseconds": 100,
        "text_offset": 118,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62375000,
        "duration_milliseconds": 362,
        "text_offset": 122,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 412,
        "text_offset": 131,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70625000,
        "duration_milliseconds": 100,
        "text_offset": 135,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "there-are-2-main-conditions-he-needs-to-visit-c7cf1ee3.mp3",
    "final_audio": "there-are-2-main-conditions-he-needs-to-visit-c7cf1ee3.mp3"
  },
  {
    "input_text": "To solve it, we'll think of each city as a point, or 'node', on a graph. The edges symbolize possible paths Alex can take.",
    "input_data": {
      "input_text": "To solve it, we'll think of each city as a point, or 'node', on a graph. The edges symbolize possible paths Alex can take.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">To solve it, we'll think of each city as a point, or 'node', on a graph. The edges symbolize possible paths Alex can take.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">To solve it, we'll think of each city as a point, or 'node', on a graph. The edges symbolize possible paths Alex can take.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 125,
        "text_offset": 0,
        "word_length": 2,
        "text": "To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1875000,
        "duration_milliseconds": 300,
        "text_offset": 3,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 100,
        "text_offset": 9,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 62,
        "text_offset": 11,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 150,
        "text_offset": 13,
        "word_length": 5,
        "text": "we'll",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 212,
        "text_offset": 19,
        "word_length": 5,
        "text": "think",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11625000,
        "duration_milliseconds": 100,
        "text_offset": 25,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 175,
        "text_offset": 28,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14875000,
        "duration_milliseconds": 287,
        "text_offset": 33,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19375000,
        "duration_milliseconds": 62,
        "text_offset": 41,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 300,
        "text_offset": 43,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24250000,
        "duration_milliseconds": 100,
        "text_offset": 48,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 25250000,
        "duration_milliseconds": 112,
        "text_offset": 50,
        "word_length": 2,
        "text": "or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26625000,
        "duration_milliseconds": 300,
        "text_offset": 54,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 87,
        "text_offset": 59,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 112,
        "text_offset": 61,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32875000,
        "duration_milliseconds": 50,
        "text_offset": 64,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 637,
        "text_offset": 66,
        "word_length": 5,
        "text": "graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40250000,
        "duration_milliseconds": 100,
        "text_offset": 71,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 48875000,
        "duration_milliseconds": 137,
        "text_offset": 73,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50500000,
        "duration_milliseconds": 312,
        "text_offset": 77,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53875000,
        "duration_milliseconds": 475,
        "text_offset": 83,
        "word_length": 9,
        "text": "symbolize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58750000,
        "duration_milliseconds": 500,
        "text_offset": 93,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64000000,
        "duration_milliseconds": 400,
        "text_offset": 102,
        "word_length": 5,
        "text": "paths",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68125000,
        "duration_milliseconds": 325,
        "text_offset": 108,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71500000,
        "duration_milliseconds": 150,
        "text_offset": 113,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73250000,
        "duration_milliseconds": 387,
        "text_offset": 117,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 100,
        "text_offset": 121,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "to-solve-it-we-ll-think-of-each-city-as-a-point-or-d1b3759d.mp3",
    "final_audio": "to-solve-it-we-ll-think-of-each-city-as-a-point-or-d1b3759d.mp3"
  },
  {
    "input_text": "It's complete, this means there's a direct path from every city to every other city.",
    "input_data": {
      "input_text": "It's complete, this means there's a direct path from every city to every other city.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">It's complete, this means there's a direct path from every city to every other city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">It's complete, this means there's a direct path from every city to every other city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 200,
        "text_offset": 0,
        "word_length": 4,
        "text": "It's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2750000,
        "duration_milliseconds": 462,
        "text_offset": 5,
        "word_length": 8,
        "text": "complete",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 150,
        "text_offset": 13,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 187,
        "text_offset": 15,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 237,
        "text_offset": 20,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 200,
        "text_offset": 26,
        "word_length": 7,
        "text": "there's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 62,
        "text_offset": 34,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 337,
        "text_offset": 36,
        "word_length": 6,
        "text": "direct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 300,
        "text_offset": 43,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "duration_milliseconds": 175,
        "text_offset": 48,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 250,
        "text_offset": 53,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29250000,
        "duration_milliseconds": 300,
        "text_offset": 59,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32500000,
        "duration_milliseconds": 137,
        "text_offset": 64,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34125000,
        "duration_milliseconds": 300,
        "text_offset": 67,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 212,
        "text_offset": 73,
        "word_length": 5,
        "text": "other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39750000,
        "duration_milliseconds": 412,
        "text_offset": 79,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44125000,
        "duration_milliseconds": 100,
        "text_offset": 83,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "it-s-complete-this-means-there-s-a-direct-path-ddb2d54b.mp3",
    "final_audio": "it-s-complete-this-means-there-s-a-direct-path-ddb2d54b.mp3"
  },
  {
    "input_text": "Our TSP is symmetric. It means the distance from city A to B is identical to the distance from B to A.",
    "input_data": {
      "input_text": "Our TSP is symmetric. It means the distance from city A to B is identical to the distance from B to A.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Our TSP is symmetric. It means the distance from city A to B is identical to the distance from B to A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Our TSP is symmetric. It means the distance from city A to B is identical to the distance from B to A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 3,
        "text": "Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 700,
        "text_offset": 4,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 150,
        "text_offset": 8,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 637,
        "text_offset": 11,
        "word_length": 9,
        "text": "symmetric",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 100,
        "text_offset": 20,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 27000000,
        "duration_milliseconds": 175,
        "text_offset": 22,
        "word_length": 2,
        "text": "It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 262,
        "text_offset": 25,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 125,
        "text_offset": 31,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33250000,
        "duration_milliseconds": 425,
        "text_offset": 35,
        "word_length": 8,
        "text": "distance",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 200,
        "text_offset": 44,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "duration_milliseconds": 337,
        "text_offset": 49,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 112,
        "text_offset": 54,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "duration_milliseconds": 100,
        "text_offset": 56,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46125000,
        "duration_milliseconds": 125,
        "text_offset": 59,
        "word_length": 1,
        "text": "B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 125,
        "text_offset": 61,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49125000,
        "duration_milliseconds": 562,
        "text_offset": 64,
        "word_length": 9,
        "text": "identical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 87,
        "text_offset": 74,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 125,
        "text_offset": 77,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57375000,
        "duration_milliseconds": 412,
        "text_offset": 81,
        "word_length": 8,
        "text": "distance",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61750000,
        "duration_milliseconds": 187,
        "text_offset": 90,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63875000,
        "duration_milliseconds": 150,
        "text_offset": 95,
        "word_length": 1,
        "text": "B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65625000,
        "duration_milliseconds": 125,
        "text_offset": 97,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "duration_milliseconds": 312,
        "text_offset": 100,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 100,
        "text_offset": 101,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "our-tsp-is-symmetric-it-means-the-distance-from-c8a15b03.mp3",
    "final_audio": "our-tsp-is-symmetric-it-means-the-distance-from-c8a15b03.mp3"
  },
  {
    "input_text": "Also, in our model, the direct path between any two cities is always the shortest. This means for two cities A and B there is no path with an added point that is shorter than the direct connection. adhering to the triangle inequality principle.",
    "input_data": {
      "input_text": "Also, in our model, the direct path between any two cities is always the shortest. This means for two cities A and B there is no path with an added point that is shorter than the direct connection. adhering to the triangle inequality principle.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Also, in our model, the direct path between any two cities is always the shortest. This means for two cities A and B there is no path with an added point that is shorter than the direct connection. adhering to the triangle inequality principle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Also, in our model, the direct path between any two cities is always the shortest. This means for two cities A and B there is no path with an added point that is shorter than the direct connection. adhering to the triangle inequality principle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 462,
        "text_offset": 0,
        "word_length": 4,
        "text": "Also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 87,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 112,
        "text_offset": 6,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 100,
        "text_offset": 9,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 362,
        "text_offset": 13,
        "word_length": 5,
        "text": "model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14125000,
        "duration_milliseconds": 62,
        "text_offset": 18,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 112,
        "text_offset": 20,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 350,
        "text_offset": 24,
        "word_length": 6,
        "text": "direct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 300,
        "text_offset": 31,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 387,
        "text_offset": 36,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 187,
        "text_offset": 44,
        "word_length": 3,
        "text": "any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 175,
        "text_offset": 48,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 400,
        "text_offset": 52,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35500000,
        "duration_milliseconds": 125,
        "text_offset": 59,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 337,
        "text_offset": 62,
        "word_length": 6,
        "text": "always",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40625000,
        "duration_milliseconds": 87,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41625000,
        "duration_milliseconds": 537,
        "text_offset": 73,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47250000,
        "duration_milliseconds": 100,
        "text_offset": 81,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 55750000,
        "duration_milliseconds": 200,
        "text_offset": 83,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57875000,
        "duration_milliseconds": 225,
        "text_offset": 88,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60375000,
        "duration_milliseconds": 150,
        "text_offset": 94,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62125000,
        "duration_milliseconds": 175,
        "text_offset": 98,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64125000,
        "duration_milliseconds": 412,
        "text_offset": 102,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68500000,
        "duration_milliseconds": 150,
        "text_offset": 109,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 112,
        "text_offset": 111,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71625000,
        "duration_milliseconds": 137,
        "text_offset": 115,
        "word_length": 1,
        "text": "B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73125000,
        "duration_milliseconds": 187,
        "text_offset": 117,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75250000,
        "duration_milliseconds": 125,
        "text_offset": 123,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76750000,
        "duration_milliseconds": 175,
        "text_offset": 126,
        "word_length": 2,
        "text": "no",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78625000,
        "duration_milliseconds": 325,
        "text_offset": 129,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82125000,
        "duration_milliseconds": 125,
        "text_offset": 134,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83500000,
        "duration_milliseconds": 100,
        "text_offset": 139,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84750000,
        "duration_milliseconds": 300,
        "text_offset": 142,
        "word_length": 5,
        "text": "added",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88000000,
        "duration_milliseconds": 262,
        "text_offset": 148,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90875000,
        "duration_milliseconds": 125,
        "text_offset": 154,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92250000,
        "duration_milliseconds": 75,
        "text_offset": 159,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93250000,
        "duration_milliseconds": 350,
        "text_offset": 162,
        "word_length": 7,
        "text": "shorter",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96875000,
        "duration_milliseconds": 125,
        "text_offset": 170,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98375000,
        "duration_milliseconds": 87,
        "text_offset": 175,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99500000,
        "duration_milliseconds": 325,
        "text_offset": 179,
        "word_length": 6,
        "text": "direct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103000000,
        "duration_milliseconds": 550,
        "text_offset": 186,
        "word_length": 10,
        "text": "connection",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108750000,
        "duration_milliseconds": 100,
        "text_offset": 196,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 117375000,
        "duration_milliseconds": 500,
        "text_offset": 198,
        "word_length": 8,
        "text": "adhering",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122500000,
        "duration_milliseconds": 100,
        "text_offset": 207,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123750000,
        "duration_milliseconds": 125,
        "text_offset": 210,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125250000,
        "duration_milliseconds": 587,
        "text_offset": 214,
        "word_length": 8,
        "text": "triangle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131250000,
        "duration_milliseconds": 637,
        "text_offset": 223,
        "word_length": 10,
        "text": "inequality",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137875000,
        "duration_milliseconds": 675,
        "text_offset": 234,
        "word_length": 9,
        "text": "principle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144750000,
        "duration_milliseconds": 100,
        "text_offset": 243,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "also-in-our-model-the-direct-path-between-any-two-449168ee.mp3",
    "final_audio": "also-in-our-model-the-direct-path-between-any-two-449168ee.mp3"
  },
  {
    "input_text": "With these rules in mind, let's explore how Alex can find the shortest route.",
    "input_data": {
      "input_text": "With these rules in mind, let's explore how Alex can find the shortest route.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">With these rules in mind, let's explore how Alex can find the shortest route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">With these rules in mind, let's explore how Alex can find the shortest route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 4,
        "text": "With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 187,
        "text_offset": 5,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 262,
        "text_offset": 11,
        "word_length": 5,
        "text": "rules",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 87,
        "text_offset": 17,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 337,
        "text_offset": 20,
        "word_length": 4,
        "text": "mind",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 112,
        "text_offset": 24,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 162,
        "text_offset": 26,
        "word_length": 5,
        "text": "let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 450,
        "text_offset": 32,
        "word_length": 7,
        "text": "explore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 137,
        "text_offset": 40,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22500000,
        "duration_milliseconds": 362,
        "text_offset": 44,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26375000,
        "duration_milliseconds": 137,
        "text_offset": 49,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28000000,
        "duration_milliseconds": 262,
        "text_offset": 53,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30750000,
        "duration_milliseconds": 62,
        "text_offset": 58,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 437,
        "text_offset": 62,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36125000,
        "duration_milliseconds": 312,
        "text_offset": 71,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 100,
        "text_offset": 76,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "with-these-rules-in-mind-let-s-explore-how-alex-6f913760.mp3",
    "final_audio": "with-these-rules-in-mind-let-s-explore-how-alex-6f913760.mp3"
  },
  {
    "input_text": "There are symmetrical and asymmetrical TSPs.",
    "input_data": {
      "input_text": "There are symmetrical and asymmetrical TSPs.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">There are symmetrical and asymmetrical TSPs.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">There are symmetrical and asymmetrical TSPs.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 5,
        "text": "There",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2750000,
        "duration_milliseconds": 112,
        "text_offset": 6,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 675,
        "text_offset": 10,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11125000,
        "duration_milliseconds": 162,
        "text_offset": 22,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 775,
        "text_offset": 26,
        "word_length": 12,
        "text": "asymmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 900,
        "text_offset": 39,
        "word_length": 4,
        "text": "TSPs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30125000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "there-are-symmetrical-and-asymmetrical-tsps-4db852ac.mp3",
    "final_audio": "there-are-symmetrical-and-asymmetrical-tsps-4db852ac.mp3"
  },
  {
    "input_text": "First we will explain the symmetrical TSP",
    "input_data": {
      "input_text": "First we will explain the symmetrical TSP",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">First we will explain the symmetrical TSP</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">First we will explain the symmetrical TSP</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 400,
        "text_offset": 0,
        "word_length": 5,
        "text": "First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 125,
        "text_offset": 6,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6250000,
        "duration_milliseconds": 137,
        "text_offset": 9,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7875000,
        "duration_milliseconds": 425,
        "text_offset": 14,
        "word_length": 7,
        "text": "explain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 100,
        "text_offset": 22,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13500000,
        "duration_milliseconds": 650,
        "text_offset": 26,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 800,
        "text_offset": 38,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "first-we-will-explain-the-symmetrical-tsp-a7a12429.mp3",
    "final_audio": "first-we-will-explain-the-symmetrical-tsp-a7a12429.mp3"
  },
  {
    "input_text": "A TSP is called symmetrical, if the edges between two nodes have the same value in both directions. This means the way form one town to another would be exact the same in both directions. This isn't really accurate in real life because of conditions of the landscape or construction sites.",
    "input_data": {
      "input_text": "A TSP is called symmetrical, if the edges between two nodes have the same value in both directions. This means the way form one town to another would be exact the same in both directions. This isn't really accurate in real life because of conditions of the landscape or construction sites.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">A TSP is called symmetrical, if the edges between two nodes have the same value in both directions. This means the way form one town to another would be exact the same in both directions. This isn't really accurate in real life because of conditions of the landscape or construction sites.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">A TSP is called symmetrical, if the edges between two nodes have the same value in both directions. This means the way form one town to another would be exact the same in both directions. This isn't really accurate in real life because of conditions of the landscape or construction sites.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 512,
        "text_offset": 2,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 125,
        "text_offset": 6,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 225,
        "text_offset": 9,
        "word_length": 6,
        "text": "called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11375000,
        "duration_milliseconds": 625,
        "text_offset": 16,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 100,
        "text_offset": 27,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 19500000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 87,
        "text_offset": 32,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21875000,
        "duration_milliseconds": 312,
        "text_offset": 36,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25250000,
        "duration_milliseconds": 350,
        "text_offset": 42,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 187,
        "text_offset": 50,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31125000,
        "duration_milliseconds": 312,
        "text_offset": 54,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34500000,
        "duration_milliseconds": 125,
        "text_offset": 60,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36000000,
        "duration_milliseconds": 87,
        "text_offset": 65,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 275,
        "text_offset": 69,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "duration_milliseconds": 387,
        "text_offset": 74,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44125000,
        "duration_milliseconds": 100,
        "text_offset": 80,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45375000,
        "duration_milliseconds": 212,
        "text_offset": 83,
        "word_length": 4,
        "text": "both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 650,
        "text_offset": 88,
        "word_length": 10,
        "text": "directions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54375000,
        "duration_milliseconds": 100,
        "text_offset": 98,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 63000000,
        "duration_milliseconds": 237,
        "text_offset": 100,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65500000,
        "duration_milliseconds": 237,
        "text_offset": 105,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68125000,
        "duration_milliseconds": 112,
        "text_offset": 111,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69375000,
        "duration_milliseconds": 150,
        "text_offset": 115,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71000000,
        "duration_milliseconds": 287,
        "text_offset": 119,
        "word_length": 4,
        "text": "form",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74125000,
        "duration_milliseconds": 187,
        "text_offset": 124,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76250000,
        "duration_milliseconds": 275,
        "text_offset": 128,
        "word_length": 4,
        "text": "town",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79250000,
        "duration_milliseconds": 125,
        "text_offset": 133,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80750000,
        "duration_milliseconds": 362,
        "text_offset": 136,
        "word_length": 7,
        "text": "another",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84625000,
        "duration_milliseconds": 112,
        "text_offset": 144,
        "word_length": 5,
        "text": "would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86000000,
        "duration_milliseconds": 125,
        "text_offset": 150,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87500000,
        "duration_milliseconds": 412,
        "text_offset": 153,
        "word_length": 5,
        "text": "exact",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91750000,
        "duration_milliseconds": 87,
        "text_offset": 159,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92875000,
        "duration_milliseconds": 325,
        "text_offset": 163,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96250000,
        "duration_milliseconds": 100,
        "text_offset": 168,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 212,
        "text_offset": 171,
        "word_length": 4,
        "text": "both",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99750000,
        "duration_milliseconds": 650,
        "text_offset": 176,
        "word_length": 10,
        "text": "directions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106500000,
        "duration_milliseconds": 100,
        "text_offset": 186,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 115000000,
        "duration_milliseconds": 212,
        "text_offset": 188,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117375000,
        "duration_milliseconds": 250,
        "text_offset": 193,
        "word_length": 5,
        "text": "isn't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120000000,
        "duration_milliseconds": 262,
        "text_offset": 199,
        "word_length": 6,
        "text": "really",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122750000,
        "duration_milliseconds": 425,
        "text_offset": 206,
        "word_length": 8,
        "text": "accurate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127125000,
        "duration_milliseconds": 112,
        "text_offset": 215,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128500000,
        "duration_milliseconds": 187,
        "text_offset": 218,
        "word_length": 4,
        "text": "real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130625000,
        "duration_milliseconds": 262,
        "text_offset": 223,
        "word_length": 4,
        "text": "life",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133375000,
        "duration_milliseconds": 325,
        "text_offset": 228,
        "word_length": 7,
        "text": "because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136750000,
        "duration_milliseconds": 75,
        "text_offset": 236,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137750000,
        "duration_milliseconds": 537,
        "text_offset": 239,
        "word_length": 10,
        "text": "conditions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143375000,
        "duration_milliseconds": 75,
        "text_offset": 250,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144375000,
        "duration_milliseconds": 100,
        "text_offset": 253,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145625000,
        "duration_milliseconds": 500,
        "text_offset": 257,
        "word_length": 9,
        "text": "landscape",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150750000,
        "duration_milliseconds": 125,
        "text_offset": 267,
        "word_length": 2,
        "text": "or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152250000,
        "duration_milliseconds": 625,
        "text_offset": 270,
        "word_length": 12,
        "text": "construction",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158750000,
        "duration_milliseconds": 462,
        "text_offset": 283,
        "word_length": 5,
        "text": "sites",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 163500000,
        "duration_milliseconds": 100,
        "text_offset": 288,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "a-tsp-is-called-symmetrical-if-the-edges-between-39c7fed0.mp3",
    "final_audio": "a-tsp-is-called-symmetrical-if-the-edges-between-39c7fed0.mp3"
  },
  {
    "input_text": "Thats why there is also a asymmetrical TSP.",
    "input_data": {
      "input_text": "Thats why there is also a asymmetrical TSP.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Thats why there is also a asymmetrical TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Thats why there is also a asymmetrical TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 5,
        "text": "Thats",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 137,
        "text_offset": 6,
        "word_length": 3,
        "text": "why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 187,
        "text_offset": 10,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7000000,
        "duration_milliseconds": 125,
        "text_offset": 16,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 275,
        "text_offset": 19,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 87,
        "text_offset": 24,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 775,
        "text_offset": 26,
        "word_length": 12,
        "text": "asymmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "duration_milliseconds": 762,
        "text_offset": 39,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28375000,
        "duration_milliseconds": 100,
        "text_offset": 42,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "thats-why-there-is-also-a-asymmetrical-tsp-cecea753.mp3",
    "final_audio": "thats-why-there-is-also-a-asymmetrical-tsp-cecea753.mp3"
  },
  {
    "input_text": "The TSP is called asymmetrical if there are two edges between every node and they don't have the same weight. As you can see the graph is then directed. This is way more accurate to the real world, but this is also more complex to solve then the symmetrical. This is why we only observe symmetrical TSPs in the following.",
    "input_data": {
      "input_text": "The TSP is called asymmetrical if there are two edges between every node and they don't have the same weight. As you can see the graph is then directed. This is way more accurate to the real world, but this is also more complex to solve then the symmetrical. This is why we only observe symmetrical TSPs in the following.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The TSP is called asymmetrical if there are two edges between every node and they don't have the same weight. As you can see the graph is then directed. This is way more accurate to the real world, but this is also more complex to solve then the symmetrical. This is why we only observe symmetrical TSPs in the following.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The TSP is called asymmetrical if there are two edges between every node and they don't have the same weight. As you can see the graph is then directed. This is way more accurate to the real world, but this is also more complex to solve then the symmetrical. This is why we only observe symmetrical TSPs in the following.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 500,
        "text_offset": 4,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 125,
        "text_offset": 8,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 262,
        "text_offset": 11,
        "word_length": 6,
        "text": "called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11625000,
        "duration_milliseconds": 737,
        "text_offset": 18,
        "word_length": 12,
        "text": "asymmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19250000,
        "duration_milliseconds": 100,
        "text_offset": 31,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 150,
        "text_offset": 34,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22000000,
        "duration_milliseconds": 100,
        "text_offset": 40,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 225,
        "text_offset": 44,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25625000,
        "duration_milliseconds": 300,
        "text_offset": 48,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28875000,
        "duration_milliseconds": 350,
        "text_offset": 54,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32625000,
        "duration_milliseconds": 225,
        "text_offset": 62,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35125000,
        "duration_milliseconds": 312,
        "text_offset": 68,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38375000,
        "duration_milliseconds": 100,
        "text_offset": 73,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39625000,
        "duration_milliseconds": 100,
        "text_offset": 77,
        "word_length": 4,
        "text": "they",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40750000,
        "duration_milliseconds": 187,
        "text_offset": 82,
        "word_length": 5,
        "text": "don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42875000,
        "duration_milliseconds": 162,
        "text_offset": 88,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44750000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 262,
        "text_offset": 97,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 350,
        "text_offset": 102,
        "word_length": 6,
        "text": "weight",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52250000,
        "duration_milliseconds": 100,
        "text_offset": 108,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 60875000,
        "duration_milliseconds": 212,
        "text_offset": 110,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63250000,
        "duration_milliseconds": 112,
        "text_offset": 113,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64625000,
        "duration_milliseconds": 162,
        "text_offset": 117,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66500000,
        "duration_milliseconds": 200,
        "text_offset": 121,
        "word_length": 3,
        "text": "see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 125,
        "text_offset": 125,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 362,
        "text_offset": 129,
        "word_length": 5,
        "text": "graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74000000,
        "duration_milliseconds": 125,
        "text_offset": 135,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75500000,
        "duration_milliseconds": 175,
        "text_offset": 138,
        "word_length": 4,
        "text": "then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 575,
        "text_offset": 143,
        "word_length": 8,
        "text": "directed",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83375000,
        "duration_milliseconds": 100,
        "text_offset": 151,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 91875000,
        "duration_milliseconds": 200,
        "text_offset": 153,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "duration_milliseconds": 112,
        "text_offset": 158,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95375000,
        "duration_milliseconds": 175,
        "text_offset": 161,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97250000,
        "duration_milliseconds": 262,
        "text_offset": 165,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "duration_milliseconds": 375,
        "text_offset": 170,
        "word_length": 8,
        "text": "accurate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104000000,
        "duration_milliseconds": 87,
        "text_offset": 179,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105125000,
        "duration_milliseconds": 100,
        "text_offset": 182,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106250000,
        "duration_milliseconds": 250,
        "text_offset": 186,
        "word_length": 4,
        "text": "real",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109000000,
        "duration_milliseconds": 275,
        "text_offset": 191,
        "word_length": 5,
        "text": "world",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112625000,
        "duration_milliseconds": 100,
        "text_offset": 196,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 113750000,
        "duration_milliseconds": 137,
        "text_offset": 198,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115375000,
        "duration_milliseconds": 162,
        "text_offset": 202,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117125000,
        "duration_milliseconds": 125,
        "text_offset": 207,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118625000,
        "duration_milliseconds": 237,
        "text_offset": 210,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121125000,
        "duration_milliseconds": 200,
        "text_offset": 215,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123250000,
        "duration_milliseconds": 475,
        "text_offset": 220,
        "word_length": 7,
        "text": "complex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128250000,
        "duration_milliseconds": 100,
        "text_offset": 228,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129500000,
        "duration_milliseconds": 337,
        "text_offset": 231,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133125000,
        "duration_milliseconds": 137,
        "text_offset": 237,
        "word_length": 4,
        "text": "then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134750000,
        "duration_milliseconds": 87,
        "text_offset": 242,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135750000,
        "duration_milliseconds": 675,
        "text_offset": 246,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 142625000,
        "duration_milliseconds": 100,
        "text_offset": 257,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 151250000,
        "duration_milliseconds": 237,
        "text_offset": 259,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153875000,
        "duration_milliseconds": 112,
        "text_offset": 264,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155250000,
        "duration_milliseconds": 162,
        "text_offset": 267,
        "word_length": 3,
        "text": "why",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 157125000,
        "duration_milliseconds": 162,
        "text_offset": 271,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 159000000,
        "duration_milliseconds": 275,
        "text_offset": 274,
        "word_length": 4,
        "text": "only",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 162000000,
        "duration_milliseconds": 387,
        "text_offset": 279,
        "word_length": 7,
        "text": "observe",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 166125000,
        "duration_milliseconds": 637,
        "text_offset": 287,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172750000,
        "duration_milliseconds": 700,
        "text_offset": 299,
        "word_length": 4,
        "text": "TSPs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180000000,
        "duration_milliseconds": 75,
        "text_offset": 304,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181000000,
        "duration_milliseconds": 87,
        "text_offset": 307,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 182125000,
        "duration_milliseconds": 512,
        "text_offset": 311,
        "word_length": 9,
        "text": "following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187500000,
        "duration_milliseconds": 100,
        "text_offset": 320,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-tsp-is-called-asymmetrical-if-there-are-two-7bb27c83.mp3",
    "final_audio": "the-tsp-is-called-asymmetrical-if-there-are-two-7bb27c83.mp3"
  },
  {
    "input_text": "now we go on with the next topic",
    "input_data": {
      "input_text": "now we go on with the next topic",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">now we go on with the next topic</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">now we go on with the next topic</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 3,
        "text": "now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 137,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 250,
        "text_offset": 7,
        "word_length": 2,
        "text": "go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 125,
        "text_offset": 13,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 87,
        "text_offset": 18,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 250,
        "text_offset": 22,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 437,
        "text_offset": 27,
        "word_length": 5,
        "text": "topic",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "now-we-go-on-with-the-next-topic-f94b96a8.mp3",
    "final_audio": "now-we-go-on-with-the-next-topic-f94b96a8.mp3"
  },
  {
    "input_text": "To solve TSP, we have two primary approaches: the Optimal and the Approximation methods.",
    "input_data": {
      "input_text": "To solve TSP, we have two primary approaches: the Optimal and the Approximation methods.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">To solve TSP, we have two primary approaches: the Optimal and the Approximation methods.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">To solve TSP, we have two primary approaches: the Optimal and the Approximation methods.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 125,
        "text_offset": 0,
        "word_length": 2,
        "text": "To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "duration_milliseconds": 300,
        "text_offset": 3,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 600,
        "text_offset": 9,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 100,
        "text_offset": 12,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 100,
        "text_offset": 14,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 150,
        "text_offset": 17,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16250000,
        "duration_milliseconds": 187,
        "text_offset": 22,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18375000,
        "duration_milliseconds": 512,
        "text_offset": 26,
        "word_length": 7,
        "text": "primary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 562,
        "text_offset": 34,
        "word_length": 10,
        "text": "approaches",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 100,
        "text_offset": 44,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 112,
        "text_offset": 46,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 437,
        "text_offset": 50,
        "word_length": 7,
        "text": "Optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 75,
        "text_offset": 58,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38375000,
        "duration_milliseconds": 100,
        "text_offset": 62,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 775,
        "text_offset": 66,
        "word_length": 13,
        "text": "Approximation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47375000,
        "duration_milliseconds": 462,
        "text_offset": 80,
        "word_length": 7,
        "text": "methods",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52125000,
        "duration_milliseconds": 100,
        "text_offset": 87,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "to-solve-tsp-we-have-two-primary-approaches-the-8f4d7a7e.mp3",
    "final_audio": "to-solve-tsp-we-have-two-primary-approaches-the-8f4d7a7e.mp3"
  },
  {
    "input_text": "In the Optimal category, we have two prominent algorithms: Brute Force and Branch and Bound.",
    "input_data": {
      "input_text": "In the Optimal category, we have two prominent algorithms: Brute Force and Branch and Bound.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">In the Optimal category, we have two prominent algorithms: Brute Force and Branch and Bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">In the Optimal category, we have two prominent algorithms: Brute Force and Branch and Bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3625000,
        "duration_milliseconds": 412,
        "text_offset": 7,
        "word_length": 7,
        "text": "Optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 550,
        "text_offset": 15,
        "word_length": 8,
        "text": "category",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 125,
        "text_offset": 23,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 15625000,
        "duration_milliseconds": 100,
        "text_offset": 25,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 150,
        "text_offset": 28,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 187,
        "text_offset": 33,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 450,
        "text_offset": 37,
        "word_length": 9,
        "text": "prominent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25375000,
        "duration_milliseconds": 662,
        "text_offset": 47,
        "word_length": 10,
        "text": "algorithms",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 150,
        "text_offset": 57,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 34500000,
        "duration_milliseconds": 225,
        "text_offset": 59,
        "word_length": 5,
        "text": "Brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 325,
        "text_offset": 65,
        "word_length": 5,
        "text": "Force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40375000,
        "duration_milliseconds": 112,
        "text_offset": 71,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41750000,
        "duration_milliseconds": 350,
        "text_offset": 75,
        "word_length": 6,
        "text": "Branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45375000,
        "duration_milliseconds": 100,
        "text_offset": 82,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46625000,
        "duration_milliseconds": 450,
        "text_offset": 86,
        "word_length": 5,
        "text": "Bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51375000,
        "duration_milliseconds": 100,
        "text_offset": 91,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "in-the-optimal-category-we-have-two-prominent-2ecc4a51.mp3",
    "final_audio": "in-the-optimal-category-we-have-two-prominent-2ecc4a51.mp3"
  },
  {
    "input_text": "Moving on to the Approximation approach, we'll explain the algorithms k nearest neighbors (kNN) and Christofides. But let's start with the optimal solutions first.",
    "input_data": {
      "input_text": "Moving on to the Approximation approach, we'll explain the algorithms k nearest neighbors (kNN) and Christofides. But let's start with the optimal solutions first.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Moving on to the Approximation approach, we'll explain the algorithms k nearest neighbors (kNN) and Christofides. But let's start with the optimal solutions first.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Moving on to the Approximation approach, we'll explain the algorithms k nearest neighbors (kNN) and Christofides. But let's start with the optimal solutions first.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 350,
        "text_offset": 0,
        "word_length": 6,
        "text": "Moving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 100,
        "text_offset": 7,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5500000,
        "duration_milliseconds": 87,
        "text_offset": 10,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7875000,
        "duration_milliseconds": 762,
        "text_offset": 17,
        "word_length": 13,
        "text": "Approximation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 412,
        "text_offset": 31,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 137,
        "text_offset": 39,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 137,
        "text_offset": 41,
        "word_length": 5,
        "text": "we'll",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 387,
        "text_offset": 47,
        "word_length": 7,
        "text": "explain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28000000,
        "duration_milliseconds": 112,
        "text_offset": 55,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 600,
        "text_offset": 59,
        "word_length": 10,
        "text": "algorithms",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35625000,
        "duration_milliseconds": 200,
        "text_offset": 70,
        "word_length": 1,
        "text": "k",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 337,
        "text_offset": 72,
        "word_length": 7,
        "text": "nearest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41250000,
        "duration_milliseconds": 425,
        "text_offset": 80,
        "word_length": 9,
        "text": "neighbors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46375000,
        "duration_milliseconds": 12,
        "text_offset": 90,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 512,
        "text_offset": 91,
        "word_length": 3,
        "text": "kNN",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52875000,
        "duration_milliseconds": 62,
        "text_offset": 94,
        "word_length": 1,
        "text": ")",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 53500000,
        "duration_milliseconds": 112,
        "text_offset": 96,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54875000,
        "duration_milliseconds": 862,
        "text_offset": 100,
        "word_length": 12,
        "text": "Christofides",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63750000,
        "duration_milliseconds": 100,
        "text_offset": 112,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 72375000,
        "duration_milliseconds": 175,
        "text_offset": 114,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74375000,
        "duration_milliseconds": 212,
        "text_offset": 118,
        "word_length": 5,
        "text": "let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76625000,
        "duration_milliseconds": 312,
        "text_offset": 124,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "duration_milliseconds": 125,
        "text_offset": 130,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81500000,
        "duration_milliseconds": 100,
        "text_offset": 135,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82750000,
        "duration_milliseconds": 425,
        "text_offset": 139,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87250000,
        "duration_milliseconds": 525,
        "text_offset": 147,
        "word_length": 9,
        "text": "solutions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92750000,
        "duration_milliseconds": 500,
        "text_offset": 157,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "duration_milliseconds": 100,
        "text_offset": 162,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "moving-on-to-the-approximation-approach-we-ll-185a1c28.mp3",
    "final_audio": "moving-on-to-the-approximation-approach-we-ll-185a1c28.mp3"
  },
  {
    "input_text": "The Brute Force method is a straightforward but time-consuming approach to solve the TSP. It involves trying out all possible orders in which the cities can be visited.",
    "input_data": {
      "input_text": "The Brute Force method is a straightforward but time-consuming approach to solve the TSP. It involves trying out all possible orders in which the cities can be visited.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solve the TSP. It involves trying out all possible orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solve the TSP. It involves trying out all possible orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "duration_milliseconds": 225,
        "text_offset": 4,
        "word_length": 5,
        "text": "Brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 262,
        "text_offset": 10,
        "word_length": 5,
        "text": "Force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 325,
        "text_offset": 16,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 100,
        "text_offset": 23,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12125000,
        "duration_milliseconds": 62,
        "text_offset": 26,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 725,
        "text_offset": 28,
        "word_length": 15,
        "text": "straightforward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 150,
        "text_offset": 44,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 712,
        "text_offset": 48,
        "word_length": 14,
        "text": "time-consuming",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29500000,
        "duration_milliseconds": 387,
        "text_offset": 63,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 100,
        "text_offset": 72,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 325,
        "text_offset": 75,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38250000,
        "duration_milliseconds": 100,
        "text_offset": 81,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39375000,
        "duration_milliseconds": 712,
        "text_offset": 85,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 100,
        "text_offset": 88,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 55375000,
        "duration_milliseconds": 162,
        "text_offset": 90,
        "word_length": 2,
        "text": "It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57250000,
        "duration_milliseconds": 400,
        "text_offset": 93,
        "word_length": 8,
        "text": "involves",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61500000,
        "duration_milliseconds": 300,
        "text_offset": 102,
        "word_length": 6,
        "text": "trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64750000,
        "duration_milliseconds": 162,
        "text_offset": 109,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66625000,
        "duration_milliseconds": 200,
        "text_offset": 113,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 512,
        "text_offset": 117,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74125000,
        "duration_milliseconds": 350,
        "text_offset": 126,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77875000,
        "duration_milliseconds": 112,
        "text_offset": 133,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79250000,
        "duration_milliseconds": 200,
        "text_offset": 136,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81375000,
        "duration_milliseconds": 112,
        "text_offset": 142,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82625000,
        "duration_milliseconds": 375,
        "text_offset": 146,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86625000,
        "duration_milliseconds": 137,
        "text_offset": 153,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88125000,
        "duration_milliseconds": 112,
        "text_offset": 157,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89500000,
        "duration_milliseconds": 500,
        "text_offset": 160,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94625000,
        "duration_milliseconds": 100,
        "text_offset": 167,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-brute-force-method-is-a-straightforward-but-ff1ee3a1.mp3",
    "final_audio": "the-brute-force-method-is-a-straightforward-but-ff1ee3a1.mp3"
  },
  {
    "input_text": "As the first step in our Brute-Force algorithm, we generate all possible permutations of the cities. This means creating every possible order in which the cities can be visited.",
    "input_data": {
      "input_text": "As the first step in our Brute-Force algorithm, we generate all possible permutations of the cities. This means creating every possible order in which the cities can be visited.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As the first step in our Brute-Force algorithm, we generate all possible permutations of the cities. This means creating every possible order in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As the first step in our Brute-Force algorithm, we generate all possible permutations of the cities. This means creating every possible order in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 275,
        "text_offset": 7,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 237,
        "text_offset": 13,
        "word_length": 4,
        "text": "step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9750000,
        "duration_milliseconds": 100,
        "text_offset": 18,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 125,
        "text_offset": 21,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 487,
        "text_offset": 25,
        "word_length": 11,
        "text": "Brute-Force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 625,
        "text_offset": 37,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24750000,
        "duration_milliseconds": 162,
        "text_offset": 46,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 112,
        "text_offset": 48,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 462,
        "text_offset": 51,
        "word_length": 8,
        "text": "generate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32500000,
        "duration_milliseconds": 250,
        "text_offset": 60,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35125000,
        "duration_milliseconds": 500,
        "text_offset": 64,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40375000,
        "duration_milliseconds": 800,
        "text_offset": 73,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 62,
        "text_offset": 86,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49500000,
        "duration_milliseconds": 100,
        "text_offset": 89,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50750000,
        "duration_milliseconds": 475,
        "text_offset": 93,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55750000,
        "duration_milliseconds": 100,
        "text_offset": 99,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 64250000,
        "duration_milliseconds": 250,
        "text_offset": 101,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "duration_milliseconds": 262,
        "text_offset": 106,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69875000,
        "duration_milliseconds": 512,
        "text_offset": 112,
        "word_length": 8,
        "text": "creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75125000,
        "duration_milliseconds": 237,
        "text_offset": 121,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77750000,
        "duration_milliseconds": 512,
        "text_offset": 127,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83125000,
        "duration_milliseconds": 300,
        "text_offset": 136,
        "word_length": 5,
        "text": "order",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86375000,
        "duration_milliseconds": 125,
        "text_offset": 142,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87875000,
        "duration_milliseconds": 212,
        "text_offset": 145,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90250000,
        "duration_milliseconds": 125,
        "text_offset": 151,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91625000,
        "duration_milliseconds": 387,
        "text_offset": 155,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95750000,
        "duration_milliseconds": 162,
        "text_offset": 162,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 112,
        "text_offset": 166,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98875000,
        "duration_milliseconds": 500,
        "text_offset": 169,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104125000,
        "duration_milliseconds": 100,
        "text_offset": 176,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "as-the-first-step-in-our-brute-force-algorithm-we-7d626424.mp3",
    "final_audio": "as-the-first-step-in-our-brute-force-algorithm-we-7d626424.mp3"
  },
  {
    "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
    "input_data": {
      "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 362,
        "text_offset": 0,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 162,
        "text_offset": 6,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 562,
        "text_offset": 15,
        "word_length": 9,
        "text": "generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 725,
        "text_offset": 25,
        "word_length": 11,
        "text": "permutation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24000000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 550,
        "text_offset": 41,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 112,
        "text_offset": 51,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 250,
        "text_offset": 55,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36250000,
        "duration_milliseconds": 87,
        "text_offset": 62,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 100,
        "text_offset": 65,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38625000,
        "duration_milliseconds": 312,
        "text_offset": 69,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "duration_milliseconds": 137,
        "text_offset": 74,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 362,
        "text_offset": 77,
        "word_length": 7,
        "text": "summing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 112,
        "text_offset": 85,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48750000,
        "duration_milliseconds": 562,
        "text_offset": 89,
        "word_length": 9,
        "text": "distances",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54625000,
        "duration_milliseconds": 337,
        "text_offset": 99,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58250000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59375000,
        "duration_milliseconds": 400,
        "text_offset": 111,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 487,
        "text_offset": 119,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "then-for-each-generated-permutation-we-calculate-e0cb741a.mp3",
    "final_audio": "then-for-each-generated-permutation-we-calculate-e0cb741a.mp3"
  },
  {
    "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours. This is the optimal solution to the Traveling Salesperson Problem.",
    "input_data": {
      "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours. This is the optimal solution to the Traveling Salesperson Problem.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours. This is the optimal solution to the Traveling Salesperson Problem.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours. This is the optimal solution to the Traveling Salesperson Problem.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 350,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 112,
        "text_offset": 5,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 150,
        "text_offset": 8,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 587,
        "text_offset": 16,
        "word_length": 8,
        "text": "Identify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 125,
        "text_offset": 25,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 312,
        "text_offset": 29,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "duration_milliseconds": 125,
        "text_offset": 34,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22500000,
        "duration_milliseconds": 87,
        "text_offset": 39,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23500000,
        "duration_milliseconds": 500,
        "text_offset": 43,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28750000,
        "duration_milliseconds": 262,
        "text_offset": 52,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31625000,
        "duration_milliseconds": 287,
        "text_offset": 59,
        "word_length": 5,
        "text": "among",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34750000,
        "duration_milliseconds": 137,
        "text_offset": 65,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36375000,
        "duration_milliseconds": 112,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 650,
        "text_offset": 73,
        "word_length": 10,
        "text": "calculated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "duration_milliseconds": 475,
        "text_offset": 84,
        "word_length": 5,
        "text": "tours",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49500000,
        "duration_milliseconds": 100,
        "text_offset": 89,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 58125000,
        "duration_milliseconds": 250,
        "text_offset": 91,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60875000,
        "duration_milliseconds": 112,
        "text_offset": 96,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62250000,
        "duration_milliseconds": 125,
        "text_offset": 99,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63750000,
        "duration_milliseconds": 437,
        "text_offset": 103,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68375000,
        "duration_milliseconds": 475,
        "text_offset": 111,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73375000,
        "duration_milliseconds": 87,
        "text_offset": 120,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74375000,
        "duration_milliseconds": 112,
        "text_offset": 123,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75750000,
        "duration_milliseconds": 412,
        "text_offset": 127,
        "word_length": 9,
        "text": "Traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80125000,
        "duration_milliseconds": 712,
        "text_offset": 137,
        "word_length": 11,
        "text": "Salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87500000,
        "duration_milliseconds": 475,
        "text_offset": 149,
        "word_length": 7,
        "text": "Problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92375000,
        "duration_milliseconds": 100,
        "text_offset": 156,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-need-to-identify-the-tour-with-the-shortest-ca60383f.mp3",
    "final_audio": "now-we-need-to-identify-the-tour-with-the-shortest-ca60383f.mp3"
  },
  {
    "input_text": "We can calculate the number of possible paths as the number of possible permutations of n elements when each permutation is counted as a separate operation",
    "input_data": {
      "input_text": "We can calculate the number of possible paths as the number of possible permutations of n elements when each permutation is counted as a separate operation",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We can calculate the number of possible paths as the number of possible permutations of n elements when each permutation is counted as a separate operation</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We can calculate the number of possible paths as the number of possible permutations of n elements when each permutation is counted as a separate operation</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 162,
        "text_offset": 3,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 562,
        "text_offset": 7,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 100,
        "text_offset": 17,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 325,
        "text_offset": 21,
        "word_length": 6,
        "text": "number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 100,
        "text_offset": 28,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16000000,
        "duration_milliseconds": 500,
        "text_offset": 31,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 400,
        "text_offset": 40,
        "word_length": 5,
        "text": "paths",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25500000,
        "duration_milliseconds": 137,
        "text_offset": 46,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27125000,
        "duration_milliseconds": 100,
        "text_offset": 49,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28375000,
        "duration_milliseconds": 325,
        "text_offset": 53,
        "word_length": 6,
        "text": "number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 100,
        "text_offset": 60,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 500,
        "text_offset": 63,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38250000,
        "duration_milliseconds": 787,
        "text_offset": 72,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 87,
        "text_offset": 85,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47375000,
        "duration_milliseconds": 137,
        "text_offset": 88,
        "word_length": 1,
        "text": "n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "duration_milliseconds": 425,
        "text_offset": 90,
        "word_length": 8,
        "text": "elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53500000,
        "duration_milliseconds": 162,
        "text_offset": 99,
        "word_length": 4,
        "text": "when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55375000,
        "duration_milliseconds": 175,
        "text_offset": 104,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57375000,
        "duration_milliseconds": 687,
        "text_offset": 109,
        "word_length": 11,
        "text": "permutation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64500000,
        "duration_milliseconds": 112,
        "text_offset": 121,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65875000,
        "duration_milliseconds": 375,
        "text_offset": 124,
        "word_length": 7,
        "text": "counted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69875000,
        "duration_milliseconds": 137,
        "text_offset": 132,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71500000,
        "duration_milliseconds": 62,
        "text_offset": 135,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72250000,
        "duration_milliseconds": 400,
        "text_offset": 137,
        "word_length": 8,
        "text": "separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76500000,
        "duration_milliseconds": 662,
        "text_offset": 146,
        "word_length": 9,
        "text": "operation",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "we-can-calculate-the-number-of-possible-paths-as-bfdc720d.mp3",
    "final_audio": "we-can-calculate-the-number-of-possible-paths-as-bfdc720d.mp3"
  },
  {
    "input_text": "For the example we've seen before we used 5 nodes, so we get 12 possible routes.",
    "input_data": {
      "input_text": "For the example we've seen before we used 5 nodes, so we get 12 possible routes.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For the example we've seen before we used 5 nodes, so we get 12 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For the example we've seen before we used 5 nodes, so we get 12 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 62,
        "text_offset": 4,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 525,
        "text_offset": 8,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8625000,
        "duration_milliseconds": 162,
        "text_offset": 16,
        "word_length": 5,
        "text": "we've",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 250,
        "text_offset": 22,
        "word_length": 4,
        "text": "seen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 325,
        "text_offset": 27,
        "word_length": 6,
        "text": "before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18125000,
        "duration_milliseconds": 212,
        "text_offset": 37,
        "word_length": 4,
        "text": "used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "duration_milliseconds": 262,
        "text_offset": 42,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23250000,
        "duration_milliseconds": 362,
        "text_offset": 44,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 137,
        "text_offset": 49,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 29125000,
        "duration_milliseconds": 100,
        "text_offset": 51,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 112,
        "text_offset": 54,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 175,
        "text_offset": 57,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33375000,
        "duration_milliseconds": 300,
        "text_offset": 61,
        "word_length": 2,
        "text": "12",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36625000,
        "duration_milliseconds": 475,
        "text_offset": 64,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41625000,
        "duration_milliseconds": 387,
        "text_offset": 73,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45625000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-the-example-we-ve-seen-before-we-used-5-nodes-b2fe434c.mp3",
    "final_audio": "for-the-example-we-ve-seen-before-we-used-5-nodes-b2fe434c.mp3"
  },
  {
    "input_text": "If we just increase the number of nodes by 1, we already get 60 possible routes.",
    "input_data": {
      "input_text": "If we just increase the number of nodes by 1, we already get 60 possible routes.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">If we just increase the number of nodes by 1, we already get 60 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">If we just increase the number of nodes by 1, we already get 60 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3875000,
        "duration_milliseconds": 237,
        "text_offset": 6,
        "word_length": 4,
        "text": "just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 375,
        "text_offset": 11,
        "word_length": 8,
        "text": "increase",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 100,
        "text_offset": 20,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11750000,
        "duration_milliseconds": 300,
        "text_offset": 24,
        "word_length": 6,
        "text": "number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 75,
        "text_offset": 31,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16000000,
        "duration_milliseconds": 262,
        "text_offset": 34,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 125,
        "text_offset": 40,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 312,
        "text_offset": 43,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24250000,
        "duration_milliseconds": 162,
        "text_offset": 44,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 112,
        "text_offset": 46,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 387,
        "text_offset": 49,
        "word_length": 7,
        "text": "already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 175,
        "text_offset": 57,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33375000,
        "duration_milliseconds": 412,
        "text_offset": 61,
        "word_length": 2,
        "text": "60",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37625000,
        "duration_milliseconds": 487,
        "text_offset": 64,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42750000,
        "duration_milliseconds": 387,
        "text_offset": 73,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "if-we-just-increase-the-number-of-nodes-by-1-we-0db7743e.mp3",
    "final_audio": "if-we-just-increase-the-number-of-nodes-by-1-we-0db7743e.mp3"
  },
  {
    "input_text": "For 10 nodes, it's already 181440 potential shortest paths!!",
    "input_data": {
      "input_text": "For 10 nodes, it's already 181440 potential shortest paths!!",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For 10 nodes, it's already 181440 potential shortest paths!!</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For 10 nodes, it's already 181440 potential shortest paths!!</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 212,
        "text_offset": 4,
        "word_length": 2,
        "text": "10",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 337,
        "text_offset": 7,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 75,
        "text_offset": 12,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 137,
        "text_offset": 14,
        "word_length": 4,
        "text": "it's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 362,
        "text_offset": 19,
        "word_length": 7,
        "text": "already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 537,
        "text_offset": 27,
        "word_length": 6,
        "text": "181440",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41000000,
        "duration_milliseconds": 500,
        "text_offset": 34,
        "word_length": 9,
        "text": "potential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 362,
        "text_offset": 44,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50125000,
        "duration_milliseconds": 475,
        "text_offset": 53,
        "word_length": 5,
        "text": "paths",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 100,
        "text_offset": 58,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-10-nodes-it-s-already-181440-potential-0eb159b8.mp3",
    "final_audio": "for-10-nodes-it-s-already-181440-potential-0eb159b8.mp3"
  },
  {
    "input_text": "This is because we got an exponential time complexity.",
    "input_data": {
      "input_text": "This is because we got an exponential time complexity.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is because we got an exponential time complexity.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is because we got an exponential time complexity.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 137,
        "text_offset": 5,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 325,
        "text_offset": 8,
        "word_length": 7,
        "text": "because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 112,
        "text_offset": 16,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9625000,
        "duration_milliseconds": 212,
        "text_offset": 19,
        "word_length": 3,
        "text": "got",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 112,
        "text_offset": 23,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 712,
        "text_offset": 26,
        "word_length": 11,
        "text": "exponential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 262,
        "text_offset": 38,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23375000,
        "duration_milliseconds": 812,
        "text_offset": 43,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31625000,
        "duration_milliseconds": 100,
        "text_offset": 53,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-is-because-we-got-an-exponential-time-0e9cea1c.mp3",
    "final_audio": "this-is-because-we-got-an-exponential-time-0e9cea1c.mp3"
  },
  {
    "input_text": "Another way of solving the TSP is with the help of the branch and bound method. Let's start with a simple TSP example. Again we have a set of cities and need to find the shortest possible route visiting each city exactly once.",
    "input_data": {
      "input_text": "Another way of solving the TSP is with the help of the branch and bound method. Let's start with a simple TSP example. Again we have a set of cities and need to find the shortest possible route visiting each city exactly once.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Another way of solving the TSP is with the help of the branch and bound method. Let's start with a simple TSP example. Again we have a set of cities and need to find the shortest possible route visiting each city exactly once.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Another way of solving the TSP is with the help of the branch and bound method. Let's start with a simple TSP example. Again we have a set of cities and need to find the shortest possible route visiting each city exactly once.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 412,
        "text_offset": 0,
        "word_length": 7,
        "text": "Another",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 137,
        "text_offset": 8,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 100,
        "text_offset": 12,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7750000,
        "duration_milliseconds": 400,
        "text_offset": 15,
        "word_length": 7,
        "text": "solving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 100,
        "text_offset": 23,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 575,
        "text_offset": 27,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19000000,
        "duration_milliseconds": 125,
        "text_offset": 31,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "duration_milliseconds": 137,
        "text_offset": 34,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 100,
        "text_offset": 39,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23375000,
        "duration_milliseconds": 225,
        "text_offset": 43,
        "word_length": 4,
        "text": "help",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25750000,
        "duration_milliseconds": 87,
        "text_offset": 48,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26875000,
        "duration_milliseconds": 100,
        "text_offset": 51,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28125000,
        "duration_milliseconds": 350,
        "text_offset": 55,
        "word_length": 6,
        "text": "branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 100,
        "text_offset": 62,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 262,
        "text_offset": 66,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35750000,
        "duration_milliseconds": 425,
        "text_offset": 72,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40125000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 48750000,
        "duration_milliseconds": 262,
        "text_offset": 80,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51625000,
        "duration_milliseconds": 287,
        "text_offset": 86,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54750000,
        "duration_milliseconds": 137,
        "text_offset": 92,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56375000,
        "duration_milliseconds": 62,
        "text_offset": 97,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57125000,
        "duration_milliseconds": 387,
        "text_offset": 99,
        "word_length": 6,
        "text": "simple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61250000,
        "duration_milliseconds": 562,
        "text_offset": 106,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67125000,
        "duration_milliseconds": 662,
        "text_offset": 110,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73875000,
        "duration_milliseconds": 100,
        "text_offset": 117,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 82500000,
        "duration_milliseconds": 412,
        "text_offset": 119,
        "word_length": 5,
        "text": "Again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86875000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88125000,
        "duration_milliseconds": 150,
        "text_offset": 128,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89750000,
        "duration_milliseconds": 62,
        "text_offset": 133,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90625000,
        "duration_milliseconds": 212,
        "text_offset": 135,
        "word_length": 3,
        "text": "set",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93000000,
        "duration_milliseconds": 87,
        "text_offset": 139,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94125000,
        "duration_milliseconds": 375,
        "text_offset": 142,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98125000,
        "duration_milliseconds": 87,
        "text_offset": 149,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99250000,
        "duration_milliseconds": 150,
        "text_offset": 153,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100875000,
        "duration_milliseconds": 75,
        "text_offset": 158,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101875000,
        "duration_milliseconds": 250,
        "text_offset": 161,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104500000,
        "duration_milliseconds": 75,
        "text_offset": 166,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105375000,
        "duration_milliseconds": 437,
        "text_offset": 170,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109875000,
        "duration_milliseconds": 475,
        "text_offset": 179,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114875000,
        "duration_milliseconds": 187,
        "text_offset": 188,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116875000,
        "duration_milliseconds": 450,
        "text_offset": 194,
        "word_length": 8,
        "text": "visiting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121500000,
        "duration_milliseconds": 150,
        "text_offset": 203,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123250000,
        "duration_milliseconds": 287,
        "text_offset": 208,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126375000,
        "duration_milliseconds": 500,
        "text_offset": 213,
        "word_length": 7,
        "text": "exactly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131625000,
        "duration_milliseconds": 437,
        "text_offset": 221,
        "word_length": 4,
        "text": "once",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136125000,
        "duration_milliseconds": 100,
        "text_offset": 225,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "another-way-of-solving-the-tsp-is-with-the-help-of-da5ad669.mp3",
    "final_audio": "another-way-of-solving-the-tsp-is-with-the-help-of-da5ad669.mp3"
  },
  {
    "input_text": "The Branch-and-Bound method begins by constructing a tree of all possibilities. First we need a Graph. Let's use the same graph and start at node one.",
    "input_data": {
      "input_text": "The Branch-and-Bound method begins by constructing a tree of all possibilities. First we need a Graph. Let's use the same graph and start at node one.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Branch-and-Bound method begins by constructing a tree of all possibilities. First we need a Graph. Let's use the same graph and start at node one.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The Branch-and-Bound method begins by constructing a tree of all possibilities. First we need a Graph. Let's use the same graph and start at node one.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 125,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1875000,
        "duration_milliseconds": 712,
        "text_offset": 4,
        "word_length": 16,
        "text": "Branch-and-Bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9250000,
        "duration_milliseconds": 287,
        "text_offset": 21,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 412,
        "text_offset": 28,
        "word_length": 6,
        "text": "begins",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 150,
        "text_offset": 35,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 662,
        "text_offset": 38,
        "word_length": 12,
        "text": "constructing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25375000,
        "duration_milliseconds": 50,
        "text_offset": 51,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 287,
        "text_offset": 53,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 100,
        "text_offset": 58,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 175,
        "text_offset": 61,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 862,
        "text_offset": 65,
        "word_length": 13,
        "text": "possibilities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41000000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 49500000,
        "duration_milliseconds": 412,
        "text_offset": 80,
        "word_length": 5,
        "text": "First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53875000,
        "duration_milliseconds": 112,
        "text_offset": 86,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55250000,
        "duration_milliseconds": 175,
        "text_offset": 89,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57250000,
        "duration_milliseconds": 62,
        "text_offset": 94,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58000000,
        "duration_milliseconds": 650,
        "text_offset": 96,
        "word_length": 5,
        "text": "Graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64750000,
        "duration_milliseconds": 100,
        "text_offset": 101,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 73375000,
        "duration_milliseconds": 287,
        "text_offset": 103,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76500000,
        "duration_milliseconds": 175,
        "text_offset": 109,
        "word_length": 3,
        "text": "use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78500000,
        "duration_milliseconds": 112,
        "text_offset": 113,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79750000,
        "duration_milliseconds": 275,
        "text_offset": 117,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82750000,
        "duration_milliseconds": 350,
        "text_offset": 122,
        "word_length": 5,
        "text": "graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86375000,
        "duration_milliseconds": 100,
        "text_offset": 128,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87625000,
        "duration_milliseconds": 312,
        "text_offset": 132,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91000000,
        "duration_milliseconds": 100,
        "text_offset": 138,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92125000,
        "duration_milliseconds": 212,
        "text_offset": 141,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94500000,
        "duration_milliseconds": 275,
        "text_offset": 146,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 100,
        "text_offset": 149,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-branch-and-bound-method-begins-by-constructing-0e9f9083.mp3",
    "final_audio": "the-branch-and-bound-method-begins-by-constructing-0e9f9083.mp3"
  },
  {
    "input_text": "Now we have to look at the next possible nodes. In this case we have four options. We can go to node 2, 3, 4 or 5.",
    "input_data": {
      "input_text": "Now we have to look at the next possible nodes. In this case we have four options. We can go to node 2, 3, 4 or 5.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we have to look at the next possible nodes. In this case we have four options. We can go to node 2, 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we have to look at the next possible nodes. In this case we have four options. We can go to node 2, 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 250,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 125,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 175,
        "text_offset": 7,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 100,
        "text_offset": 12,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7750000,
        "duration_milliseconds": 225,
        "text_offset": 15,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 75,
        "text_offset": 20,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 100,
        "text_offset": 23,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 275,
        "text_offset": 27,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 475,
        "text_offset": 32,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 437,
        "text_offset": 41,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25000000,
        "duration_milliseconds": 100,
        "text_offset": 46,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 187,
        "text_offset": 48,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35750000,
        "duration_milliseconds": 200,
        "text_offset": 51,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38000000,
        "duration_milliseconds": 275,
        "text_offset": 56,
        "word_length": 4,
        "text": "case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40875000,
        "duration_milliseconds": 137,
        "text_offset": 61,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42500000,
        "duration_milliseconds": 187,
        "text_offset": 64,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44625000,
        "duration_milliseconds": 300,
        "text_offset": 69,
        "word_length": 4,
        "text": "four",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47875000,
        "duration_milliseconds": 500,
        "text_offset": 74,
        "word_length": 7,
        "text": "options",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53125000,
        "duration_milliseconds": 100,
        "text_offset": 81,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 61750000,
        "duration_milliseconds": 162,
        "text_offset": 83,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63500000,
        "duration_milliseconds": 137,
        "text_offset": 86,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65125000,
        "duration_milliseconds": 125,
        "text_offset": 90,
        "word_length": 2,
        "text": "go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66500000,
        "duration_milliseconds": 87,
        "text_offset": 93,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67500000,
        "duration_milliseconds": 237,
        "text_offset": 96,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70125000,
        "duration_milliseconds": 262,
        "text_offset": 101,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73625000,
        "duration_milliseconds": 62,
        "text_offset": 102,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 74250000,
        "duration_milliseconds": 400,
        "text_offset": 104,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79125000,
        "duration_milliseconds": 75,
        "text_offset": 105,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 79875000,
        "duration_milliseconds": 362,
        "text_offset": 107,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84500000,
        "duration_milliseconds": 125,
        "text_offset": 109,
        "word_length": 2,
        "text": "or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86000000,
        "duration_milliseconds": 500,
        "text_offset": 112,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91250000,
        "duration_milliseconds": 100,
        "text_offset": 113,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-have-to-look-at-the-next-possible-nodes-in-8e8c1e2f.mp3",
    "final_audio": "now-we-have-to-look-at-the-next-possible-nodes-in-8e8c1e2f.mp3"
  },
  {
    "input_text": "At the same time we can tranform the graph on the right to a tree with node one as the root. This tree will show all the possible routes that the salesperson can use. As explained, starting with node one the next possible nodes could be node 2, 3, 4 or 5.",
    "input_data": {
      "input_text": "At the same time we can tranform the graph on the right to a tree with node one as the root. This tree will show all the possible routes that the salesperson can use. As explained, starting with node one the next possible nodes could be node 2, 3, 4 or 5.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">At the same time we can tranform the graph on the right to a tree with node one as the root. This tree will show all the possible routes that the salesperson can use. As explained, starting with node one the next possible nodes could be node 2, 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">At the same time we can tranform the graph on the right to a tree with node one as the root. This tree will show all the possible routes that the salesperson can use. As explained, starting with node one the next possible nodes could be node 2, 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 2,
        "text": "At",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3750000,
        "duration_milliseconds": 237,
        "text_offset": 7,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6375000,
        "duration_milliseconds": 262,
        "text_offset": 12,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 112,
        "text_offset": 17,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10375000,
        "duration_milliseconds": 125,
        "text_offset": 20,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 487,
        "text_offset": 24,
        "word_length": 8,
        "text": "tranform",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17000000,
        "duration_milliseconds": 100,
        "text_offset": 33,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18250000,
        "duration_milliseconds": 300,
        "text_offset": 37,
        "word_length": 5,
        "text": "graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21500000,
        "duration_milliseconds": 87,
        "text_offset": 43,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 87,
        "text_offset": 46,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 237,
        "text_offset": 50,
        "word_length": 5,
        "text": "right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26375000,
        "duration_milliseconds": 125,
        "text_offset": 56,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 62,
        "text_offset": 59,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 225,
        "text_offset": 61,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31000000,
        "duration_milliseconds": 162,
        "text_offset": 66,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32875000,
        "duration_milliseconds": 262,
        "text_offset": 71,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35750000,
        "duration_milliseconds": 175,
        "text_offset": 76,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 112,
        "text_offset": 80,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39125000,
        "duration_milliseconds": 87,
        "text_offset": 83,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40250000,
        "duration_milliseconds": 350,
        "text_offset": 87,
        "word_length": 4,
        "text": "root",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "duration_milliseconds": 100,
        "text_offset": 91,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 52625000,
        "duration_milliseconds": 237,
        "text_offset": 93,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55125000,
        "duration_milliseconds": 200,
        "text_offset": 98,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57250000,
        "duration_milliseconds": 137,
        "text_offset": 103,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58875000,
        "duration_milliseconds": 250,
        "text_offset": 108,
        "word_length": 4,
        "text": "show",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61625000,
        "duration_milliseconds": 200,
        "text_offset": 113,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63750000,
        "duration_milliseconds": 125,
        "text_offset": 117,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65125000,
        "duration_milliseconds": 450,
        "text_offset": 121,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69875000,
        "duration_milliseconds": 275,
        "text_offset": 130,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72875000,
        "duration_milliseconds": 137,
        "text_offset": 137,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74500000,
        "duration_milliseconds": 100,
        "text_offset": 142,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75625000,
        "duration_milliseconds": 712,
        "text_offset": 146,
        "word_length": 11,
        "text": "salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83000000,
        "duration_milliseconds": 150,
        "text_offset": 158,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84750000,
        "duration_milliseconds": 437,
        "text_offset": 162,
        "word_length": 3,
        "text": "use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89375000,
        "duration_milliseconds": 100,
        "text_offset": 165,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 97875000,
        "duration_milliseconds": 200,
        "text_offset": 167,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100125000,
        "duration_milliseconds": 487,
        "text_offset": 170,
        "word_length": 9,
        "text": "explained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106000000,
        "duration_milliseconds": 112,
        "text_offset": 179,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 107125000,
        "duration_milliseconds": 375,
        "text_offset": 181,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111000000,
        "duration_milliseconds": 150,
        "text_offset": 190,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112750000,
        "duration_milliseconds": 225,
        "text_offset": 195,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115250000,
        "duration_milliseconds": 162,
        "text_offset": 200,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117125000,
        "duration_milliseconds": 75,
        "text_offset": 204,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118000000,
        "duration_milliseconds": 262,
        "text_offset": 208,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120875000,
        "duration_milliseconds": 450,
        "text_offset": 213,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125625000,
        "duration_milliseconds": 275,
        "text_offset": 222,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128500000,
        "duration_milliseconds": 137,
        "text_offset": 228,
        "word_length": 5,
        "text": "could",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130125000,
        "duration_milliseconds": 100,
        "text_offset": 234,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131375000,
        "duration_milliseconds": 225,
        "text_offset": 237,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133750000,
        "duration_milliseconds": 262,
        "text_offset": 242,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137375000,
        "duration_milliseconds": 62,
        "text_offset": 243,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 138125000,
        "duration_milliseconds": 425,
        "text_offset": 245,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143250000,
        "duration_milliseconds": 62,
        "text_offset": 246,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 143875000,
        "duration_milliseconds": 362,
        "text_offset": 248,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148500000,
        "duration_milliseconds": 100,
        "text_offset": 250,
        "word_length": 2,
        "text": "or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149750000,
        "duration_milliseconds": 475,
        "text_offset": 253,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154750000,
        "duration_milliseconds": 100,
        "text_offset": 254,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "at-the-same-time-we-can-tranform-the-graph-on-the-b00d1e3b.mp3",
    "final_audio": "at-the-same-time-we-can-tranform-the-graph-on-the-b00d1e3b.mp3"
  },
  {
    "input_text": "This would be the first version of the tree. Now we have to take a look at the next steps. Let's say we choose node 2 as the second node to travel to.",
    "input_data": {
      "input_text": "This would be the first version of the tree. Now we have to take a look at the next steps. Let's say we choose node 2 as the second node to travel to.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This would be the first version of the tree. Now we have to take a look at the next steps. Let's say we choose node 2 as the second node to travel to.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This would be the first version of the tree. Now we have to take a look at the next steps. Let's say we choose node 2 as the second node to travel to.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 262,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 150,
        "text_offset": 5,
        "word_length": 5,
        "text": "would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 112,
        "text_offset": 11,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6250000,
        "duration_milliseconds": 125,
        "text_offset": 14,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 350,
        "text_offset": 18,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 375,
        "text_offset": 24,
        "word_length": 7,
        "text": "version",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 87,
        "text_offset": 32,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16375000,
        "duration_milliseconds": 100,
        "text_offset": 35,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 437,
        "text_offset": 39,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 250,
        "text_offset": 45,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33250000,
        "duration_milliseconds": 137,
        "text_offset": 49,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 175,
        "text_offset": 52,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36875000,
        "duration_milliseconds": 87,
        "text_offset": 57,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37875000,
        "duration_milliseconds": 225,
        "text_offset": 60,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40250000,
        "duration_milliseconds": 62,
        "text_offset": 65,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41125000,
        "duration_milliseconds": 262,
        "text_offset": 67,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44000000,
        "duration_milliseconds": 75,
        "text_offset": 72,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "duration_milliseconds": 100,
        "text_offset": 75,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46125000,
        "duration_milliseconds": 250,
        "text_offset": 79,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48875000,
        "duration_milliseconds": 487,
        "text_offset": 84,
        "word_length": 5,
        "text": "steps",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53875000,
        "duration_milliseconds": 100,
        "text_offset": 89,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 62500000,
        "duration_milliseconds": 262,
        "text_offset": 91,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65250000,
        "duration_milliseconds": 137,
        "text_offset": 97,
        "word_length": 3,
        "text": "say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66875000,
        "duration_milliseconds": 112,
        "text_offset": 101,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68250000,
        "duration_milliseconds": 287,
        "text_offset": 104,
        "word_length": 6,
        "text": "choose",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71375000,
        "duration_milliseconds": 237,
        "text_offset": 111,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74000000,
        "duration_milliseconds": 250,
        "text_offset": 116,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76750000,
        "duration_milliseconds": 125,
        "text_offset": 118,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78250000,
        "duration_milliseconds": 112,
        "text_offset": 121,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79625000,
        "duration_milliseconds": 350,
        "text_offset": 125,
        "word_length": 6,
        "text": "second",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83375000,
        "duration_milliseconds": 162,
        "text_offset": 132,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85125000,
        "duration_milliseconds": 62,
        "text_offset": 137,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86000000,
        "duration_milliseconds": 387,
        "text_offset": 140,
        "word_length": 6,
        "text": "travel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90125000,
        "duration_milliseconds": 237,
        "text_offset": 147,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92625000,
        "duration_milliseconds": 112,
        "text_offset": 149,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-would-be-the-first-version-of-the-tree-now-we-934aba13.mp3",
    "final_audio": "this-would-be-the-first-version-of-the-tree-now-we-934aba13.mp3"
  },
  {
    "input_text": "Starting from node 2, the next options would be node 3, 4 or 5.",
    "input_data": {
      "input_text": "Starting from node 2, the next options would be node 3, 4 or 5.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Starting from node 2, the next options would be node 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Starting from node 2, the next options would be node 3, 4 or 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 450,
        "text_offset": 0,
        "word_length": 8,
        "text": "Starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 162,
        "text_offset": 9,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 200,
        "text_offset": 14,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 225,
        "text_offset": 19,
        "word_length": 1,
        "text": "2",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 50,
        "text_offset": 20,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 87,
        "text_offset": 22,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 275,
        "text_offset": 26,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 337,
        "text_offset": 31,
        "word_length": 7,
        "text": "options",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 125,
        "text_offset": 39,
        "word_length": 5,
        "text": "would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 112,
        "text_offset": 45,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 200,
        "text_offset": 48,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25875000,
        "duration_milliseconds": 325,
        "text_offset": 53,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30000000,
        "duration_milliseconds": 87,
        "text_offset": 54,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 30875000,
        "duration_milliseconds": 400,
        "text_offset": 56,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35875000,
        "duration_milliseconds": 137,
        "text_offset": 58,
        "word_length": 2,
        "text": "or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37500000,
        "duration_milliseconds": 475,
        "text_offset": 61,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42500000,
        "duration_milliseconds": 100,
        "text_offset": 62,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "starting-from-node-2-the-next-options-would-be-78225796.mp3",
    "final_audio": "starting-from-node-2-the-next-options-would-be-78225796.mp3"
  },
  {
    "input_text": "Now we can create the next step at the tree. Again the next possible nodes to travel to would be node 3, 4 and 5.",
    "input_data": {
      "input_text": "Now we can create the next step at the tree. Again the next possible nodes to travel to would be node 3, 4 and 5.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we can create the next step at the tree. Again the next possible nodes to travel to would be node 3, 4 and 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we can create the next step at the tree. Again the next possible nodes to travel to would be node 3, 4 and 5.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 137,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5125000,
        "duration_milliseconds": 162,
        "text_offset": 7,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7000000,
        "duration_milliseconds": 337,
        "text_offset": 11,
        "word_length": 6,
        "text": "create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10625000,
        "duration_milliseconds": 100,
        "text_offset": 18,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11750000,
        "duration_milliseconds": 262,
        "text_offset": 22,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 275,
        "text_offset": 27,
        "word_length": 4,
        "text": "step",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 75,
        "text_offset": 32,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18625000,
        "duration_milliseconds": 100,
        "text_offset": 35,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 412,
        "text_offset": 39,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24125000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 312,
        "text_offset": 45,
        "word_length": 5,
        "text": "Again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36125000,
        "duration_milliseconds": 75,
        "text_offset": 51,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 262,
        "text_offset": 55,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39875000,
        "duration_milliseconds": 450,
        "text_offset": 60,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44625000,
        "duration_milliseconds": 262,
        "text_offset": 69,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47375000,
        "duration_milliseconds": 87,
        "text_offset": 75,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48500000,
        "duration_milliseconds": 337,
        "text_offset": 78,
        "word_length": 6,
        "text": "travel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52125000,
        "duration_milliseconds": 87,
        "text_offset": 85,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53125000,
        "duration_milliseconds": 125,
        "text_offset": 88,
        "word_length": 5,
        "text": "would",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54625000,
        "duration_milliseconds": 112,
        "text_offset": 94,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 225,
        "text_offset": 97,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58500000,
        "duration_milliseconds": 337,
        "text_offset": 102,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62750000,
        "duration_milliseconds": 75,
        "text_offset": 103,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 63500000,
        "duration_milliseconds": 337,
        "text_offset": 105,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69125000,
        "duration_milliseconds": 487,
        "text_offset": 111,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74250000,
        "duration_milliseconds": 100,
        "text_offset": 112,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-can-create-the-next-step-at-the-tree-again-38548e14.mp3",
    "final_audio": "now-we-can-create-the-next-step-at-the-tree-again-38548e14.mp3"
  },
  {
    "input_text": "Let's continue creating one possible route. We decide to travel to node 5 as our next city.",
    "input_data": {
      "input_text": "Let's continue creating one possible route. We decide to travel to node 5 as our next city.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's continue creating one possible route. We decide to travel to node 5 as our next city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's continue creating one possible route. We decide to travel to node 5 as our next city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 250,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 500,
        "text_offset": 6,
        "word_length": 8,
        "text": "continue",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 462,
        "text_offset": 15,
        "word_length": 8,
        "text": "creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 212,
        "text_offset": 24,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15500000,
        "duration_milliseconds": 500,
        "text_offset": 28,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 337,
        "text_offset": 37,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24375000,
        "duration_milliseconds": 100,
        "text_offset": 42,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 162,
        "text_offset": 44,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34750000,
        "duration_milliseconds": 387,
        "text_offset": 47,
        "word_length": 6,
        "text": "decide",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38875000,
        "duration_milliseconds": 75,
        "text_offset": 54,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39875000,
        "duration_milliseconds": 375,
        "text_offset": 57,
        "word_length": 6,
        "text": "travel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43875000,
        "duration_milliseconds": 87,
        "text_offset": 64,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44875000,
        "duration_milliseconds": 237,
        "text_offset": 67,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 387,
        "text_offset": 72,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51625000,
        "duration_milliseconds": 112,
        "text_offset": 74,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53000000,
        "duration_milliseconds": 112,
        "text_offset": 77,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54375000,
        "duration_milliseconds": 250,
        "text_offset": 81,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57000000,
        "duration_milliseconds": 375,
        "text_offset": 86,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "duration_milliseconds": 100,
        "text_offset": 90,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-continue-creating-one-possible-route-we-4250b805.mp3",
    "final_audio": "let-s-continue-creating-one-possible-route-we-4250b805.mp3"
  },
  {
    "input_text": "Starting from node 5, there are two cities left that have not been visited yet. Node 3 and 4.",
    "input_data": {
      "input_text": "Starting from node 5, there are two cities left that have not been visited yet. Node 3 and 4.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Starting from node 5, there are two cities left that have not been visited yet. Node 3 and 4.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Starting from node 5, there are two cities left that have not been visited yet. Node 3 and 4.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 462,
        "text_offset": 0,
        "word_length": 8,
        "text": "Starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 162,
        "text_offset": 9,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 200,
        "text_offset": 14,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 375,
        "text_offset": 19,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 100,
        "text_offset": 20,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 162,
        "text_offset": 22,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17000000,
        "duration_milliseconds": 112,
        "text_offset": 28,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18250000,
        "duration_milliseconds": 212,
        "text_offset": 32,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 387,
        "text_offset": 36,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24750000,
        "duration_milliseconds": 275,
        "text_offset": 43,
        "word_length": 4,
        "text": "left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 100,
        "text_offset": 48,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 137,
        "text_offset": 53,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30500000,
        "duration_milliseconds": 237,
        "text_offset": 58,
        "word_length": 3,
        "text": "not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 150,
        "text_offset": 62,
        "word_length": 4,
        "text": "been",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34750000,
        "duration_milliseconds": 425,
        "text_offset": 67,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39250000,
        "duration_milliseconds": 300,
        "text_offset": 75,
        "word_length": 3,
        "text": "yet",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 337,
        "text_offset": 80,
        "word_length": 4,
        "text": "Node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54500000,
        "duration_milliseconds": 275,
        "text_offset": 85,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57500000,
        "duration_milliseconds": 100,
        "text_offset": 87,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58625000,
        "duration_milliseconds": 500,
        "text_offset": 91,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63875000,
        "duration_milliseconds": 100,
        "text_offset": 92,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "starting-from-node-5-there-are-two-cities-left-c58b3488.mp3",
    "final_audio": "starting-from-node-5-there-are-two-cities-left-c58b3488.mp3"
  },
  {
    "input_text": "Let's go back to the tree and add the last two options, node 3 and 4",
    "input_data": {
      "input_text": "Let's go back to the tree and add the last two options, node 3 and 4",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's go back to the tree and add the last two options, node 3 and 4</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's go back to the tree and add the last two options, node 3 and 4</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 112,
        "text_offset": 6,
        "word_length": 2,
        "text": "go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 212,
        "text_offset": 9,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6375000,
        "duration_milliseconds": 87,
        "text_offset": 14,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 112,
        "text_offset": 17,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 237,
        "text_offset": 21,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11375000,
        "duration_milliseconds": 87,
        "text_offset": 26,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 162,
        "text_offset": 30,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 87,
        "text_offset": 34,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 262,
        "text_offset": 38,
        "word_length": 4,
        "text": "last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18250000,
        "duration_milliseconds": 175,
        "text_offset": 43,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 412,
        "text_offset": 47,
        "word_length": 7,
        "text": "options",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25250000,
        "duration_milliseconds": 137,
        "text_offset": 54,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26750000,
        "duration_milliseconds": 212,
        "text_offset": 56,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 212,
        "text_offset": 61,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 87,
        "text_offset": 63,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32500000,
        "duration_milliseconds": 450,
        "text_offset": 67,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "let-s-go-back-to-the-tree-and-add-the-last-two-674aad1d.mp3",
    "final_audio": "let-s-go-back-to-the-tree-and-add-the-last-two-674aad1d.mp3"
  },
  {
    "input_text": "This time we choose node 3 as the next city.",
    "input_data": {
      "input_text": "This time we choose node 3 as the next city.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This time we choose node 3 as the next city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This time we choose node 3 as the next city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 225,
        "text_offset": 5,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5500000,
        "duration_milliseconds": 112,
        "text_offset": 10,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 287,
        "text_offset": 13,
        "word_length": 6,
        "text": "choose",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 212,
        "text_offset": 20,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12375000,
        "duration_milliseconds": 325,
        "text_offset": 25,
        "word_length": 1,
        "text": "3",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 137,
        "text_offset": 27,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 87,
        "text_offset": 30,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 237,
        "text_offset": 34,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "duration_milliseconds": 387,
        "text_offset": 39,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-time-we-choose-node-3-as-the-next-city-4919d50c.mp3",
    "final_audio": "this-time-we-choose-node-3-as-the-next-city-4919d50c.mp3"
  },
  {
    "input_text": "As you can see the last city, that we have not visited is city 4.",
    "input_data": {
      "input_text": "As you can see the last city, that we have not visited is city 4.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As you can see the last city, that we have not visited is city 4.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As you can see the last city, that we have not visited is city 4.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 150,
        "text_offset": 7,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 200,
        "text_offset": 11,
        "word_length": 3,
        "text": "see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 125,
        "text_offset": 15,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9625000,
        "duration_milliseconds": 275,
        "text_offset": 19,
        "word_length": 4,
        "text": "last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12625000,
        "duration_milliseconds": 287,
        "text_offset": 24,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16375000,
        "duration_milliseconds": 62,
        "text_offset": 28,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 137,
        "text_offset": 30,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 100,
        "text_offset": 35,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "duration_milliseconds": 137,
        "text_offset": 38,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 212,
        "text_offset": 43,
        "word_length": 3,
        "text": "not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 437,
        "text_offset": 47,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28500000,
        "duration_milliseconds": 125,
        "text_offset": 55,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30000000,
        "duration_milliseconds": 250,
        "text_offset": 58,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 412,
        "text_offset": 63,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37125000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "as-you-can-see-the-last-city-that-we-have-not-6891ee7e.mp3",
    "final_audio": "as-you-can-see-the-last-city-that-we-have-not-6891ee7e.mp3"
  },
  {
    "input_text": "Let's also add node 4 in the tree. Now we have visited every city.",
    "input_data": {
      "input_text": "Let's also add node 4 in the tree. Now we have visited every city.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's also add node 4 in the tree. Now we have visited every city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's also add node 4 in the tree. Now we have visited every city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 250,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 300,
        "text_offset": 6,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 162,
        "text_offset": 11,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 212,
        "text_offset": 15,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10750000,
        "duration_milliseconds": 275,
        "text_offset": 20,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13750000,
        "duration_milliseconds": 62,
        "text_offset": 22,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 87,
        "text_offset": 25,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 412,
        "text_offset": 29,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20125000,
        "duration_milliseconds": 100,
        "text_offset": 33,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 312,
        "text_offset": 35,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32000000,
        "duration_milliseconds": 162,
        "text_offset": 39,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33875000,
        "duration_milliseconds": 175,
        "text_offset": 42,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35875000,
        "duration_milliseconds": 475,
        "text_offset": 47,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40750000,
        "duration_milliseconds": 262,
        "text_offset": 55,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 437,
        "text_offset": 61,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 100,
        "text_offset": 65,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-also-add-node-4-in-the-tree-now-we-have-e2892f1e.mp3",
    "final_audio": "let-s-also-add-node-4-in-the-tree-now-we-have-e2892f1e.mp3"
  },
  {
    "input_text": "At the end we have to travel to the city where we started the tour. Let's finish our route by traveling back to city 1.",
    "input_data": {
      "input_text": "At the end we have to travel to the city where we started the tour. Let's finish our route by traveling back to city 1.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">At the end we have to travel to the city where we started the tour. Let's finish our route by traveling back to city 1.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">At the end we have to travel to the city where we started the tour. Let's finish our route by traveling back to city 1.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 2,
        "text": "At",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4000000,
        "duration_milliseconds": 287,
        "text_offset": 7,
        "word_length": 3,
        "text": "end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 112,
        "text_offset": 11,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 150,
        "text_offset": 14,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 87,
        "text_offset": 19,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 375,
        "text_offset": 22,
        "word_length": 6,
        "text": "travel",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15125000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16250000,
        "duration_milliseconds": 125,
        "text_offset": 32,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17750000,
        "duration_milliseconds": 325,
        "text_offset": 36,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 212,
        "text_offset": 41,
        "word_length": 5,
        "text": "where",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 125,
        "text_offset": 47,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 350,
        "text_offset": 50,
        "word_length": 7,
        "text": "started",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28875000,
        "duration_milliseconds": 100,
        "text_offset": 58,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30125000,
        "duration_milliseconds": 450,
        "text_offset": 62,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 100,
        "text_offset": 66,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 43500000,
        "duration_milliseconds": 287,
        "text_offset": 68,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46500000,
        "duration_milliseconds": 325,
        "text_offset": 74,
        "word_length": 6,
        "text": "finish",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50000000,
        "duration_milliseconds": 125,
        "text_offset": 81,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51500000,
        "duration_milliseconds": 212,
        "text_offset": 85,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53875000,
        "duration_milliseconds": 112,
        "text_offset": 91,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55250000,
        "duration_milliseconds": 437,
        "text_offset": 94,
        "word_length": 9,
        "text": "traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59875000,
        "duration_milliseconds": 237,
        "text_offset": 104,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62375000,
        "duration_milliseconds": 75,
        "text_offset": 109,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63375000,
        "duration_milliseconds": 300,
        "text_offset": 112,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66625000,
        "duration_milliseconds": 337,
        "text_offset": 117,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 100,
        "text_offset": 118,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "at-the-end-we-have-to-travel-to-the-city-where-we-1f2f997a.mp3",
    "final_audio": "at-the-end-we-have-to-travel-to-the-city-where-we-1f2f997a.mp3"
  },
  {
    "input_text": "Now we can also finish our route on the tree by adding node 1 as our last node.",
    "input_data": {
      "input_text": "Now we can also finish our route on the tree by adding node 1 as our last node.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we can also finish our route on the tree by adding node 1 as our last node.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we can also finish our route on the tree by adding node 1 as our last node.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 137,
        "text_offset": 7,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 262,
        "text_offset": 11,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 312,
        "text_offset": 16,
        "word_length": 6,
        "text": "finish",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12125000,
        "duration_milliseconds": 137,
        "text_offset": 23,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13750000,
        "duration_milliseconds": 175,
        "text_offset": 27,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 100,
        "text_offset": 33,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16875000,
        "duration_milliseconds": 87,
        "text_offset": 36,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "duration_milliseconds": 262,
        "text_offset": 40,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 162,
        "text_offset": 45,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22500000,
        "duration_milliseconds": 325,
        "text_offset": 48,
        "word_length": 6,
        "text": "adding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 200,
        "text_offset": 55,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28250000,
        "duration_milliseconds": 175,
        "text_offset": 60,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 125,
        "text_offset": 62,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 125,
        "text_offset": 65,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33250000,
        "duration_milliseconds": 262,
        "text_offset": 69,
        "word_length": 4,
        "text": "last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36000000,
        "duration_milliseconds": 325,
        "text_offset": 74,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-can-also-finish-our-route-on-the-tree-by-6dd97e31.mp3",
    "final_audio": "now-we-can-also-finish-our-route-on-the-tree-by-6dd97e31.mp3"
  },
  {
    "input_text": "As you can see this is one possible route and the tree is not complete. Let's create the complete tree.",
    "input_data": {
      "input_text": "As you can see this is one possible route and the tree is not complete. Let's create the complete tree.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As you can see this is one possible route and the tree is not complete. Let's create the complete tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">As you can see this is one possible route and the tree is not complete. Let's create the complete tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 162,
        "text_offset": 7,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 212,
        "text_offset": 11,
        "word_length": 3,
        "text": "see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 187,
        "text_offset": 15,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 137,
        "text_offset": 20,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 250,
        "text_offset": 23,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 512,
        "text_offset": 27,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 275,
        "text_offset": 36,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22875000,
        "duration_milliseconds": 75,
        "text_offset": 42,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 87,
        "text_offset": 46,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24875000,
        "duration_milliseconds": 225,
        "text_offset": 50,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 112,
        "text_offset": 55,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28500000,
        "duration_milliseconds": 175,
        "text_offset": 58,
        "word_length": 3,
        "text": "not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30500000,
        "duration_milliseconds": 537,
        "text_offset": 62,
        "word_length": 8,
        "text": "complete",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36125000,
        "duration_milliseconds": 100,
        "text_offset": 70,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 44750000,
        "duration_milliseconds": 275,
        "text_offset": 72,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 350,
        "text_offset": 78,
        "word_length": 6,
        "text": "create",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51375000,
        "duration_milliseconds": 112,
        "text_offset": 85,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52750000,
        "duration_milliseconds": 400,
        "text_offset": 89,
        "word_length": 8,
        "text": "complete",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57000000,
        "duration_milliseconds": 437,
        "text_offset": 98,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61625000,
        "duration_milliseconds": 100,
        "text_offset": 102,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "as-you-can-see-this-is-one-possible-route-and-the-68209a8c.mp3",
    "final_audio": "as-you-can-see-this-is-one-possible-route-and-the-68209a8c.mp3"
  },
  {
    "input_text": "This tree shows every possible route, if you start from node one. Here we can now see that there are 24 possible routes to get to the last node. But is you take a closer look at the first and last route, you can see that the routes are identical, if we have a symmetrical TSP. That means if we have a symmetrical TSP, as in our example, we can ignore half of the routes.",
    "input_data": {
      "input_text": "This tree shows every possible route, if you start from node one. Here we can now see that there are 24 possible routes to get to the last node. But is you take a closer look at the first and last route, you can see that the routes are identical, if we have a symmetrical TSP. That means if we have a symmetrical TSP, as in our example, we can ignore half of the routes.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This tree shows every possible route, if you start from node one. Here we can now see that there are 24 possible routes to get to the last node. But is you take a closer look at the first and last route, you can see that the routes are identical, if we have a symmetrical TSP. That means if we have a symmetrical TSP, as in our example, we can ignore half of the routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This tree shows every possible route, if you start from node one. Here we can now see that there are 24 possible routes to get to the last node. But is you take a closer look at the first and last route, you can see that the routes are identical, if we have a symmetrical TSP. That means if we have a symmetrical TSP, as in our example, we can ignore half of the routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 200,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 187,
        "text_offset": 5,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 300,
        "text_offset": 10,
        "word_length": 5,
        "text": "shows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7750000,
        "duration_milliseconds": 225,
        "text_offset": 16,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 487,
        "text_offset": 22,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 262,
        "text_offset": 31,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18875000,
        "duration_milliseconds": 137,
        "text_offset": 36,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 100,
        "text_offset": 41,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22875000,
        "duration_milliseconds": 312,
        "text_offset": 45,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26250000,
        "duration_milliseconds": 175,
        "text_offset": 51,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28250000,
        "duration_milliseconds": 212,
        "text_offset": 56,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 262,
        "text_offset": 61,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 42000000,
        "duration_milliseconds": 225,
        "text_offset": 66,
        "word_length": 4,
        "text": "Here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44500000,
        "duration_milliseconds": 112,
        "text_offset": 71,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 150,
        "text_offset": 74,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 175,
        "text_offset": 78,
        "word_length": 3,
        "text": "now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49500000,
        "duration_milliseconds": 237,
        "text_offset": 82,
        "word_length": 3,
        "text": "see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52000000,
        "duration_milliseconds": 150,
        "text_offset": 86,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53750000,
        "duration_milliseconds": 150,
        "text_offset": 91,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55500000,
        "duration_milliseconds": 100,
        "text_offset": 97,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56625000,
        "duration_milliseconds": 512,
        "text_offset": 101,
        "word_length": 2,
        "text": "24",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61875000,
        "duration_milliseconds": 475,
        "text_offset": 104,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66875000,
        "duration_milliseconds": 287,
        "text_offset": 113,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "duration_milliseconds": 100,
        "text_offset": 120,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71250000,
        "duration_milliseconds": 150,
        "text_offset": 123,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72875000,
        "duration_milliseconds": 75,
        "text_offset": 127,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73875000,
        "duration_milliseconds": 100,
        "text_offset": 130,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75000000,
        "duration_milliseconds": 275,
        "text_offset": 134,
        "word_length": 4,
        "text": "last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77875000,
        "duration_milliseconds": 312,
        "text_offset": 139,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81250000,
        "duration_milliseconds": 100,
        "text_offset": 143,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 89750000,
        "duration_milliseconds": 162,
        "text_offset": 145,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91500000,
        "duration_milliseconds": 112,
        "text_offset": 149,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92875000,
        "duration_milliseconds": 87,
        "text_offset": 152,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "duration_milliseconds": 187,
        "text_offset": 156,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96000000,
        "duration_milliseconds": 75,
        "text_offset": 161,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97000000,
        "duration_milliseconds": 375,
        "text_offset": 163,
        "word_length": 6,
        "text": "closer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101000000,
        "duration_milliseconds": 187,
        "text_offset": 170,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103125000,
        "duration_milliseconds": 75,
        "text_offset": 175,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104125000,
        "duration_milliseconds": 100,
        "text_offset": 178,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105250000,
        "duration_milliseconds": 350,
        "text_offset": 182,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109000000,
        "duration_milliseconds": 87,
        "text_offset": 188,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110125000,
        "duration_milliseconds": 275,
        "text_offset": 192,
        "word_length": 4,
        "text": "last",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113125000,
        "duration_milliseconds": 250,
        "text_offset": 197,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116625000,
        "duration_milliseconds": 125,
        "text_offset": 202,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 117875000,
        "duration_milliseconds": 112,
        "text_offset": 204,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119250000,
        "duration_milliseconds": 150,
        "text_offset": 208,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121000000,
        "duration_milliseconds": 187,
        "text_offset": 212,
        "word_length": 3,
        "text": "see",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123125000,
        "duration_milliseconds": 137,
        "text_offset": 216,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124750000,
        "duration_milliseconds": 100,
        "text_offset": 221,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125875000,
        "duration_milliseconds": 250,
        "text_offset": 225,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128500000,
        "duration_milliseconds": 125,
        "text_offset": 232,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130000000,
        "duration_milliseconds": 575,
        "text_offset": 236,
        "word_length": 9,
        "text": "identical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136750000,
        "duration_milliseconds": 112,
        "text_offset": 245,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 138125000,
        "duration_milliseconds": 125,
        "text_offset": 247,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139625000,
        "duration_milliseconds": 100,
        "text_offset": 250,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 140875000,
        "duration_milliseconds": 150,
        "text_offset": 253,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 142500000,
        "duration_milliseconds": 62,
        "text_offset": 258,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143250000,
        "duration_milliseconds": 600,
        "text_offset": 260,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149500000,
        "duration_milliseconds": 750,
        "text_offset": 272,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 157250000,
        "duration_milliseconds": 100,
        "text_offset": 275,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 165875000,
        "duration_milliseconds": 225,
        "text_offset": 277,
        "word_length": 4,
        "text": "That",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168375000,
        "duration_milliseconds": 250,
        "text_offset": 282,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 171125000,
        "duration_milliseconds": 112,
        "text_offset": 288,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 172500000,
        "duration_milliseconds": 112,
        "text_offset": 291,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 173875000,
        "duration_milliseconds": 150,
        "text_offset": 294,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175500000,
        "duration_milliseconds": 62,
        "text_offset": 299,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 176250000,
        "duration_milliseconds": 625,
        "text_offset": 301,
        "word_length": 11,
        "text": "symmetrical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 182750000,
        "duration_milliseconds": 650,
        "text_offset": 313,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 190125000,
        "duration_milliseconds": 125,
        "text_offset": 316,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 191375000,
        "duration_milliseconds": 150,
        "text_offset": 318,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 193125000,
        "duration_milliseconds": 100,
        "text_offset": 321,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 194375000,
        "duration_milliseconds": 112,
        "text_offset": 324,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 195625000,
        "duration_milliseconds": 500,
        "text_offset": 328,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 201625000,
        "duration_milliseconds": 137,
        "text_offset": 335,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 203000000,
        "duration_milliseconds": 125,
        "text_offset": 337,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 204500000,
        "duration_milliseconds": 137,
        "text_offset": 340,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 206125000,
        "duration_milliseconds": 325,
        "text_offset": 344,
        "word_length": 6,
        "text": "ignore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 209625000,
        "duration_milliseconds": 237,
        "text_offset": 351,
        "word_length": 4,
        "text": "half",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 212125000,
        "duration_milliseconds": 87,
        "text_offset": 356,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 213250000,
        "duration_milliseconds": 87,
        "text_offset": 359,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 214250000,
        "duration_milliseconds": 400,
        "text_offset": 363,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 218375000,
        "duration_milliseconds": 100,
        "text_offset": 369,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-tree-shows-every-possible-route-if-you-start-4ee98700.mp3",
    "final_audio": "this-tree-shows-every-possible-route-if-you-start-4ee98700.mp3"
  },
  {
    "input_text": "Let's blur out the routes that we can ignore.",
    "input_data": {
      "input_text": "Let's blur out the routes that we can ignore.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's blur out the routes that we can ignore.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's blur out the routes that we can ignore.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 287,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 275,
        "text_offset": 6,
        "word_length": 4,
        "text": "blur",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 137,
        "text_offset": 11,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8125000,
        "duration_milliseconds": 112,
        "text_offset": 15,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 300,
        "text_offset": 19,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 137,
        "text_offset": 26,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 125,
        "text_offset": 31,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 150,
        "text_offset": 34,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 537,
        "text_offset": 38,
        "word_length": 6,
        "text": "ignore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23250000,
        "duration_milliseconds": 100,
        "text_offset": 44,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-blur-out-the-routes-that-we-can-ignore-e1331f7c.mp3",
    "final_audio": "let-s-blur-out-the-routes-that-we-can-ignore-e1331f7c.mp3"
  },
  {
    "input_text": "Here we can also visualize which route we took in the first example.",
    "input_data": {
      "input_text": "Here we can also visualize which route we took in the first example.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Here we can also visualize which route we took in the first example.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Here we can also visualize which route we took in the first example.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 4,
        "text": "Here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 125,
        "text_offset": 5,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 162,
        "text_offset": 8,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6375000,
        "duration_milliseconds": 250,
        "text_offset": 12,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 600,
        "text_offset": 17,
        "word_length": 9,
        "text": "visualize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 187,
        "text_offset": 27,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 212,
        "text_offset": 33,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 112,
        "text_offset": 39,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 212,
        "text_offset": 42,
        "word_length": 4,
        "text": "took",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 75,
        "text_offset": 47,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24625000,
        "duration_milliseconds": 87,
        "text_offset": 50,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25625000,
        "duration_milliseconds": 287,
        "text_offset": 54,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28750000,
        "duration_milliseconds": 587,
        "text_offset": 60,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34750000,
        "duration_milliseconds": 100,
        "text_offset": 67,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "here-we-can-also-visualize-which-route-we-took-in-31d4c51e.mp3",
    "final_audio": "here-we-can-also-visualize-which-route-we-took-in-31d4c51e.mp3"
  },
  {
    "input_text": "After having created a tree for every possible route, the branch and bound method calculates the cost for every route and compares it to the best route so far. If the cost of the current route is higher than the cost of the best route so far, the current route will be discarded.",
    "input_data": {
      "input_text": "After having created a tree for every possible route, the branch and bound method calculates the cost for every route and compares it to the best route so far. If the cost of the current route is higher than the cost of the best route so far, the current route will be discarded.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">After having created a tree for every possible route, the branch and bound method calculates the cost for every route and compares it to the best route so far. If the cost of the current route is higher than the cost of the best route so far, the current route will be discarded.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">After having created a tree for every possible route, the branch and bound method calculates the cost for every route and compares it to the best route so far. If the cost of the current route is higher than the cost of the best route so far, the current route will be discarded.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 312,
        "text_offset": 0,
        "word_length": 5,
        "text": "After",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3875000,
        "duration_milliseconds": 262,
        "text_offset": 6,
        "word_length": 6,
        "text": "having",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 425,
        "text_offset": 13,
        "word_length": 7,
        "text": "created",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 50,
        "text_offset": 21,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 250,
        "text_offset": 23,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 175,
        "text_offset": 28,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16500000,
        "duration_milliseconds": 200,
        "text_offset": 32,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 475,
        "text_offset": 38,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 212,
        "text_offset": 47,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26875000,
        "duration_milliseconds": 100,
        "text_offset": 52,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 28000000,
        "duration_milliseconds": 100,
        "text_offset": 54,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29125000,
        "duration_milliseconds": 337,
        "text_offset": 58,
        "word_length": 6,
        "text": "branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33375000,
        "duration_milliseconds": 75,
        "text_offset": 65,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34375000,
        "duration_milliseconds": 237,
        "text_offset": 69,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 287,
        "text_offset": 75,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40125000,
        "duration_milliseconds": 612,
        "text_offset": 82,
        "word_length": 10,
        "text": "calculates",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46375000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 312,
        "text_offset": 97,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 162,
        "text_offset": 102,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52875000,
        "duration_milliseconds": 250,
        "text_offset": 106,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55625000,
        "duration_milliseconds": 225,
        "text_offset": 112,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58000000,
        "duration_milliseconds": 87,
        "text_offset": 118,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59125000,
        "duration_milliseconds": 400,
        "text_offset": 122,
        "word_length": 8,
        "text": "compares",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63375000,
        "duration_milliseconds": 87,
        "text_offset": 131,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64500000,
        "duration_milliseconds": 87,
        "text_offset": 134,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65500000,
        "duration_milliseconds": 100,
        "text_offset": 137,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66750000,
        "duration_milliseconds": 250,
        "text_offset": 141,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69500000,
        "duration_milliseconds": 162,
        "text_offset": 146,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71375000,
        "duration_milliseconds": 162,
        "text_offset": 152,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73250000,
        "duration_milliseconds": 387,
        "text_offset": 155,
        "word_length": 3,
        "text": "far",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 100,
        "text_offset": 158,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 86000000,
        "duration_milliseconds": 162,
        "text_offset": 160,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87750000,
        "duration_milliseconds": 112,
        "text_offset": 163,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89125000,
        "duration_milliseconds": 312,
        "text_offset": 167,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92500000,
        "duration_milliseconds": 62,
        "text_offset": 172,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93375000,
        "duration_milliseconds": 100,
        "text_offset": 175,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94625000,
        "duration_milliseconds": 337,
        "text_offset": 179,
        "word_length": 7,
        "text": "current",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98250000,
        "duration_milliseconds": 200,
        "text_offset": 187,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100500000,
        "duration_milliseconds": 125,
        "text_offset": 193,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102000000,
        "duration_milliseconds": 300,
        "text_offset": 196,
        "word_length": 6,
        "text": "higher",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105250000,
        "duration_milliseconds": 125,
        "text_offset": 203,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106750000,
        "duration_milliseconds": 100,
        "text_offset": 208,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108000000,
        "duration_milliseconds": 362,
        "text_offset": 212,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111875000,
        "duration_milliseconds": 62,
        "text_offset": 217,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112750000,
        "duration_milliseconds": 100,
        "text_offset": 220,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114000000,
        "duration_milliseconds": 262,
        "text_offset": 224,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116875000,
        "duration_milliseconds": 162,
        "text_offset": 229,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118750000,
        "duration_milliseconds": 175,
        "text_offset": 235,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120625000,
        "duration_milliseconds": 312,
        "text_offset": 238,
        "word_length": 3,
        "text": "far",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124750000,
        "duration_milliseconds": 162,
        "text_offset": 241,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 126375000,
        "duration_milliseconds": 112,
        "text_offset": 243,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127750000,
        "duration_milliseconds": 350,
        "text_offset": 247,
        "word_length": 7,
        "text": "current",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131500000,
        "duration_milliseconds": 187,
        "text_offset": 255,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133625000,
        "duration_milliseconds": 125,
        "text_offset": 261,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135125000,
        "duration_milliseconds": 100,
        "text_offset": 266,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 136375000,
        "duration_milliseconds": 637,
        "text_offset": 269,
        "word_length": 9,
        "text": "discarded",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143000000,
        "duration_milliseconds": 100,
        "text_offset": 278,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "after-having-created-a-tree-for-every-possible-7d1de374.mp3",
    "final_audio": "after-having-created-a-tree-for-every-possible-7d1de374.mp3"
  },
  {
    "input_text": "Let's take a look at an example. Lets say the algorithm calculated our route first with the cost of 15. As it is the first route, it is also the best route so far.",
    "input_data": {
      "input_text": "Let's take a look at an example. Lets say the algorithm calculated our route first with the cost of 15. As it is the first route, it is also the best route so far.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's take a look at an example. Lets say the algorithm calculated our route first with the cost of 15. As it is the first route, it is also the best route so far.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's take a look at an example. Lets say the algorithm calculated our route first with the cost of 15. As it is the first route, it is also the best route so far.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 312,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3750000,
        "duration_milliseconds": 187,
        "text_offset": 6,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 62,
        "text_offset": 11,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 262,
        "text_offset": 13,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9625000,
        "duration_milliseconds": 112,
        "text_offset": 18,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 87,
        "text_offset": 21,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 662,
        "text_offset": 24,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18625000,
        "duration_milliseconds": 100,
        "text_offset": 31,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 250,
        "text_offset": 33,
        "word_length": 4,
        "text": "Lets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30000000,
        "duration_milliseconds": 162,
        "text_offset": 38,
        "word_length": 3,
        "text": "say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 125,
        "text_offset": 42,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33375000,
        "duration_milliseconds": 625,
        "text_offset": 46,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39875000,
        "duration_milliseconds": 687,
        "text_offset": 56,
        "word_length": 10,
        "text": "calculated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47000000,
        "duration_milliseconds": 125,
        "text_offset": 67,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48500000,
        "duration_milliseconds": 175,
        "text_offset": 71,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50500000,
        "duration_milliseconds": 362,
        "text_offset": 77,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54375000,
        "duration_milliseconds": 112,
        "text_offset": 83,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55750000,
        "duration_milliseconds": 112,
        "text_offset": 88,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57125000,
        "duration_milliseconds": 325,
        "text_offset": 92,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60625000,
        "duration_milliseconds": 75,
        "text_offset": 97,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61625000,
        "duration_milliseconds": 575,
        "text_offset": 100,
        "word_length": 2,
        "text": "15",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67625000,
        "duration_milliseconds": 100,
        "text_offset": 102,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 76250000,
        "duration_milliseconds": 212,
        "text_offset": 104,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78625000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79750000,
        "duration_milliseconds": 125,
        "text_offset": 110,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81250000,
        "duration_milliseconds": 112,
        "text_offset": 113,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "duration_milliseconds": 312,
        "text_offset": 117,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85875000,
        "duration_milliseconds": 275,
        "text_offset": 123,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89625000,
        "duration_milliseconds": 137,
        "text_offset": 128,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 91000000,
        "duration_milliseconds": 87,
        "text_offset": 130,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92000000,
        "duration_milliseconds": 125,
        "text_offset": 133,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93500000,
        "duration_milliseconds": 250,
        "text_offset": 136,
        "word_length": 4,
        "text": "also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96250000,
        "duration_milliseconds": 112,
        "text_offset": 141,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 262,
        "text_offset": 145,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100375000,
        "duration_milliseconds": 175,
        "text_offset": 150,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102375000,
        "duration_milliseconds": 200,
        "text_offset": 156,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104625000,
        "duration_milliseconds": 412,
        "text_offset": 159,
        "word_length": 3,
        "text": "far",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109000000,
        "duration_milliseconds": 100,
        "text_offset": 162,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-take-a-look-at-an-example-lets-say-the-83f5b01e.mp3",
    "final_audio": "let-s-take-a-look-at-an-example-lets-say-the-83f5b01e.mp3"
  },
  {
    "input_text": "Next, the algorithm calculates the route on the left. The cost of this route is 12. As this route is better than the best route so far, it becomes the new best route.",
    "input_data": {
      "input_text": "Next, the algorithm calculates the route on the left. The cost of this route is 12. As this route is better than the best route so far, it becomes the new best route.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Next, the algorithm calculates the route on the left. The cost of this route is 12. As this route is better than the best route so far, it becomes the new best route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Next, the algorithm calculates the route on the left. The cost of this route is 12. As this route is better than the best route so far, it becomes the new best route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 462,
        "text_offset": 0,
        "word_length": 4,
        "text": "Next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 87,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 125,
        "text_offset": 6,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 637,
        "text_offset": 10,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 625,
        "text_offset": 20,
        "word_length": 10,
        "text": "calculates",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21375000,
        "duration_milliseconds": 125,
        "text_offset": 31,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22875000,
        "duration_milliseconds": 237,
        "text_offset": 35,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25500000,
        "duration_milliseconds": 100,
        "text_offset": 41,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26750000,
        "duration_milliseconds": 75,
        "text_offset": 44,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 412,
        "text_offset": 48,
        "word_length": 4,
        "text": "left",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 100,
        "text_offset": 52,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 40625000,
        "duration_milliseconds": 137,
        "text_offset": 54,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42250000,
        "duration_milliseconds": 337,
        "text_offset": 58,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 75,
        "text_offset": 63,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46875000,
        "duration_milliseconds": 187,
        "text_offset": 66,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "duration_milliseconds": 237,
        "text_offset": 71,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51625000,
        "duration_milliseconds": 125,
        "text_offset": 77,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53000000,
        "duration_milliseconds": 562,
        "text_offset": 80,
        "word_length": 2,
        "text": "12",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58875000,
        "duration_milliseconds": 100,
        "text_offset": 82,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 67500000,
        "duration_milliseconds": 175,
        "text_offset": 84,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69500000,
        "duration_milliseconds": 175,
        "text_offset": 87,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71500000,
        "duration_milliseconds": 162,
        "text_offset": 92,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73375000,
        "duration_milliseconds": 125,
        "text_offset": 98,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74875000,
        "duration_milliseconds": 275,
        "text_offset": 101,
        "word_length": 6,
        "text": "better",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77750000,
        "duration_milliseconds": 125,
        "text_offset": 108,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79250000,
        "duration_milliseconds": 100,
        "text_offset": 113,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80375000,
        "duration_milliseconds": 262,
        "text_offset": 117,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83250000,
        "duration_milliseconds": 162,
        "text_offset": 122,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85125000,
        "duration_milliseconds": 175,
        "text_offset": 128,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87125000,
        "duration_milliseconds": 325,
        "text_offset": 131,
        "word_length": 3,
        "text": "far",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91375000,
        "duration_milliseconds": 112,
        "text_offset": 134,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 92500000,
        "duration_milliseconds": 50,
        "text_offset": 136,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93125000,
        "duration_milliseconds": 362,
        "text_offset": 139,
        "word_length": 7,
        "text": "becomes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97000000,
        "duration_milliseconds": 87,
        "text_offset": 147,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98000000,
        "duration_milliseconds": 137,
        "text_offset": 151,
        "word_length": 3,
        "text": "new",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99500000,
        "duration_milliseconds": 262,
        "text_offset": 155,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102375000,
        "duration_milliseconds": 325,
        "text_offset": 160,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105875000,
        "duration_milliseconds": 100,
        "text_offset": 165,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "next-the-algorithm-calculates-the-route-on-the-4c2fd5d2.mp3",
    "final_audio": "next-the-algorithm-calculates-the-route-on-the-4c2fd5d2.mp3"
  },
  {
    "input_text": "Now the algorithm calculates the next route. In our example it will be the seventh possible route.",
    "input_data": {
      "input_text": "Now the algorithm calculates the next route. In our example it will be the seventh possible route.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now the algorithm calculates the next route. In our example it will be the seventh possible route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now the algorithm calculates the next route. In our example it will be the seventh possible route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 300,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3625000,
        "duration_milliseconds": 150,
        "text_offset": 4,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 637,
        "text_offset": 8,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 650,
        "text_offset": 18,
        "word_length": 10,
        "text": "calculates",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 287,
        "text_offset": 33,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23000000,
        "duration_milliseconds": 362,
        "text_offset": 38,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26875000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 200,
        "text_offset": 45,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37625000,
        "duration_milliseconds": 150,
        "text_offset": 48,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39250000,
        "duration_milliseconds": 537,
        "text_offset": 52,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44875000,
        "duration_milliseconds": 100,
        "text_offset": 60,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46125000,
        "duration_milliseconds": 125,
        "text_offset": 63,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 125,
        "text_offset": 68,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "duration_milliseconds": 125,
        "text_offset": 71,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50375000,
        "duration_milliseconds": 412,
        "text_offset": 75,
        "word_length": 7,
        "text": "seventh",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54625000,
        "duration_milliseconds": 500,
        "text_offset": 83,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59875000,
        "duration_milliseconds": 350,
        "text_offset": 92,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 100,
        "text_offset": 97,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-the-algorithm-calculates-the-next-route-in-our-0028c478.mp3",
    "final_audio": "now-the-algorithm-calculates-the-next-route-in-our-0028c478.mp3"
  },
  {
    "input_text": "In this route the algorithm realizes at the third node that the added costs are at 14. Since the cost of the route till the third node is already higher than the cost of the best route, the algorithm can discard this route without calculating it untill the end.",
    "input_data": {
      "input_text": "In this route the algorithm realizes at the third node that the added costs are at 14. Since the cost of the route till the third node is already higher than the cost of the best route, the algorithm can discard this route without calculating it untill the end.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">In this route the algorithm realizes at the third node that the added costs are at 14. Since the cost of the route till the third node is already higher than the cost of the best route, the algorithm can discard this route without calculating it untill the end.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">In this route the algorithm realizes at the third node that the added costs are at 14. Since the cost of the route till the third node is already higher than the cost of the best route, the algorithm can discard this route without calculating it untill the end.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 187,
        "text_offset": 3,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 212,
        "text_offset": 8,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 112,
        "text_offset": 14,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 587,
        "text_offset": 18,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 550,
        "text_offset": 28,
        "word_length": 8,
        "text": "realizes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 75,
        "text_offset": 37,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 112,
        "text_offset": 40,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 275,
        "text_offset": 44,
        "word_length": 5,
        "text": "third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25625000,
        "duration_milliseconds": 237,
        "text_offset": 50,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28250000,
        "duration_milliseconds": 112,
        "text_offset": 55,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29625000,
        "duration_milliseconds": 112,
        "text_offset": 60,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31000000,
        "duration_milliseconds": 300,
        "text_offset": 64,
        "word_length": 5,
        "text": "added",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34250000,
        "duration_milliseconds": 400,
        "text_offset": 70,
        "word_length": 5,
        "text": "costs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38500000,
        "duration_milliseconds": 137,
        "text_offset": 76,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40125000,
        "duration_milliseconds": 75,
        "text_offset": 80,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41125000,
        "duration_milliseconds": 600,
        "text_offset": 83,
        "word_length": 2,
        "text": "14",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47375000,
        "duration_milliseconds": 100,
        "text_offset": 85,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 300,
        "text_offset": 87,
        "word_length": 5,
        "text": "Since",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59125000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60375000,
        "duration_milliseconds": 312,
        "text_offset": 97,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63750000,
        "duration_milliseconds": 50,
        "text_offset": 102,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64500000,
        "duration_milliseconds": 87,
        "text_offset": 105,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65625000,
        "duration_milliseconds": 212,
        "text_offset": 109,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "duration_milliseconds": 137,
        "text_offset": 115,
        "word_length": 4,
        "text": "till",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69500000,
        "duration_milliseconds": 112,
        "text_offset": 120,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70875000,
        "duration_milliseconds": 262,
        "text_offset": 124,
        "word_length": 5,
        "text": "third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73750000,
        "duration_milliseconds": 200,
        "text_offset": 130,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75875000,
        "duration_milliseconds": 112,
        "text_offset": 135,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77250000,
        "duration_milliseconds": 350,
        "text_offset": 138,
        "word_length": 7,
        "text": "already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81000000,
        "duration_milliseconds": 312,
        "text_offset": 146,
        "word_length": 6,
        "text": "higher",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84375000,
        "duration_milliseconds": 112,
        "text_offset": 153,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85750000,
        "duration_milliseconds": 100,
        "text_offset": 158,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87000000,
        "duration_milliseconds": 325,
        "text_offset": 162,
        "word_length": 4,
        "text": "cost",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90500000,
        "duration_milliseconds": 75,
        "text_offset": 167,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91500000,
        "duration_milliseconds": 75,
        "text_offset": 170,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92375000,
        "duration_milliseconds": 237,
        "text_offset": 174,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95000000,
        "duration_milliseconds": 225,
        "text_offset": 179,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98250000,
        "duration_milliseconds": 200,
        "text_offset": 184,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 100375000,
        "duration_milliseconds": 125,
        "text_offset": 186,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101875000,
        "duration_milliseconds": 587,
        "text_offset": 190,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108000000,
        "duration_milliseconds": 125,
        "text_offset": 200,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109500000,
        "duration_milliseconds": 450,
        "text_offset": 204,
        "word_length": 7,
        "text": "discard",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114250000,
        "duration_milliseconds": 187,
        "text_offset": 212,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116375000,
        "duration_milliseconds": 200,
        "text_offset": 217,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118625000,
        "duration_milliseconds": 325,
        "text_offset": 223,
        "word_length": 7,
        "text": "without",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122125000,
        "duration_milliseconds": 687,
        "text_offset": 231,
        "word_length": 11,
        "text": "calculating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129250000,
        "duration_milliseconds": 87,
        "text_offset": 243,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130375000,
        "duration_milliseconds": 262,
        "text_offset": 246,
        "word_length": 6,
        "text": "untill",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133125000,
        "duration_milliseconds": 100,
        "text_offset": 253,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134375000,
        "duration_milliseconds": 387,
        "text_offset": 257,
        "word_length": 3,
        "text": "end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138500000,
        "duration_milliseconds": 100,
        "text_offset": 260,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "in-this-route-the-algorithm-realizes-at-the-third-fb0a0eb2.mp3",
    "final_audio": "in-this-route-the-algorithm-realizes-at-the-third-fb0a0eb2.mp3"
  },
  {
    "input_text": "This way of calculating the best route is applied to every route. At the end the algorithm will have found the best route. In this example it is the first route.",
    "input_data": {
      "input_text": "This way of calculating the best route is applied to every route. At the end the algorithm will have found the best route. In this example it is the first route.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This way of calculating the best route is applied to every route. At the end the algorithm will have found the best route. In this example it is the first route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This way of calculating the best route is applied to every route. At the end the algorithm will have found the best route. In this example it is the first route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 150,
        "text_offset": 5,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 100,
        "text_offset": 9,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 675,
        "text_offset": 12,
        "word_length": 11,
        "text": "calculating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 100,
        "text_offset": 24,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 262,
        "text_offset": 28,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17125000,
        "duration_milliseconds": 237,
        "text_offset": 33,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19625000,
        "duration_milliseconds": 125,
        "text_offset": 39,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21125000,
        "duration_milliseconds": 350,
        "text_offset": 42,
        "word_length": 7,
        "text": "applied",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24750000,
        "duration_milliseconds": 112,
        "text_offset": 50,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 287,
        "text_offset": 53,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29125000,
        "duration_milliseconds": 337,
        "text_offset": 59,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32625000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 41125000,
        "duration_milliseconds": 212,
        "text_offset": 66,
        "word_length": 2,
        "text": "At",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43375000,
        "duration_milliseconds": 112,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44750000,
        "duration_milliseconds": 287,
        "text_offset": 73,
        "word_length": 3,
        "text": "end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47750000,
        "duration_milliseconds": 100,
        "text_offset": 77,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49000000,
        "duration_milliseconds": 612,
        "text_offset": 81,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55375000,
        "duration_milliseconds": 125,
        "text_offset": 91,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56750000,
        "duration_milliseconds": 150,
        "text_offset": 96,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58500000,
        "duration_milliseconds": 275,
        "text_offset": 101,
        "word_length": 5,
        "text": "found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61375000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62375000,
        "duration_milliseconds": 275,
        "text_offset": 111,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65375000,
        "duration_milliseconds": 350,
        "text_offset": 116,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "duration_milliseconds": 100,
        "text_offset": 121,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 77625000,
        "duration_milliseconds": 187,
        "text_offset": 123,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79750000,
        "duration_milliseconds": 175,
        "text_offset": 126,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81750000,
        "duration_milliseconds": 562,
        "text_offset": 131,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87625000,
        "duration_milliseconds": 112,
        "text_offset": 139,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "duration_milliseconds": 125,
        "text_offset": 142,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90500000,
        "duration_milliseconds": 112,
        "text_offset": 145,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91750000,
        "duration_milliseconds": 337,
        "text_offset": 149,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95375000,
        "duration_milliseconds": 375,
        "text_offset": 155,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99375000,
        "duration_milliseconds": 100,
        "text_offset": 160,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-way-of-calculating-the-best-route-is-applied-48b27187.mp3",
    "final_audio": "this-way-of-calculating-the-best-route-is-applied-48b27187.mp3"
  },
  {
    "input_text": "Let's take a look now at the time complexity of the branch and bound method. As explained, the algorithm calculates every possible route. But as we have seen before, it can discard routes that are worse than the best route so far.",
    "input_data": {
      "input_text": "Let's take a look now at the time complexity of the branch and bound method. As explained, the algorithm calculates every possible route. But as we have seen before, it can discard routes that are worse than the best route so far.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's take a look now at the time complexity of the branch and bound method. As explained, the algorithm calculates every possible route. But as we have seen before, it can discard routes that are worse than the best route so far.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Let's take a look now at the time complexity of the branch and bound method. As explained, the algorithm calculates every possible route. But as we have seen before, it can discard routes that are worse than the best route so far.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 262,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 187,
        "text_offset": 6,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 62,
        "text_offset": 11,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 200,
        "text_offset": 13,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 225,
        "text_offset": 18,
        "word_length": 3,
        "text": "now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10750000,
        "duration_milliseconds": 75,
        "text_offset": 22,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11750000,
        "duration_milliseconds": 100,
        "text_offset": 25,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "duration_milliseconds": 262,
        "text_offset": 29,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15750000,
        "duration_milliseconds": 662,
        "text_offset": 34,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 75,
        "text_offset": 45,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 112,
        "text_offset": 48,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25000000,
        "duration_milliseconds": 350,
        "text_offset": 52,
        "word_length": 6,
        "text": "branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 100,
        "text_offset": 59,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29875000,
        "duration_milliseconds": 262,
        "text_offset": 63,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 475,
        "text_offset": 69,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37625000,
        "duration_milliseconds": 100,
        "text_offset": 75,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 237,
        "text_offset": 77,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48875000,
        "duration_milliseconds": 512,
        "text_offset": 80,
        "word_length": 9,
        "text": "explained",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 125,
        "text_offset": 89,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 56250000,
        "duration_milliseconds": 112,
        "text_offset": 91,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57625000,
        "duration_milliseconds": 612,
        "text_offset": 95,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64000000,
        "duration_milliseconds": 625,
        "text_offset": 105,
        "word_length": 10,
        "text": "calculates",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70375000,
        "duration_milliseconds": 262,
        "text_offset": 116,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73250000,
        "duration_milliseconds": 512,
        "text_offset": 122,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78625000,
        "duration_milliseconds": 337,
        "text_offset": 131,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82250000,
        "duration_milliseconds": 100,
        "text_offset": 136,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 90750000,
        "duration_milliseconds": 150,
        "text_offset": 138,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92500000,
        "duration_milliseconds": 112,
        "text_offset": 142,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93875000,
        "duration_milliseconds": 100,
        "text_offset": 145,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95125000,
        "duration_milliseconds": 112,
        "text_offset": 148,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96500000,
        "duration_milliseconds": 212,
        "text_offset": 153,
        "word_length": 4,
        "text": "seen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98750000,
        "duration_milliseconds": 437,
        "text_offset": 158,
        "word_length": 6,
        "text": "before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104125000,
        "duration_milliseconds": 112,
        "text_offset": 164,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 105375000,
        "duration_milliseconds": 75,
        "text_offset": 166,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106375000,
        "duration_milliseconds": 125,
        "text_offset": 169,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107875000,
        "duration_milliseconds": 450,
        "text_offset": 173,
        "word_length": 7,
        "text": "discard",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112625000,
        "duration_milliseconds": 262,
        "text_offset": 181,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115500000,
        "duration_milliseconds": 112,
        "text_offset": 188,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116875000,
        "duration_milliseconds": 100,
        "text_offset": 193,
        "word_length": 3,
        "text": "are",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118125000,
        "duration_milliseconds": 237,
        "text_offset": 197,
        "word_length": 5,
        "text": "worse",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120750000,
        "duration_milliseconds": 125,
        "text_offset": 203,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122125000,
        "duration_milliseconds": 100,
        "text_offset": 208,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123250000,
        "duration_milliseconds": 262,
        "text_offset": 212,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126125000,
        "duration_milliseconds": 162,
        "text_offset": 217,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "duration_milliseconds": 162,
        "text_offset": 223,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129875000,
        "duration_milliseconds": 387,
        "text_offset": 226,
        "word_length": 3,
        "text": "far",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134000000,
        "duration_milliseconds": 100,
        "text_offset": 229,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-take-a-look-now-at-the-time-complexity-of-54a96426.mp3",
    "final_audio": "let-s-take-a-look-now-at-the-time-complexity-of-54a96426.mp3"
  },
  {
    "input_text": "That means the algorithm does not have to calculate every route untill the end. Still having to calculate every possible route makes the branch and bound method very time consuming. In the worst case the algorithm has to calculate every possible route untill the end and the time complexity is the same as the brute force method.",
    "input_data": {
      "input_text": "That means the algorithm does not have to calculate every route untill the end. Still having to calculate every possible route makes the branch and bound method very time consuming. In the worst case the algorithm has to calculate every possible route untill the end and the time complexity is the same as the brute force method.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">That means the algorithm does not have to calculate every route untill the end. Still having to calculate every possible route makes the branch and bound method very time consuming. In the worst case the algorithm has to calculate every possible route untill the end and the time complexity is the same as the brute force method.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">That means the algorithm does not have to calculate every route untill the end. Still having to calculate every possible route makes the branch and bound method very time consuming. In the worst case the algorithm has to calculate every possible route untill the end and the time complexity is the same as the brute force method.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 4,
        "text": "That",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 250,
        "text_offset": 5,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 112,
        "text_offset": 11,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 587,
        "text_offset": 15,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13375000,
        "duration_milliseconds": 175,
        "text_offset": 25,
        "word_length": 4,
        "text": "does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 187,
        "text_offset": 30,
        "word_length": 3,
        "text": "not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17375000,
        "duration_milliseconds": 162,
        "text_offset": 34,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19250000,
        "duration_milliseconds": 112,
        "text_offset": 39,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 587,
        "text_offset": 42,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26625000,
        "duration_milliseconds": 262,
        "text_offset": 52,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 237,
        "text_offset": 58,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 287,
        "text_offset": 64,
        "word_length": 6,
        "text": "untill",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 100,
        "text_offset": 71,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36125000,
        "duration_milliseconds": 412,
        "text_offset": 75,
        "word_length": 3,
        "text": "end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40500000,
        "duration_milliseconds": 100,
        "text_offset": 78,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 49000000,
        "duration_milliseconds": 325,
        "text_offset": 80,
        "word_length": 5,
        "text": "Still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52375000,
        "duration_milliseconds": 250,
        "text_offset": 86,
        "word_length": 6,
        "text": "having",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 87,
        "text_offset": 93,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56125000,
        "duration_milliseconds": 562,
        "text_offset": 96,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61875000,
        "duration_milliseconds": 237,
        "text_offset": 106,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64375000,
        "duration_milliseconds": 525,
        "text_offset": 112,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69875000,
        "duration_milliseconds": 200,
        "text_offset": 121,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72000000,
        "duration_milliseconds": 212,
        "text_offset": 127,
        "word_length": 5,
        "text": "makes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74375000,
        "duration_milliseconds": 112,
        "text_offset": 133,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75625000,
        "duration_milliseconds": 350,
        "text_offset": 137,
        "word_length": 6,
        "text": "branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79250000,
        "duration_milliseconds": 100,
        "text_offset": 144,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80500000,
        "duration_milliseconds": 262,
        "text_offset": 148,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83375000,
        "duration_milliseconds": 312,
        "text_offset": 154,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86750000,
        "duration_milliseconds": 250,
        "text_offset": 161,
        "word_length": 4,
        "text": "very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89500000,
        "duration_milliseconds": 262,
        "text_offset": 166,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92250000,
        "duration_milliseconds": 575,
        "text_offset": 171,
        "word_length": 9,
        "text": "consuming",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98250000,
        "duration_milliseconds": 100,
        "text_offset": 180,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 106875000,
        "duration_milliseconds": 162,
        "text_offset": 182,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108625000,
        "duration_milliseconds": 87,
        "text_offset": 185,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109750000,
        "duration_milliseconds": 262,
        "text_offset": 189,
        "word_length": 5,
        "text": "worst",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112625000,
        "duration_milliseconds": 262,
        "text_offset": 195,
        "word_length": 4,
        "text": "case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115500000,
        "duration_milliseconds": 112,
        "text_offset": 200,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116875000,
        "duration_milliseconds": 550,
        "text_offset": 204,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122625000,
        "duration_milliseconds": 175,
        "text_offset": 214,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124625000,
        "duration_milliseconds": 112,
        "text_offset": 218,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126000000,
        "duration_milliseconds": 550,
        "text_offset": 221,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131625000,
        "duration_milliseconds": 225,
        "text_offset": 231,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134000000,
        "duration_milliseconds": 512,
        "text_offset": 237,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 139375000,
        "duration_milliseconds": 225,
        "text_offset": 246,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 141750000,
        "duration_milliseconds": 262,
        "text_offset": 252,
        "word_length": 6,
        "text": "untill",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144500000,
        "duration_milliseconds": 100,
        "text_offset": 259,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145750000,
        "duration_milliseconds": 250,
        "text_offset": 263,
        "word_length": 3,
        "text": "end",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148375000,
        "duration_milliseconds": 62,
        "text_offset": 267,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149125000,
        "duration_milliseconds": 100,
        "text_offset": 271,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 150375000,
        "duration_milliseconds": 262,
        "text_offset": 275,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 153125000,
        "duration_milliseconds": 675,
        "text_offset": 280,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160125000,
        "duration_milliseconds": 112,
        "text_offset": 291,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 161375000,
        "duration_milliseconds": 112,
        "text_offset": 294,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 162750000,
        "duration_milliseconds": 287,
        "text_offset": 298,
        "word_length": 4,
        "text": "same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 165875000,
        "duration_milliseconds": 125,
        "text_offset": 303,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 167375000,
        "duration_milliseconds": 112,
        "text_offset": 306,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168625000,
        "duration_milliseconds": 225,
        "text_offset": 310,
        "word_length": 5,
        "text": "brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 171125000,
        "duration_milliseconds": 275,
        "text_offset": 316,
        "word_length": 5,
        "text": "force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 174000000,
        "duration_milliseconds": 425,
        "text_offset": 322,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178375000,
        "duration_milliseconds": 100,
        "text_offset": 328,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "that-means-the-algorithm-does-not-have-to-120d2d33.mp3",
    "final_audio": "that-means-the-algorithm-does-not-have-to-120d2d33.mp3"
  },
  {
    "input_text": "However the algorithm performs very well in practice and it is mostly better than the brute force method. For that reason the time complexity of the branch and bound method is mostly better then the brute force algorithm, but still exponential.",
    "input_data": {
      "input_text": "However the algorithm performs very well in practice and it is mostly better than the brute force method. For that reason the time complexity of the branch and bound method is mostly better then the brute force algorithm, but still exponential.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">However the algorithm performs very well in practice and it is mostly better than the brute force method. For that reason the time complexity of the branch and bound method is mostly better then the brute force algorithm, but still exponential.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">However the algorithm performs very well in practice and it is mostly better than the brute force method. For that reason the time complexity of the branch and bound method is mostly better then the brute force algorithm, but still exponential.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 400,
        "text_offset": 0,
        "word_length": 7,
        "text": "However",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 112,
        "text_offset": 8,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 587,
        "text_offset": 12,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 512,
        "text_offset": 22,
        "word_length": 8,
        "text": "performs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 250,
        "text_offset": 31,
        "word_length": 4,
        "text": "very",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 225,
        "text_offset": 36,
        "word_length": 4,
        "text": "well",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22875000,
        "duration_milliseconds": 100,
        "text_offset": 41,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24125000,
        "duration_milliseconds": 462,
        "text_offset": 44,
        "word_length": 8,
        "text": "practice",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28875000,
        "duration_milliseconds": 162,
        "text_offset": 53,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30750000,
        "duration_milliseconds": 87,
        "text_offset": 57,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 112,
        "text_offset": 60,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 375,
        "text_offset": 63,
        "word_length": 6,
        "text": "mostly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 300,
        "text_offset": 70,
        "word_length": 6,
        "text": "better",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40125000,
        "duration_milliseconds": 125,
        "text_offset": 77,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41625000,
        "duration_milliseconds": 100,
        "text_offset": 82,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42750000,
        "duration_milliseconds": 225,
        "text_offset": 86,
        "word_length": 5,
        "text": "brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45250000,
        "duration_milliseconds": 262,
        "text_offset": 92,
        "word_length": 5,
        "text": "force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "duration_milliseconds": 450,
        "text_offset": 98,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52625000,
        "duration_milliseconds": 100,
        "text_offset": 104,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 61250000,
        "duration_milliseconds": 175,
        "text_offset": 106,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63250000,
        "duration_milliseconds": 200,
        "text_offset": 110,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65375000,
        "duration_milliseconds": 275,
        "text_offset": 115,
        "word_length": 6,
        "text": "reason",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68375000,
        "duration_milliseconds": 100,
        "text_offset": 122,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69625000,
        "duration_milliseconds": 262,
        "text_offset": 126,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72375000,
        "duration_milliseconds": 650,
        "text_offset": 131,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79125000,
        "duration_milliseconds": 62,
        "text_offset": 142,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80000000,
        "duration_milliseconds": 112,
        "text_offset": 145,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81375000,
        "duration_milliseconds": 325,
        "text_offset": 149,
        "word_length": 6,
        "text": "branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84750000,
        "duration_milliseconds": 100,
        "text_offset": 156,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86000000,
        "duration_milliseconds": 250,
        "text_offset": 160,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88750000,
        "duration_milliseconds": 300,
        "text_offset": 166,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92000000,
        "duration_milliseconds": 125,
        "text_offset": 173,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93375000,
        "duration_milliseconds": 350,
        "text_offset": 176,
        "word_length": 6,
        "text": "mostly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97000000,
        "duration_milliseconds": 287,
        "text_offset": 183,
        "word_length": 6,
        "text": "better",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100125000,
        "duration_milliseconds": 150,
        "text_offset": 190,
        "word_length": 4,
        "text": "then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101875000,
        "duration_milliseconds": 100,
        "text_offset": 195,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103000000,
        "duration_milliseconds": 225,
        "text_offset": 199,
        "word_length": 5,
        "text": "brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105500000,
        "duration_milliseconds": 275,
        "text_offset": 205,
        "word_length": 5,
        "text": "force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108500000,
        "duration_milliseconds": 562,
        "text_offset": 211,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115125000,
        "duration_milliseconds": 150,
        "text_offset": 220,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 116625000,
        "duration_milliseconds": 137,
        "text_offset": 222,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118250000,
        "duration_milliseconds": 275,
        "text_offset": 226,
        "word_length": 5,
        "text": "still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121125000,
        "duration_milliseconds": 775,
        "text_offset": 232,
        "word_length": 11,
        "text": "exponential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129125000,
        "duration_milliseconds": 100,
        "text_offset": 243,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "however-the-algorithm-performs-very-well-in-051666bf.mp3",
    "final_audio": "however-the-algorithm-performs-very-well-in-051666bf.mp3"
  },
  {
    "input_text": "We need to point out how good is our approximated solution compared to the optimum. In some business cases there is a treshold given by the supervisor so you don't need to know how near the solution is to the optimum but in a theroetic case we want to know this. As we know to determine the optimum is not economically sensible so we need to find an other value to measure our solution.",
    "input_data": {
      "input_text": "We need to point out how good is our approximated solution compared to the optimum. In some business cases there is a treshold given by the supervisor so you don't need to know how near the solution is to the optimum but in a theroetic case we want to know this. As we know to determine the optimum is not economically sensible so we need to find an other value to measure our solution.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We need to point out how good is our approximated solution compared to the optimum. In some business cases there is a treshold given by the supervisor so you don't need to know how near the solution is to the optimum but in a theroetic case we want to know this. As we know to determine the optimum is not economically sensible so we need to find an other value to measure our solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We need to point out how good is our approximated solution compared to the optimum. In some business cases there is a treshold given by the supervisor so you don't need to know how near the solution is to the optimum but in a theroetic case we want to know this. As we know to determine the optimum is not economically sensible so we need to find an other value to measure our solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 150,
        "text_offset": 3,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 87,
        "text_offset": 8,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 237,
        "text_offset": 11,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7875000,
        "duration_milliseconds": 162,
        "text_offset": 17,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9750000,
        "duration_milliseconds": 150,
        "text_offset": 21,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 225,
        "text_offset": 25,
        "word_length": 4,
        "text": "good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14000000,
        "duration_milliseconds": 137,
        "text_offset": 30,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15625000,
        "duration_milliseconds": 125,
        "text_offset": 33,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17000000,
        "duration_milliseconds": 725,
        "text_offset": 37,
        "word_length": 12,
        "text": "approximated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "duration_milliseconds": 462,
        "text_offset": 50,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 400,
        "text_offset": 59,
        "word_length": 8,
        "text": "compared",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 75,
        "text_offset": 68,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34500000,
        "duration_milliseconds": 125,
        "text_offset": 71,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36000000,
        "duration_milliseconds": 487,
        "text_offset": 75,
        "word_length": 7,
        "text": "optimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41125000,
        "duration_milliseconds": 100,
        "text_offset": 82,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 49750000,
        "duration_milliseconds": 187,
        "text_offset": 84,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51875000,
        "duration_milliseconds": 225,
        "text_offset": 87,
        "word_length": 4,
        "text": "some",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54375000,
        "duration_milliseconds": 375,
        "text_offset": 92,
        "word_length": 8,
        "text": "business",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58375000,
        "duration_milliseconds": 400,
        "text_offset": 101,
        "word_length": 5,
        "text": "cases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62625000,
        "duration_milliseconds": 162,
        "text_offset": 107,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64375000,
        "duration_milliseconds": 100,
        "text_offset": 113,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65625000,
        "duration_milliseconds": 62,
        "text_offset": 116,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66500000,
        "duration_milliseconds": 475,
        "text_offset": 118,
        "word_length": 8,
        "text": "treshold",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71500000,
        "duration_milliseconds": 287,
        "text_offset": 127,
        "word_length": 5,
        "text": "given",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74625000,
        "duration_milliseconds": 112,
        "text_offset": 133,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75875000,
        "duration_milliseconds": 100,
        "text_offset": 136,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77125000,
        "duration_milliseconds": 700,
        "text_offset": 140,
        "word_length": 10,
        "text": "supervisor",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84375000,
        "duration_milliseconds": 100,
        "text_offset": 151,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85500000,
        "duration_milliseconds": 100,
        "text_offset": 154,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86750000,
        "duration_milliseconds": 200,
        "text_offset": 158,
        "word_length": 5,
        "text": "don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88875000,
        "duration_milliseconds": 137,
        "text_offset": 164,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90375000,
        "duration_milliseconds": 75,
        "text_offset": 169,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91250000,
        "duration_milliseconds": 150,
        "text_offset": 172,
        "word_length": 4,
        "text": "know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92875000,
        "duration_milliseconds": 150,
        "text_offset": 177,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94625000,
        "duration_milliseconds": 212,
        "text_offset": 181,
        "word_length": 4,
        "text": "near",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97000000,
        "duration_milliseconds": 100,
        "text_offset": 186,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98125000,
        "duration_milliseconds": 437,
        "text_offset": 190,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102625000,
        "duration_milliseconds": 125,
        "text_offset": 199,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104125000,
        "duration_milliseconds": 87,
        "text_offset": 202,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105250000,
        "duration_milliseconds": 112,
        "text_offset": 205,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106625000,
        "duration_milliseconds": 462,
        "text_offset": 209,
        "word_length": 7,
        "text": "optimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111500000,
        "duration_milliseconds": 150,
        "text_offset": 217,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113125000,
        "duration_milliseconds": 100,
        "text_offset": 221,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114375000,
        "duration_milliseconds": 50,
        "text_offset": 224,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115125000,
        "duration_milliseconds": 525,
        "text_offset": 226,
        "word_length": 9,
        "text": "theroetic",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 120625000,
        "duration_milliseconds": 287,
        "text_offset": 236,
        "word_length": 4,
        "text": "case",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123625000,
        "duration_milliseconds": 100,
        "text_offset": 241,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124750000,
        "duration_milliseconds": 200,
        "text_offset": 244,
        "word_length": 4,
        "text": "want",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 126875000,
        "duration_milliseconds": 62,
        "text_offset": 249,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127625000,
        "duration_milliseconds": 162,
        "text_offset": 252,
        "word_length": 4,
        "text": "know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 129375000,
        "duration_milliseconds": 337,
        "text_offset": 257,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133000000,
        "duration_milliseconds": 100,
        "text_offset": 261,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 141625000,
        "duration_milliseconds": 200,
        "text_offset": 263,
        "word_length": 2,
        "text": "As",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 143875000,
        "duration_milliseconds": 112,
        "text_offset": 266,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145250000,
        "duration_milliseconds": 150,
        "text_offset": 269,
        "word_length": 4,
        "text": "know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 146875000,
        "duration_milliseconds": 100,
        "text_offset": 274,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 148000000,
        "duration_milliseconds": 462,
        "text_offset": 277,
        "word_length": 9,
        "text": "determine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152875000,
        "duration_milliseconds": 112,
        "text_offset": 287,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 154250000,
        "duration_milliseconds": 462,
        "text_offset": 291,
        "word_length": 7,
        "text": "optimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 159000000,
        "duration_milliseconds": 125,
        "text_offset": 299,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160500000,
        "duration_milliseconds": 225,
        "text_offset": 302,
        "word_length": 3,
        "text": "not",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 162875000,
        "duration_milliseconds": 700,
        "text_offset": 306,
        "word_length": 12,
        "text": "economically",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 170125000,
        "duration_milliseconds": 550,
        "text_offset": 319,
        "word_length": 8,
        "text": "sensible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175875000,
        "duration_milliseconds": 112,
        "text_offset": 328,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177250000,
        "duration_milliseconds": 100,
        "text_offset": 331,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178500000,
        "duration_milliseconds": 150,
        "text_offset": 334,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 180125000,
        "duration_milliseconds": 75,
        "text_offset": 339,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 181000000,
        "duration_milliseconds": 262,
        "text_offset": 342,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 183750000,
        "duration_milliseconds": 100,
        "text_offset": 347,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 185000000,
        "duration_milliseconds": 237,
        "text_offset": 350,
        "word_length": 5,
        "text": "other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 187625000,
        "duration_milliseconds": 362,
        "text_offset": 356,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 191500000,
        "duration_milliseconds": 100,
        "text_offset": 362,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 192625000,
        "duration_milliseconds": 325,
        "text_offset": 365,
        "word_length": 7,
        "text": "measure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 196125000,
        "duration_milliseconds": 112,
        "text_offset": 373,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 197500000,
        "duration_milliseconds": 550,
        "text_offset": 377,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 203250000,
        "duration_milliseconds": 100,
        "text_offset": 385,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-need-to-point-out-how-good-is-our-approximated-cbdb01d9.mp3",
    "final_audio": "we-need-to-point-out-how-good-is-our-approximated-cbdb01d9.mp3"
  },
  {
    "input_text": "So lets imagine we have these nodes as a tsp",
    "input_data": {
      "input_text": "So lets imagine we have these nodes as a tsp",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">So lets imagine we have these nodes as a tsp</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">So lets imagine we have these nodes as a tsp</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 2,
        "text": "So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 200,
        "text_offset": 3,
        "word_length": 4,
        "text": "lets",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 450,
        "text_offset": 8,
        "word_length": 7,
        "text": "imagine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9750000,
        "duration_milliseconds": 125,
        "text_offset": 16,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 225,
        "text_offset": 19,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13750000,
        "duration_milliseconds": 187,
        "text_offset": 24,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 325,
        "text_offset": 30,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19375000,
        "duration_milliseconds": 125,
        "text_offset": 36,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 62,
        "text_offset": 39,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21750000,
        "duration_milliseconds": 737,
        "text_offset": 41,
        "word_length": 3,
        "text": "tsp",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "so-lets-imagine-we-have-these-nodes-as-a-tsp-4c148834.mp3",
    "final_audio": "so-lets-imagine-we-have-these-nodes-as-a-tsp-4c148834.mp3"
  },
  {
    "input_text": "and this is our approximated solution.",
    "input_data": {
      "input_text": "and this is our approximated solution.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">and this is our approximated solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">and this is our approximated solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 225,
        "text_offset": 4,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 162,
        "text_offset": 9,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 175,
        "text_offset": 12,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8625000,
        "duration_milliseconds": 787,
        "text_offset": 16,
        "word_length": 12,
        "text": "approximated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 600,
        "text_offset": 29,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22875000,
        "duration_milliseconds": 100,
        "text_offset": 37,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "and-this-is-our-approximated-solution-3ffadfe9.mp3",
    "final_audio": "and-this-is-our-approximated-solution-3ffadfe9.mp3"
  },
  {
    "input_text": "We take a look at all the weights and sum them up.",
    "input_data": {
      "input_text": "We take a look at all the weights and sum them up.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We take a look at all the weights and sum them up.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We take a look at all the weights and sum them up.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 200,
        "text_offset": 3,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 62,
        "text_offset": 8,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 237,
        "text_offset": 10,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7875000,
        "duration_milliseconds": 87,
        "text_offset": 15,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9000000,
        "duration_milliseconds": 150,
        "text_offset": 18,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10750000,
        "duration_milliseconds": 100,
        "text_offset": 22,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 312,
        "text_offset": 26,
        "word_length": 7,
        "text": "weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15125000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16500000,
        "duration_milliseconds": 200,
        "text_offset": 38,
        "word_length": 3,
        "text": "sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 137,
        "text_offset": 42,
        "word_length": 4,
        "text": "them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 262,
        "text_offset": 47,
        "word_length": 2,
        "text": "up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 100,
        "text_offset": 49,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-take-a-look-at-all-the-weights-and-sum-them-up-ffb8b391.mp3",
    "final_audio": "we-take-a-look-at-all-the-weights-and-sum-them-up-ffb8b391.mp3"
  },
  {
    "input_text": "This is the value for our approximated solution.",
    "input_data": {
      "input_text": "This is the value for our approximated solution.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is the value for our approximated solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is the value for our approximated solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 137,
        "text_offset": 5,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 100,
        "text_offset": 8,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6250000,
        "duration_milliseconds": 400,
        "text_offset": 12,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 200,
        "text_offset": 18,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 137,
        "text_offset": 22,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 787,
        "text_offset": 26,
        "word_length": 12,
        "text": "approximated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 587,
        "text_offset": 39,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28375000,
        "duration_milliseconds": 100,
        "text_offset": 47,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-is-the-value-for-our-approximated-solution-a4b8d73a.mp3",
    "final_audio": "this-is-the-value-for-our-approximated-solution-a4b8d73a.mp3"
  },
  {
    "input_text": "But now we still don't now how good this is compared to the optimum.",
    "input_data": {
      "input_text": "But now we still don't now how good this is compared to the optimum.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">But now we still don't now how good this is compared to the optimum.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">But now we still don't now how good this is compared to the optimum.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 150,
        "text_offset": 4,
        "word_length": 3,
        "text": "now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 137,
        "text_offset": 8,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5750000,
        "duration_milliseconds": 262,
        "text_offset": 11,
        "word_length": 5,
        "text": "still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 187,
        "text_offset": 17,
        "word_length": 5,
        "text": "don't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 162,
        "text_offset": 23,
        "word_length": 3,
        "text": "now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 187,
        "text_offset": 27,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 225,
        "text_offset": 31,
        "word_length": 4,
        "text": "good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16875000,
        "duration_milliseconds": 175,
        "text_offset": 36,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 125,
        "text_offset": 41,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20125000,
        "duration_milliseconds": 412,
        "text_offset": 44,
        "word_length": 8,
        "text": "compared",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24375000,
        "duration_milliseconds": 75,
        "text_offset": 53,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25375000,
        "duration_milliseconds": 112,
        "text_offset": 56,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26750000,
        "duration_milliseconds": 487,
        "text_offset": 60,
        "word_length": 7,
        "text": "optimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 100,
        "text_offset": 67,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "but-now-we-still-don-t-now-how-good-this-is-6d2d6ffe.mp3",
    "final_audio": "but-now-we-still-don-t-now-how-good-this-is-6d2d6ffe.mp3"
  },
  {
    "input_text": "For this we use the lower bound.",
    "input_data": {
      "input_text": "For this we use the lower bound.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For this we use the lower bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">For this we use the lower bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 212,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 212,
        "text_offset": 4,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5125000,
        "duration_milliseconds": 125,
        "text_offset": 9,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 262,
        "text_offset": 12,
        "word_length": 3,
        "text": "use",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 112,
        "text_offset": 16,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 312,
        "text_offset": 20,
        "word_length": 5,
        "text": "lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 475,
        "text_offset": 26,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19250000,
        "duration_milliseconds": 100,
        "text_offset": 31,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-this-we-use-the-lower-bound-448c5c17.mp3",
    "final_audio": "for-this-we-use-the-lower-bound-448c5c17.mp3"
  },
  {
    "input_text": "The lower bound is the value of the sum of every weight of every edge in a minimum spanning tree.",
    "input_data": {
      "input_text": "The lower bound is the value of the sum of every weight of every edge in a minimum spanning tree.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The lower bound is the value of the sum of every weight of every edge in a minimum spanning tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">The lower bound is the value of the sum of every weight of every edge in a minimum spanning tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 300,
        "text_offset": 4,
        "word_length": 5,
        "text": "lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 337,
        "text_offset": 10,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8875000,
        "duration_milliseconds": 112,
        "text_offset": 16,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 100,
        "text_offset": 19,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 375,
        "text_offset": 23,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15500000,
        "duration_milliseconds": 87,
        "text_offset": 29,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16625000,
        "duration_milliseconds": 100,
        "text_offset": 32,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17875000,
        "duration_milliseconds": 200,
        "text_offset": 36,
        "word_length": 3,
        "text": "sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "duration_milliseconds": 100,
        "text_offset": 40,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 237,
        "text_offset": 43,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 212,
        "text_offset": 49,
        "word_length": 6,
        "text": "weight",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26125000,
        "duration_milliseconds": 87,
        "text_offset": 56,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 250,
        "text_offset": 59,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29875000,
        "duration_milliseconds": 225,
        "text_offset": 65,
        "word_length": 4,
        "text": "edge",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32375000,
        "duration_milliseconds": 100,
        "text_offset": 70,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 50,
        "text_offset": 73,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34375000,
        "duration_milliseconds": 375,
        "text_offset": 75,
        "word_length": 7,
        "text": "minimum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38375000,
        "duration_milliseconds": 375,
        "text_offset": 83,
        "word_length": 8,
        "text": "spanning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42250000,
        "duration_milliseconds": 337,
        "text_offset": 92,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 100,
        "text_offset": 96,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-lower-bound-is-the-value-of-the-sum-of-every-9d214c4c.mp3",
    "final_audio": "the-lower-bound-is-the-value-of-the-sum-of-every-9d214c4c.mp3"
  },
  {
    "input_text": "So imagine we have these nodes from before.",
    "input_data": {
      "input_text": "So imagine we have these nodes from before.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">So imagine we have these nodes from before.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">So imagine we have these nodes from before.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 250,
        "text_offset": 0,
        "word_length": 2,
        "text": "So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3250000,
        "duration_milliseconds": 450,
        "text_offset": 3,
        "word_length": 7,
        "text": "imagine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 125,
        "text_offset": 11,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 212,
        "text_offset": 14,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 187,
        "text_offset": 19,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14000000,
        "duration_milliseconds": 287,
        "text_offset": 25,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17125000,
        "duration_milliseconds": 175,
        "text_offset": 31,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19000000,
        "duration_milliseconds": 562,
        "text_offset": 36,
        "word_length": 6,
        "text": "before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24875000,
        "duration_milliseconds": 100,
        "text_offset": 42,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "so-imagine-we-have-these-nodes-from-before-9c6df581.mp3",
    "final_audio": "so-imagine-we-have-these-nodes-from-before-9c6df581.mp3"
  },
  {
    "input_text": "We add the edges and their weights to the nodes so we get our minimal spanning tree.",
    "input_data": {
      "input_text": "We add the edges and their weights to the nodes so we get our minimal spanning tree.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We add the edges and their weights to the nodes so we get our minimal spanning tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We add the edges and their weights to the nodes so we get our minimal spanning tree.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 200,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2750000,
        "duration_milliseconds": 175,
        "text_offset": 3,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 100,
        "text_offset": 7,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 387,
        "text_offset": 11,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 87,
        "text_offset": 17,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 150,
        "text_offset": 21,
        "word_length": 5,
        "text": "their",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "duration_milliseconds": 237,
        "text_offset": 27,
        "word_length": 7,
        "text": "weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15500000,
        "duration_milliseconds": 87,
        "text_offset": 35,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16625000,
        "duration_milliseconds": 100,
        "text_offset": 38,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17750000,
        "duration_milliseconds": 325,
        "text_offset": 42,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 112,
        "text_offset": 48,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22625000,
        "duration_milliseconds": 125,
        "text_offset": 51,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24000000,
        "duration_milliseconds": 187,
        "text_offset": 54,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26125000,
        "duration_milliseconds": 112,
        "text_offset": 58,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27375000,
        "duration_milliseconds": 362,
        "text_offset": 62,
        "word_length": 7,
        "text": "minimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31250000,
        "duration_milliseconds": 400,
        "text_offset": 70,
        "word_length": 8,
        "text": "spanning",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35500000,
        "duration_milliseconds": 337,
        "text_offset": 79,
        "word_length": 4,
        "text": "tree",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39125000,
        "duration_milliseconds": 100,
        "text_offset": 83,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-add-the-edges-and-their-weights-to-the-nodes-so-9d3190d6.mp3",
    "final_audio": "we-add-the-edges-and-their-weights-to-the-nodes-so-9d3190d6.mp3"
  },
  {
    "input_text": "We take again a look at all the weights and sum them up.",
    "input_data": {
      "input_text": "We take again a look at all the weights and sum them up.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We take again a look at all the weights and sum them up.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">We take again a look at all the weights and sum them up.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 200,
        "text_offset": 3,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 275,
        "text_offset": 8,
        "word_length": 5,
        "text": "again",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 62,
        "text_offset": 14,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 212,
        "text_offset": 16,
        "word_length": 4,
        "text": "look",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10875000,
        "duration_milliseconds": 87,
        "text_offset": 21,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 137,
        "text_offset": 24,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 100,
        "text_offset": 28,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 312,
        "text_offset": 32,
        "word_length": 7,
        "text": "weights",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "duration_milliseconds": 112,
        "text_offset": 40,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19375000,
        "duration_milliseconds": 200,
        "text_offset": 44,
        "word_length": 3,
        "text": "sum",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 137,
        "text_offset": 48,
        "word_length": 4,
        "text": "them",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 262,
        "text_offset": 53,
        "word_length": 2,
        "text": "up",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 100,
        "text_offset": 55,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-take-again-a-look-at-all-the-weights-and-sum-a227a4b0.mp3",
    "final_audio": "we-take-again-a-look-at-all-the-weights-and-sum-a227a4b0.mp3"
  },
  {
    "input_text": "This is the value of our lower bound.",
    "input_data": {
      "input_text": "This is the value of our lower bound.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is the value of our lower bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is the value of our lower bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 125,
        "text_offset": 5,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 100,
        "text_offset": 8,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 425,
        "text_offset": 12,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 112,
        "text_offset": 18,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 150,
        "text_offset": 21,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 325,
        "text_offset": 25,
        "word_length": 5,
        "text": "lower",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17125000,
        "duration_milliseconds": 462,
        "text_offset": 31,
        "word_length": 5,
        "text": "bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22000000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-is-the-value-of-our-lower-bound-c74de0d4.mp3",
    "final_audio": "this-is-the-value-of-our-lower-bound-c74de0d4.mp3"
  },
  {
    "input_text": "Now we have a value which we can compare to our approximated solution and we know how good it is!",
    "input_data": {
      "input_text": "Now we have a value which we can compare to our approximated solution and we know how good it is!",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we have a value which we can compare to our approximated solution and we know how good it is!</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we have a value which we can compare to our approximated solution and we know how good it is!</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4375000,
        "duration_milliseconds": 150,
        "text_offset": 7,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 62,
        "text_offset": 12,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 387,
        "text_offset": 14,
        "word_length": 5,
        "text": "value",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 175,
        "text_offset": 20,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 125,
        "text_offset": 26,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 150,
        "text_offset": 29,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 375,
        "text_offset": 33,
        "word_length": 7,
        "text": "compare",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20125000,
        "duration_milliseconds": 125,
        "text_offset": 41,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 137,
        "text_offset": 44,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 700,
        "text_offset": 48,
        "word_length": 12,
        "text": "approximated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30375000,
        "duration_milliseconds": 450,
        "text_offset": 61,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35125000,
        "duration_milliseconds": 100,
        "text_offset": 70,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36375000,
        "duration_milliseconds": 112,
        "text_offset": 74,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 162,
        "text_offset": 77,
        "word_length": 4,
        "text": "know",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 162,
        "text_offset": 82,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41375000,
        "duration_milliseconds": 162,
        "text_offset": 86,
        "word_length": 4,
        "text": "good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43250000,
        "duration_milliseconds": 87,
        "text_offset": 91,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44375000,
        "duration_milliseconds": 325,
        "text_offset": 94,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47875000,
        "duration_milliseconds": 100,
        "text_offset": 96,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-have-a-value-which-we-can-compare-to-our-c93ccf40.mp3",
    "final_audio": "now-we-have-a-value-which-we-can-compare-to-our-c93ccf40.mp3"
  },
  {
    "input_text": "Now we go on with the next topic",
    "input_data": {
      "input_text": "Now we go on with the next topic",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we go on with the next topic</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Now we go on with the next topic</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 137,
        "text_offset": 4,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 250,
        "text_offset": 7,
        "word_length": 2,
        "text": "go",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 125,
        "text_offset": 13,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 87,
        "text_offset": 18,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12000000,
        "duration_milliseconds": 250,
        "text_offset": 22,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 437,
        "text_offset": 27,
        "word_length": 5,
        "text": "topic",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "now-we-go-on-with-the-next-topic-a0c0909b.mp3",
    "final_audio": "now-we-go-on-with-the-next-topic-a0c0909b.mp3"
  },
  {
    "input_text": "In the following we will explain the christofides algorithm.",
    "input_data": {
      "input_text": "In the following we will explain the christofides algorithm.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">In the following we will explain the christofides algorithm.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">In the following we will explain the christofides algorithm.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3625000,
        "duration_milliseconds": 450,
        "text_offset": 7,
        "word_length": 9,
        "text": "following",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8375000,
        "duration_milliseconds": 125,
        "text_offset": 17,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 137,
        "text_offset": 20,
        "word_length": 4,
        "text": "will",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 412,
        "text_offset": 25,
        "word_length": 7,
        "text": "explain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 112,
        "text_offset": 33,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 875,
        "text_offset": 37,
        "word_length": 12,
        "text": "christofides",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26250000,
        "duration_milliseconds": 650,
        "text_offset": 50,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32875000,
        "duration_milliseconds": 100,
        "text_offset": 59,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "in-the-following-we-will-explain-the-christofides-58294570.mp3",
    "final_audio": "in-the-following-we-will-explain-the-christofides-58294570.mp3"
  },
  {
    "input_text": "This is an approximated algorithm to solve the TSP with a n to the third power complexity. This algorithm guarantees a solution that is at most fifthy percent longer than the optimal round trip.",
    "input_data": {
      "input_text": "This is an approximated algorithm to solve the TSP with a n to the third power complexity. This algorithm guarantees a solution that is at most fifthy percent longer than the optimal round trip.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is an approximated algorithm to solve the TSP with a n to the third power complexity. This algorithm guarantees a solution that is at most fifthy percent longer than the optimal round trip.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This is an approximated algorithm to solve the TSP with a n to the third power complexity. This algorithm guarantees a solution that is at most fifthy percent longer than the optimal round trip.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 112,
        "text_offset": 5,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4375000,
        "duration_milliseconds": 87,
        "text_offset": 8,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5500000,
        "duration_milliseconds": 762,
        "text_offset": 11,
        "word_length": 12,
        "text": "approximated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13375000,
        "duration_milliseconds": 562,
        "text_offset": 24,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19250000,
        "duration_milliseconds": 100,
        "text_offset": 34,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 300,
        "text_offset": 37,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 100,
        "text_offset": 43,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24750000,
        "duration_milliseconds": 562,
        "text_offset": 47,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30500000,
        "duration_milliseconds": 162,
        "text_offset": 51,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32375000,
        "duration_milliseconds": 112,
        "text_offset": 56,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33750000,
        "duration_milliseconds": 200,
        "text_offset": 58,
        "word_length": 1,
        "text": "n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36000000,
        "duration_milliseconds": 100,
        "text_offset": 60,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37125000,
        "duration_milliseconds": 112,
        "text_offset": 63,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38500000,
        "duration_milliseconds": 262,
        "text_offset": 67,
        "word_length": 5,
        "text": "third",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41250000,
        "duration_milliseconds": 287,
        "text_offset": 73,
        "word_length": 5,
        "text": "power",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44375000,
        "duration_milliseconds": 812,
        "text_offset": 79,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52750000,
        "duration_milliseconds": 100,
        "text_offset": 89,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 61375000,
        "duration_milliseconds": 225,
        "text_offset": 91,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63875000,
        "duration_milliseconds": 562,
        "text_offset": 96,
        "word_length": 9,
        "text": "algorithm",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69750000,
        "duration_milliseconds": 525,
        "text_offset": 106,
        "word_length": 10,
        "text": "guarantees",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75250000,
        "duration_milliseconds": 62,
        "text_offset": 117,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76125000,
        "duration_milliseconds": 475,
        "text_offset": 119,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 81125000,
        "duration_milliseconds": 125,
        "text_offset": 128,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82500000,
        "duration_milliseconds": 112,
        "text_offset": 133,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83875000,
        "duration_milliseconds": 100,
        "text_offset": 136,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85125000,
        "duration_milliseconds": 275,
        "text_offset": 139,
        "word_length": 4,
        "text": "most",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88125000,
        "duration_milliseconds": 300,
        "text_offset": 144,
        "word_length": 6,
        "text": "fifthy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91375000,
        "duration_milliseconds": 425,
        "text_offset": 151,
        "word_length": 7,
        "text": "percent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95750000,
        "duration_milliseconds": 337,
        "text_offset": 159,
        "word_length": 6,
        "text": "longer",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99250000,
        "duration_milliseconds": 125,
        "text_offset": 166,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100750000,
        "duration_milliseconds": 112,
        "text_offset": 171,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102125000,
        "duration_milliseconds": 437,
        "text_offset": 175,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106625000,
        "duration_milliseconds": 225,
        "text_offset": 183,
        "word_length": 5,
        "text": "round",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109000000,
        "duration_milliseconds": 312,
        "text_offset": 189,
        "word_length": 4,
        "text": "trip",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112250000,
        "duration_milliseconds": 100,
        "text_offset": 193,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-is-an-approximated-algorithm-to-solve-the-tsp-40363e50.mp3",
    "final_audio": "this-is-an-approximated-algorithm-to-solve-the-tsp-40363e50.mp3"
  },
  {
    "input_text": "Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.",
    "input_data": {
      "input_text": "Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 450,
        "text_offset": 0,
        "word_length": 7,
        "text": "Welcome",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 262,
        "text_offset": 8,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8125000,
        "duration_milliseconds": 487,
        "text_offset": 13,
        "word_length": 4,
        "text": "guys",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 100,
        "text_offset": 17,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 21750000,
        "duration_milliseconds": 412,
        "text_offset": 19,
        "word_length": 5,
        "text": "Today",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26875000,
        "duration_milliseconds": 125,
        "text_offset": 24,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 28125000,
        "duration_milliseconds": 137,
        "text_offset": 26,
        "word_length": 5,
        "text": "we're",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 375,
        "text_offset": 32,
        "word_length": 6,
        "text": "diving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 150,
        "text_offset": 39,
        "word_length": 4,
        "text": "into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 112,
        "text_offset": 44,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36750000,
        "duration_milliseconds": 425,
        "text_offset": 48,
        "word_length": 9,
        "text": "Traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41250000,
        "duration_milliseconds": 712,
        "text_offset": 58,
        "word_length": 11,
        "text": "Salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 450,
        "text_offset": 70,
        "word_length": 7,
        "text": "Problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53250000,
        "duration_milliseconds": 100,
        "text_offset": 77,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "welcome-back-guys-today-we-re-diving-into-the-d4a4871f.mp3",
    "final_audio": "welcome-back-guys-today-we-re-diving-into-the-d4a4871f.mp3"
  },
  {
    "input_text": "Imagine we have a traveling salesperson - tasked with selling your products in various cities.",
    "input_data": {
      "input_text": "Imagine we have a traveling salesperson - tasked with selling your products in various cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Imagine we have a traveling salesperson - tasked with selling your products in various cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Imagine we have a traveling salesperson - tasked with selling your products in various cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 512,
        "text_offset": 0,
        "word_length": 7,
        "text": "Imagine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 112,
        "text_offset": 8,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 137,
        "text_offset": 11,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 62,
        "text_offset": 16,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 425,
        "text_offset": 18,
        "word_length": 9,
        "text": "traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13875000,
        "duration_milliseconds": 712,
        "text_offset": 28,
        "word_length": 11,
        "text": "salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 350,
        "text_offset": 42,
        "word_length": 6,
        "text": "tasked",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25875000,
        "duration_milliseconds": 112,
        "text_offset": 49,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 312,
        "text_offset": 54,
        "word_length": 7,
        "text": "selling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 137,
        "text_offset": 62,
        "word_length": 4,
        "text": "your",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32250000,
        "duration_milliseconds": 437,
        "text_offset": 67,
        "word_length": 8,
        "text": "products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36875000,
        "duration_milliseconds": 125,
        "text_offset": 76,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38375000,
        "duration_milliseconds": 375,
        "text_offset": 79,
        "word_length": 7,
        "text": "various",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 450,
        "text_offset": 87,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47125000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "imagine-we-have-a-traveling-salesperson-tasked-0830d9fe.mp3",
    "final_audio": "imagine-we-have-a-traveling-salesperson-tasked-0830d9fe.mp3"
  },
  {
    "input_text": "This guy is Alex, a salesperson with a big challenge.",
    "input_data": {
      "input_text": "This guy is Alex, a salesperson with a big challenge.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This guy is Alex, a salesperson with a big challenge.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">This guy is Alex, a salesperson with a big challenge.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 175,
        "text_offset": 5,
        "word_length": 3,
        "text": "guy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 150,
        "text_offset": 9,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 362,
        "text_offset": 12,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 62,
        "text_offset": 16,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 62,
        "text_offset": 18,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 712,
        "text_offset": 20,
        "word_length": 11,
        "text": "salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "duration_milliseconds": 137,
        "text_offset": 32,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 62,
        "text_offset": 37,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 200,
        "text_offset": 39,
        "word_length": 3,
        "text": "big",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24625000,
        "duration_milliseconds": 550,
        "text_offset": 43,
        "word_length": 9,
        "text": "challenge",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 100,
        "text_offset": 52,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-guy-is-alex-a-salesperson-with-a-big-339dcb93.mp3",
    "final_audio": "this-guy-is-alex-a-salesperson-with-a-big-339dcb93.mp3"
  },
  {
    "input_text": "Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.",
    "input_data": {
      "input_text": "Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural\">\n        <mstts:express-as style=\"newscast-casual\">Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 375,
        "text_offset": 0,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 175,
        "text_offset": 5,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 87,
        "text_offset": 9,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 237,
        "text_offset": 12,
        "word_length": 4,
        "text": "sell",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 425,
        "text_offset": 17,
        "word_length": 8,
        "text": "products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 112,
        "text_offset": 26,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 375,
        "text_offset": 29,
        "word_length": 7,
        "text": "various",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20125000,
        "duration_milliseconds": 337,
        "text_offset": 37,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 100,
        "text_offset": 44,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24875000,
        "duration_milliseconds": 237,
        "text_offset": 48,
        "word_length": 5,
        "text": "wants",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27500000,
        "duration_milliseconds": 87,
        "text_offset": 54,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 200,
        "text_offset": 57,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30875000,
        "duration_milliseconds": 87,
        "text_offset": 62,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 437,
        "text_offset": 66,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36500000,
        "duration_milliseconds": 175,
        "text_offset": 75,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38500000,
        "duration_milliseconds": 100,
        "text_offset": 81,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39625000,
        "duration_milliseconds": 262,
        "text_offset": 84,
        "word_length": 4,
        "text": "save",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 375,
        "text_offset": 89,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46375000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 150,
        "text_offset": 95,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56750000,
        "duration_milliseconds": 125,
        "text_offset": 99,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58125000,
        "duration_milliseconds": 200,
        "text_offset": 103,
        "word_length": 4,
        "text": "does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60375000,
        "duration_milliseconds": 375,
        "text_offset": 108,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64375000,
        "duration_milliseconds": 362,
        "text_offset": 113,
        "word_length": 6,
        "text": "figure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68250000,
        "duration_milliseconds": 125,
        "text_offset": 120,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69750000,
        "duration_milliseconds": 100,
        "text_offset": 124,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70875000,
        "duration_milliseconds": 250,
        "text_offset": 128,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73625000,
        "duration_milliseconds": 362,
        "text_offset": 133,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 100,
        "text_offset": 138,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 85875000,
        "duration_milliseconds": 300,
        "text_offset": 140,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "duration_milliseconds": 300,
        "text_offset": 146,
        "word_length": 4,
        "text": "dive",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92250000,
        "duration_milliseconds": 162,
        "text_offset": 151,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "duration_milliseconds": 87,
        "text_offset": 154,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95125000,
        "duration_milliseconds": 212,
        "text_offset": 158,
        "word_length": 4,
        "text": "help",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 350,
        "text_offset": 163,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101250000,
        "duration_milliseconds": 250,
        "text_offset": 168,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103875000,
        "duration_milliseconds": 175,
        "text_offset": 174,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105750000,
        "duration_milliseconds": 462,
        "text_offset": 179,
        "word_length": 6,
        "text": "puzzle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110625000,
        "duration_milliseconds": 100,
        "text_offset": 185,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "alex-has-to-sell-products-in-various-cities-and-575f7417.mp3",
    "final_audio": "alex-has-to-sell-products-in-various-cities-and-575f7417.mp3"
  }
]