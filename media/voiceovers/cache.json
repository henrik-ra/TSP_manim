[
  {
    "input_text": "First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.",
    "input_data": {
      "input_text": "First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 350,
        "text_offset": 0,
        "word_length": 5,
        "text": "First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 87,
        "text_offset": 6,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 162,
        "text_offset": 9,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 500,
        "text_offset": 16,
        "word_length": 8,
        "text": "generate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 250,
        "text_offset": 25,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16250000,
        "duration_milliseconds": 512,
        "text_offset": 29,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 787,
        "text_offset": 38,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 62,
        "text_offset": 51,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 100,
        "text_offset": 54,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 500,
        "text_offset": 58,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37125000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 45625000,
        "duration_milliseconds": 237,
        "text_offset": 66,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 262,
        "text_offset": 71,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 475,
        "text_offset": 77,
        "word_length": 8,
        "text": "creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55875000,
        "duration_milliseconds": 175,
        "text_offset": 86,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57875000,
        "duration_milliseconds": 350,
        "text_offset": 90,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61625000,
        "duration_milliseconds": 350,
        "text_offset": 100,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65375000,
        "duration_milliseconds": 112,
        "text_offset": 107,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66750000,
        "duration_milliseconds": 212,
        "text_offset": 110,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "duration_milliseconds": 125,
        "text_offset": 116,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70375000,
        "duration_milliseconds": 375,
        "text_offset": 120,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74375000,
        "duration_milliseconds": 150,
        "text_offset": 127,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76000000,
        "duration_milliseconds": 112,
        "text_offset": 131,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 500,
        "text_offset": 134,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82625000,
        "duration_milliseconds": 100,
        "text_offset": 141,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "first-of-all-we-generate-all-possible-permutations-87b2f022.mp3",
    "final_audio": "first-of-all-we-generate-all-possible-permutations-87b2f022.mp3"
  },
  {
    "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
    "input_data": {
      "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 362,
        "text_offset": 0,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 162,
        "text_offset": 6,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 562,
        "text_offset": 15,
        "word_length": 9,
        "text": "generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 725,
        "text_offset": 25,
        "word_length": 11,
        "text": "permutation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24000000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 550,
        "text_offset": 41,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 112,
        "text_offset": 51,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 250,
        "text_offset": 55,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36250000,
        "duration_milliseconds": 87,
        "text_offset": 62,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 100,
        "text_offset": 65,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38625000,
        "duration_milliseconds": 312,
        "text_offset": 69,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "duration_milliseconds": 137,
        "text_offset": 74,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 362,
        "text_offset": 77,
        "word_length": 7,
        "text": "summing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 112,
        "text_offset": 85,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48750000,
        "duration_milliseconds": 562,
        "text_offset": 89,
        "word_length": 9,
        "text": "distances",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54625000,
        "duration_milliseconds": 337,
        "text_offset": 99,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58250000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59375000,
        "duration_milliseconds": 400,
        "text_offset": 111,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 487,
        "text_offset": 119,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "then-for-each-generated-permutation-we-calculate-c2a7132c.mp3",
    "final_audio": "then-for-each-generated-permutation-we-calculate-c2a7132c.mp3"
  },
  {
    "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.",
    "input_data": {
      "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 325,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 100,
        "text_offset": 5,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 137,
        "text_offset": 8,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 100,
        "text_offset": 13,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 550,
        "text_offset": 16,
        "word_length": 8,
        "text": "Identify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 125,
        "text_offset": 25,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 287,
        "text_offset": 29,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 87,
        "text_offset": 39,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 462,
        "text_offset": 43,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27125000,
        "duration_milliseconds": 237,
        "text_offset": 52,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 275,
        "text_offset": 59,
        "word_length": 5,
        "text": "among",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 112,
        "text_offset": 65,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34000000,
        "duration_milliseconds": 112,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 650,
        "text_offset": 73,
        "word_length": 10,
        "text": "calculated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42125000,
        "duration_milliseconds": 362,
        "text_offset": 84,
        "word_length": 5,
        "text": "tours",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 75,
        "text_offset": 90,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46875000,
        "duration_milliseconds": 100,
        "text_offset": 94,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 262,
        "text_offset": 98,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 262,
        "text_offset": 103,
        "word_length": 5,
        "text": "found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53750000,
        "duration_milliseconds": 112,
        "text_offset": 109,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 87,
        "text_offset": 114,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 462,
        "text_offset": 118,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60875000,
        "duration_milliseconds": 262,
        "text_offset": 127,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 112,
        "text_offset": 134,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65000000,
        "duration_milliseconds": 100,
        "text_offset": 137,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 412,
        "text_offset": 141,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70625000,
        "duration_milliseconds": 412,
        "text_offset": 149,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75000000,
        "duration_milliseconds": 87,
        "text_offset": 158,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76125000,
        "duration_milliseconds": 100,
        "text_offset": 161,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77250000,
        "duration_milliseconds": 675,
        "text_offset": 165,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84250000,
        "duration_milliseconds": 100,
        "text_offset": 168,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-need-to-identify-the-tour-with-the-shortest-d5cb1df4.mp3",
    "final_audio": "now-we-need-to-identify-the-tour-with-the-shortest-d5cb1df4.mp3"
  },
  {
    "input_text": "The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.",
    "input_data": {
      "input_text": "The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "duration_milliseconds": 225,
        "text_offset": 4,
        "word_length": 5,
        "text": "Brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 262,
        "text_offset": 10,
        "word_length": 5,
        "text": "Force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 337,
        "text_offset": 16,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 100,
        "text_offset": 23,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 62,
        "text_offset": 26,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "duration_milliseconds": 737,
        "text_offset": 28,
        "word_length": 15,
        "text": "straightforward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 150,
        "text_offset": 44,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 725,
        "text_offset": 48,
        "word_length": 14,
        "text": "time-consuming",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29875000,
        "duration_milliseconds": 387,
        "text_offset": 63,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34000000,
        "duration_milliseconds": 100,
        "text_offset": 72,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35250000,
        "duration_milliseconds": 412,
        "text_offset": 75,
        "word_length": 7,
        "text": "solving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 100,
        "text_offset": 83,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40625000,
        "duration_milliseconds": 712,
        "text_offset": 87,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "duration_milliseconds": 100,
        "text_offset": 90,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 56625000,
        "duration_milliseconds": 150,
        "text_offset": 92,
        "word_length": 2,
        "text": "It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58375000,
        "duration_milliseconds": 400,
        "text_offset": 95,
        "word_length": 8,
        "text": "involves",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62500000,
        "duration_milliseconds": 300,
        "text_offset": 104,
        "word_length": 6,
        "text": "trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65750000,
        "duration_milliseconds": 150,
        "text_offset": 111,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67375000,
        "duration_milliseconds": 187,
        "text_offset": 115,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69375000,
        "duration_milliseconds": 487,
        "text_offset": 119,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74500000,
        "duration_milliseconds": 375,
        "text_offset": 128,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79125000,
        "duration_milliseconds": 50,
        "text_offset": 135,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 79625000,
        "duration_milliseconds": 787,
        "text_offset": 136,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88375000,
        "duration_milliseconds": 75,
        "text_offset": 148,
        "word_length": 1,
        "text": ")",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 89125000,
        "duration_milliseconds": 137,
        "text_offset": 150,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90750000,
        "duration_milliseconds": 200,
        "text_offset": 153,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92875000,
        "duration_milliseconds": 112,
        "text_offset": 159,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94125000,
        "duration_milliseconds": 362,
        "text_offset": 163,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97875000,
        "duration_milliseconds": 137,
        "text_offset": 170,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99375000,
        "duration_milliseconds": 112,
        "text_offset": 174,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100625000,
        "duration_milliseconds": 437,
        "text_offset": 177,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105250000,
        "duration_milliseconds": 100,
        "text_offset": 185,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106500000,
        "duration_milliseconds": 675,
        "text_offset": 189,
        "word_length": 11,
        "text": "calculating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113500000,
        "duration_milliseconds": 112,
        "text_offset": 201,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114875000,
        "duration_milliseconds": 250,
        "text_offset": 205,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117500000,
        "duration_milliseconds": 75,
        "text_offset": 212,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118500000,
        "duration_milliseconds": 100,
        "text_offset": 215,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119750000,
        "duration_milliseconds": 312,
        "text_offset": 219,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123125000,
        "duration_milliseconds": 187,
        "text_offset": 224,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125250000,
        "duration_milliseconds": 162,
        "text_offset": 228,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127125000,
        "duration_milliseconds": 87,
        "text_offset": 233,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128250000,
        "duration_milliseconds": 187,
        "text_offset": 236,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130375000,
        "duration_milliseconds": 450,
        "text_offset": 242,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135125000,
        "duration_milliseconds": 100,
        "text_offset": 248,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 143625000,
        "duration_milliseconds": 137,
        "text_offset": 250,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145125000,
        "duration_milliseconds": 437,
        "text_offset": 254,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149750000,
        "duration_milliseconds": 237,
        "text_offset": 263,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152250000,
        "duration_milliseconds": 287,
        "text_offset": 268,
        "word_length": 5,
        "text": "found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155375000,
        "duration_milliseconds": 250,
        "text_offset": 274,
        "word_length": 5,
        "text": "among",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158125000,
        "duration_milliseconds": 187,
        "text_offset": 280,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160125000,
        "duration_milliseconds": 812,
        "text_offset": 286,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168375000,
        "duration_milliseconds": 125,
        "text_offset": 299,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169875000,
        "duration_milliseconds": 525,
        "text_offset": 302,
        "word_length": 8,
        "text": "accepted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175375000,
        "duration_milliseconds": 150,
        "text_offset": 311,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177125000,
        "duration_milliseconds": 100,
        "text_offset": 314,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178250000,
        "duration_milliseconds": 562,
        "text_offset": 318,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184125000,
        "duration_milliseconds": 100,
        "text_offset": 326,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-brute-force-method-is-a-straightforward-but-f4759899.mp3",
    "final_audio": "the-brute-force-method-is-a-straightforward-but-f4759899.mp3"
  },
  {
    "input_text": "First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.",
    "input_data": {
      "input_text": "First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 350,
        "text_offset": 0,
        "word_length": 5,
        "text": "First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 87,
        "text_offset": 6,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 162,
        "text_offset": 9,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 500,
        "text_offset": 16,
        "word_length": 8,
        "text": "generate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 250,
        "text_offset": 25,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16250000,
        "duration_milliseconds": 512,
        "text_offset": 29,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 787,
        "text_offset": 38,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 62,
        "text_offset": 51,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 100,
        "text_offset": 54,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 500,
        "text_offset": 58,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37125000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 45625000,
        "duration_milliseconds": 237,
        "text_offset": 66,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 262,
        "text_offset": 71,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 475,
        "text_offset": 77,
        "word_length": 8,
        "text": "creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55875000,
        "duration_milliseconds": 175,
        "text_offset": 86,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57875000,
        "duration_milliseconds": 350,
        "text_offset": 90,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61625000,
        "duration_milliseconds": 350,
        "text_offset": 100,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65375000,
        "duration_milliseconds": 112,
        "text_offset": 107,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66750000,
        "duration_milliseconds": 212,
        "text_offset": 110,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "duration_milliseconds": 125,
        "text_offset": 116,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70375000,
        "duration_milliseconds": 375,
        "text_offset": 120,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74375000,
        "duration_milliseconds": 150,
        "text_offset": 127,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76000000,
        "duration_milliseconds": 112,
        "text_offset": 131,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 500,
        "text_offset": 134,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82625000,
        "duration_milliseconds": 100,
        "text_offset": 141,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "first-of-all-we-generate-all-possible-permutations-87b2f022.mp3",
    "final_audio": "first-of-all-we-generate-all-possible-permutations-87b2f022.mp3"
  },
  {
    "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
    "input_data": {
      "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 362,
        "text_offset": 0,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 162,
        "text_offset": 6,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 562,
        "text_offset": 15,
        "word_length": 9,
        "text": "generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 725,
        "text_offset": 25,
        "word_length": 11,
        "text": "permutation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24000000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 550,
        "text_offset": 41,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 112,
        "text_offset": 51,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 250,
        "text_offset": 55,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36250000,
        "duration_milliseconds": 87,
        "text_offset": 62,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 100,
        "text_offset": 65,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38625000,
        "duration_milliseconds": 312,
        "text_offset": 69,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "duration_milliseconds": 137,
        "text_offset": 74,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 362,
        "text_offset": 77,
        "word_length": 7,
        "text": "summing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 112,
        "text_offset": 85,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48750000,
        "duration_milliseconds": 562,
        "text_offset": 89,
        "word_length": 9,
        "text": "distances",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54625000,
        "duration_milliseconds": 337,
        "text_offset": 99,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58250000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59375000,
        "duration_milliseconds": 400,
        "text_offset": 111,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 487,
        "text_offset": 119,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "then-for-each-generated-permutation-we-calculate-c2a7132c.mp3",
    "final_audio": "then-for-each-generated-permutation-we-calculate-c2a7132c.mp3"
  },
  {
    "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.",
    "input_data": {
      "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 325,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 100,
        "text_offset": 5,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 137,
        "text_offset": 8,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 100,
        "text_offset": 13,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 550,
        "text_offset": 16,
        "word_length": 8,
        "text": "Identify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 125,
        "text_offset": 25,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 287,
        "text_offset": 29,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 87,
        "text_offset": 39,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 462,
        "text_offset": 43,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27125000,
        "duration_milliseconds": 237,
        "text_offset": 52,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 275,
        "text_offset": 59,
        "word_length": 5,
        "text": "among",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 112,
        "text_offset": 65,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34000000,
        "duration_milliseconds": 112,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 650,
        "text_offset": 73,
        "word_length": 10,
        "text": "calculated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42125000,
        "duration_milliseconds": 362,
        "text_offset": 84,
        "word_length": 5,
        "text": "tours",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 75,
        "text_offset": 90,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46875000,
        "duration_milliseconds": 100,
        "text_offset": 94,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 262,
        "text_offset": 98,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 262,
        "text_offset": 103,
        "word_length": 5,
        "text": "found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53750000,
        "duration_milliseconds": 112,
        "text_offset": 109,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 87,
        "text_offset": 114,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 462,
        "text_offset": 118,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60875000,
        "duration_milliseconds": 262,
        "text_offset": 127,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 112,
        "text_offset": 134,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65000000,
        "duration_milliseconds": 100,
        "text_offset": 137,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 412,
        "text_offset": 141,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70625000,
        "duration_milliseconds": 412,
        "text_offset": 149,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75000000,
        "duration_milliseconds": 87,
        "text_offset": 158,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76125000,
        "duration_milliseconds": 100,
        "text_offset": 161,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77250000,
        "duration_milliseconds": 675,
        "text_offset": 165,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84250000,
        "duration_milliseconds": 100,
        "text_offset": 168,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-need-to-identify-the-tour-with-the-shortest-d5cb1df4.mp3",
    "final_audio": "now-we-need-to-identify-the-tour-with-the-shortest-d5cb1df4.mp3"
  },
  {
    "input_text": "The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.",
    "input_data": {
      "input_text": "The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "duration_milliseconds": 225,
        "text_offset": 4,
        "word_length": 5,
        "text": "Brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 262,
        "text_offset": 10,
        "word_length": 5,
        "text": "Force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 337,
        "text_offset": 16,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 100,
        "text_offset": 23,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 62,
        "text_offset": 26,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "duration_milliseconds": 737,
        "text_offset": 28,
        "word_length": 15,
        "text": "straightforward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 150,
        "text_offset": 44,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 725,
        "text_offset": 48,
        "word_length": 14,
        "text": "time-consuming",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29875000,
        "duration_milliseconds": 387,
        "text_offset": 63,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34000000,
        "duration_milliseconds": 100,
        "text_offset": 72,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35250000,
        "duration_milliseconds": 412,
        "text_offset": 75,
        "word_length": 7,
        "text": "solving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 100,
        "text_offset": 83,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40625000,
        "duration_milliseconds": 712,
        "text_offset": 87,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "duration_milliseconds": 100,
        "text_offset": 90,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 56625000,
        "duration_milliseconds": 150,
        "text_offset": 92,
        "word_length": 2,
        "text": "It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58375000,
        "duration_milliseconds": 400,
        "text_offset": 95,
        "word_length": 8,
        "text": "involves",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62500000,
        "duration_milliseconds": 300,
        "text_offset": 104,
        "word_length": 6,
        "text": "trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65750000,
        "duration_milliseconds": 150,
        "text_offset": 111,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67375000,
        "duration_milliseconds": 187,
        "text_offset": 115,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69375000,
        "duration_milliseconds": 487,
        "text_offset": 119,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74500000,
        "duration_milliseconds": 375,
        "text_offset": 128,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79125000,
        "duration_milliseconds": 50,
        "text_offset": 135,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 79625000,
        "duration_milliseconds": 787,
        "text_offset": 136,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88375000,
        "duration_milliseconds": 75,
        "text_offset": 148,
        "word_length": 1,
        "text": ")",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 89125000,
        "duration_milliseconds": 137,
        "text_offset": 150,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90750000,
        "duration_milliseconds": 200,
        "text_offset": 153,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92875000,
        "duration_milliseconds": 112,
        "text_offset": 159,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94125000,
        "duration_milliseconds": 362,
        "text_offset": 163,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97875000,
        "duration_milliseconds": 137,
        "text_offset": 170,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99375000,
        "duration_milliseconds": 112,
        "text_offset": 174,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100625000,
        "duration_milliseconds": 437,
        "text_offset": 177,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105250000,
        "duration_milliseconds": 100,
        "text_offset": 185,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106500000,
        "duration_milliseconds": 675,
        "text_offset": 189,
        "word_length": 11,
        "text": "calculating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113500000,
        "duration_milliseconds": 112,
        "text_offset": 201,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114875000,
        "duration_milliseconds": 250,
        "text_offset": 205,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117500000,
        "duration_milliseconds": 75,
        "text_offset": 212,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118500000,
        "duration_milliseconds": 100,
        "text_offset": 215,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119750000,
        "duration_milliseconds": 312,
        "text_offset": 219,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123125000,
        "duration_milliseconds": 187,
        "text_offset": 224,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125250000,
        "duration_milliseconds": 162,
        "text_offset": 228,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127125000,
        "duration_milliseconds": 87,
        "text_offset": 233,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128250000,
        "duration_milliseconds": 187,
        "text_offset": 236,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130375000,
        "duration_milliseconds": 450,
        "text_offset": 242,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135125000,
        "duration_milliseconds": 100,
        "text_offset": 248,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 143625000,
        "duration_milliseconds": 137,
        "text_offset": 250,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145125000,
        "duration_milliseconds": 437,
        "text_offset": 254,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149750000,
        "duration_milliseconds": 237,
        "text_offset": 263,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152250000,
        "duration_milliseconds": 287,
        "text_offset": 268,
        "word_length": 5,
        "text": "found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155375000,
        "duration_milliseconds": 250,
        "text_offset": 274,
        "word_length": 5,
        "text": "among",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158125000,
        "duration_milliseconds": 187,
        "text_offset": 280,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160125000,
        "duration_milliseconds": 812,
        "text_offset": 286,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168375000,
        "duration_milliseconds": 125,
        "text_offset": 299,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169875000,
        "duration_milliseconds": 525,
        "text_offset": 302,
        "word_length": 8,
        "text": "accepted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175375000,
        "duration_milliseconds": 150,
        "text_offset": 311,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177125000,
        "duration_milliseconds": 100,
        "text_offset": 314,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178250000,
        "duration_milliseconds": 562,
        "text_offset": 318,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184125000,
        "duration_milliseconds": 100,
        "text_offset": 326,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-brute-force-method-is-a-straightforward-but-f4759899.mp3",
    "final_audio": "the-brute-force-method-is-a-straightforward-but-f4759899.mp3"
  },
  {
    "input_text": "First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.",
    "input_data": {
      "input_text": "First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 350,
        "text_offset": 0,
        "word_length": 5,
        "text": "First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 87,
        "text_offset": 6,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 162,
        "text_offset": 9,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 500,
        "text_offset": 16,
        "word_length": 8,
        "text": "generate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 250,
        "text_offset": 25,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16250000,
        "duration_milliseconds": 512,
        "text_offset": 29,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 787,
        "text_offset": 38,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 62,
        "text_offset": 51,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 100,
        "text_offset": 54,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 500,
        "text_offset": 58,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37125000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 45625000,
        "duration_milliseconds": 237,
        "text_offset": 66,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 262,
        "text_offset": 71,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 475,
        "text_offset": 77,
        "word_length": 8,
        "text": "creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55875000,
        "duration_milliseconds": 175,
        "text_offset": 86,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57875000,
        "duration_milliseconds": 350,
        "text_offset": 90,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61625000,
        "duration_milliseconds": 350,
        "text_offset": 100,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65375000,
        "duration_milliseconds": 112,
        "text_offset": 107,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66750000,
        "duration_milliseconds": 212,
        "text_offset": 110,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "duration_milliseconds": 125,
        "text_offset": 116,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70375000,
        "duration_milliseconds": 375,
        "text_offset": 120,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74375000,
        "duration_milliseconds": 150,
        "text_offset": 127,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76000000,
        "duration_milliseconds": 112,
        "text_offset": 131,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 500,
        "text_offset": 134,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82625000,
        "duration_milliseconds": 100,
        "text_offset": 141,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "first-of-all-we-generate-all-possible-permutations-87b2f022.mp3",
    "final_audio": "first-of-all-we-generate-all-possible-permutations-87b2f022.mp3"
  },
  {
    "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
    "input_data": {
      "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 362,
        "text_offset": 0,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 162,
        "text_offset": 6,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 562,
        "text_offset": 15,
        "word_length": 9,
        "text": "generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 725,
        "text_offset": 25,
        "word_length": 11,
        "text": "permutation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24000000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 550,
        "text_offset": 41,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 112,
        "text_offset": 51,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 250,
        "text_offset": 55,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36250000,
        "duration_milliseconds": 87,
        "text_offset": 62,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 100,
        "text_offset": 65,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38625000,
        "duration_milliseconds": 312,
        "text_offset": 69,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "duration_milliseconds": 137,
        "text_offset": 74,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 362,
        "text_offset": 77,
        "word_length": 7,
        "text": "summing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 112,
        "text_offset": 85,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48750000,
        "duration_milliseconds": 562,
        "text_offset": 89,
        "word_length": 9,
        "text": "distances",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54625000,
        "duration_milliseconds": 337,
        "text_offset": 99,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58250000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59375000,
        "duration_milliseconds": 400,
        "text_offset": 111,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 487,
        "text_offset": 119,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "then-for-each-generated-permutation-we-calculate-c2a7132c.mp3",
    "final_audio": "then-for-each-generated-permutation-we-calculate-c2a7132c.mp3"
  },
  {
    "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.",
    "input_data": {
      "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 325,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 100,
        "text_offset": 5,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 137,
        "text_offset": 8,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 100,
        "text_offset": 13,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 550,
        "text_offset": 16,
        "word_length": 8,
        "text": "Identify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 125,
        "text_offset": 25,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 287,
        "text_offset": 29,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 87,
        "text_offset": 39,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 462,
        "text_offset": 43,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27125000,
        "duration_milliseconds": 237,
        "text_offset": 52,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 275,
        "text_offset": 59,
        "word_length": 5,
        "text": "among",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 112,
        "text_offset": 65,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34000000,
        "duration_milliseconds": 112,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 650,
        "text_offset": 73,
        "word_length": 10,
        "text": "calculated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42125000,
        "duration_milliseconds": 362,
        "text_offset": 84,
        "word_length": 5,
        "text": "tours",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 75,
        "text_offset": 90,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46875000,
        "duration_milliseconds": 100,
        "text_offset": 94,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 262,
        "text_offset": 98,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 262,
        "text_offset": 103,
        "word_length": 5,
        "text": "found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53750000,
        "duration_milliseconds": 112,
        "text_offset": 109,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 87,
        "text_offset": 114,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 462,
        "text_offset": 118,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60875000,
        "duration_milliseconds": 262,
        "text_offset": 127,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 112,
        "text_offset": 134,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65000000,
        "duration_milliseconds": 100,
        "text_offset": 137,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 412,
        "text_offset": 141,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70625000,
        "duration_milliseconds": 412,
        "text_offset": 149,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75000000,
        "duration_milliseconds": 87,
        "text_offset": 158,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76125000,
        "duration_milliseconds": 100,
        "text_offset": 161,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77250000,
        "duration_milliseconds": 675,
        "text_offset": 165,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84250000,
        "duration_milliseconds": 100,
        "text_offset": 168,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-need-to-identify-the-tour-with-the-shortest-d5cb1df4.mp3",
    "final_audio": "now-we-need-to-identify-the-tour-with-the-shortest-d5cb1df4.mp3"
  },
  {
    "input_text": "The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.",
    "input_data": {
      "input_text": "The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "duration_milliseconds": 225,
        "text_offset": 4,
        "word_length": 5,
        "text": "Brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 262,
        "text_offset": 10,
        "word_length": 5,
        "text": "Force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 337,
        "text_offset": 16,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 100,
        "text_offset": 23,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 62,
        "text_offset": 26,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "duration_milliseconds": 737,
        "text_offset": 28,
        "word_length": 15,
        "text": "straightforward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 150,
        "text_offset": 44,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 725,
        "text_offset": 48,
        "word_length": 14,
        "text": "time-consuming",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29875000,
        "duration_milliseconds": 387,
        "text_offset": 63,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34000000,
        "duration_milliseconds": 100,
        "text_offset": 72,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35250000,
        "duration_milliseconds": 412,
        "text_offset": 75,
        "word_length": 7,
        "text": "solving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 100,
        "text_offset": 83,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40625000,
        "duration_milliseconds": 712,
        "text_offset": 87,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "duration_milliseconds": 100,
        "text_offset": 90,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 56625000,
        "duration_milliseconds": 150,
        "text_offset": 92,
        "word_length": 2,
        "text": "It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58375000,
        "duration_milliseconds": 400,
        "text_offset": 95,
        "word_length": 8,
        "text": "involves",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62500000,
        "duration_milliseconds": 300,
        "text_offset": 104,
        "word_length": 6,
        "text": "trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65750000,
        "duration_milliseconds": 150,
        "text_offset": 111,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67375000,
        "duration_milliseconds": 187,
        "text_offset": 115,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69375000,
        "duration_milliseconds": 487,
        "text_offset": 119,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74500000,
        "duration_milliseconds": 375,
        "text_offset": 128,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79125000,
        "duration_milliseconds": 50,
        "text_offset": 135,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 79625000,
        "duration_milliseconds": 787,
        "text_offset": 136,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88375000,
        "duration_milliseconds": 75,
        "text_offset": 148,
        "word_length": 1,
        "text": ")",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 89125000,
        "duration_milliseconds": 137,
        "text_offset": 150,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90750000,
        "duration_milliseconds": 200,
        "text_offset": 153,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92875000,
        "duration_milliseconds": 112,
        "text_offset": 159,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94125000,
        "duration_milliseconds": 362,
        "text_offset": 163,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97875000,
        "duration_milliseconds": 137,
        "text_offset": 170,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99375000,
        "duration_milliseconds": 112,
        "text_offset": 174,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100625000,
        "duration_milliseconds": 437,
        "text_offset": 177,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105250000,
        "duration_milliseconds": 100,
        "text_offset": 185,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106500000,
        "duration_milliseconds": 675,
        "text_offset": 189,
        "word_length": 11,
        "text": "calculating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113500000,
        "duration_milliseconds": 112,
        "text_offset": 201,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114875000,
        "duration_milliseconds": 250,
        "text_offset": 205,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117500000,
        "duration_milliseconds": 75,
        "text_offset": 212,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118500000,
        "duration_milliseconds": 100,
        "text_offset": 215,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119750000,
        "duration_milliseconds": 312,
        "text_offset": 219,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123125000,
        "duration_milliseconds": 187,
        "text_offset": 224,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125250000,
        "duration_milliseconds": 162,
        "text_offset": 228,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127125000,
        "duration_milliseconds": 87,
        "text_offset": 233,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128250000,
        "duration_milliseconds": 187,
        "text_offset": 236,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130375000,
        "duration_milliseconds": 450,
        "text_offset": 242,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135125000,
        "duration_milliseconds": 100,
        "text_offset": 248,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 143625000,
        "duration_milliseconds": 137,
        "text_offset": 250,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145125000,
        "duration_milliseconds": 437,
        "text_offset": 254,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149750000,
        "duration_milliseconds": 237,
        "text_offset": 263,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152250000,
        "duration_milliseconds": 287,
        "text_offset": 268,
        "word_length": 5,
        "text": "found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155375000,
        "duration_milliseconds": 250,
        "text_offset": 274,
        "word_length": 5,
        "text": "among",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158125000,
        "duration_milliseconds": 187,
        "text_offset": 280,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160125000,
        "duration_milliseconds": 812,
        "text_offset": 286,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168375000,
        "duration_milliseconds": 125,
        "text_offset": 299,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169875000,
        "duration_milliseconds": 525,
        "text_offset": 302,
        "word_length": 8,
        "text": "accepted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175375000,
        "duration_milliseconds": 150,
        "text_offset": 311,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177125000,
        "duration_milliseconds": 100,
        "text_offset": 314,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178250000,
        "duration_milliseconds": 562,
        "text_offset": 318,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184125000,
        "duration_milliseconds": 100,
        "text_offset": 326,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-brute-force-method-is-a-straightforward-but-f4759899.mp3",
    "final_audio": "the-brute-force-method-is-a-straightforward-but-f4759899.mp3"
  },
  {
    "input_text": "First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.",
    "input_data": {
      "input_text": "First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 350,
        "text_offset": 0,
        "word_length": 5,
        "text": "First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 87,
        "text_offset": 6,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 162,
        "text_offset": 9,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 500,
        "text_offset": 16,
        "word_length": 8,
        "text": "generate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 250,
        "text_offset": 25,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16250000,
        "duration_milliseconds": 512,
        "text_offset": 29,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 787,
        "text_offset": 38,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 62,
        "text_offset": 51,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 100,
        "text_offset": 54,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 500,
        "text_offset": 58,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37125000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 45625000,
        "duration_milliseconds": 237,
        "text_offset": 66,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 262,
        "text_offset": 71,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 475,
        "text_offset": 77,
        "word_length": 8,
        "text": "creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55875000,
        "duration_milliseconds": 175,
        "text_offset": 86,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57875000,
        "duration_milliseconds": 350,
        "text_offset": 90,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61625000,
        "duration_milliseconds": 350,
        "text_offset": 100,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65375000,
        "duration_milliseconds": 112,
        "text_offset": 107,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66750000,
        "duration_milliseconds": 212,
        "text_offset": 110,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "duration_milliseconds": 125,
        "text_offset": 116,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70375000,
        "duration_milliseconds": 375,
        "text_offset": 120,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74375000,
        "duration_milliseconds": 150,
        "text_offset": 127,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76000000,
        "duration_milliseconds": 112,
        "text_offset": 131,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 500,
        "text_offset": 134,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82625000,
        "duration_milliseconds": 100,
        "text_offset": 141,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "first-of-all-we-generate-all-possible-permutations-87b2f022.mp3",
    "final_audio": "first-of-all-we-generate-all-possible-permutations-87b2f022.mp3"
  },
  {
    "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
    "input_data": {
      "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 362,
        "text_offset": 0,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 162,
        "text_offset": 6,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 562,
        "text_offset": 15,
        "word_length": 9,
        "text": "generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 725,
        "text_offset": 25,
        "word_length": 11,
        "text": "permutation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24000000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 550,
        "text_offset": 41,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 112,
        "text_offset": 51,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 250,
        "text_offset": 55,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36250000,
        "duration_milliseconds": 87,
        "text_offset": 62,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 100,
        "text_offset": 65,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38625000,
        "duration_milliseconds": 312,
        "text_offset": 69,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "duration_milliseconds": 137,
        "text_offset": 74,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 362,
        "text_offset": 77,
        "word_length": 7,
        "text": "summing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 112,
        "text_offset": 85,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48750000,
        "duration_milliseconds": 562,
        "text_offset": 89,
        "word_length": 9,
        "text": "distances",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54625000,
        "duration_milliseconds": 337,
        "text_offset": 99,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58250000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59375000,
        "duration_milliseconds": 400,
        "text_offset": 111,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 487,
        "text_offset": 119,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "then-for-each-generated-permutation-we-calculate-c2a7132c.mp3",
    "final_audio": "then-for-each-generated-permutation-we-calculate-c2a7132c.mp3"
  },
  {
    "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.",
    "input_data": {
      "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 325,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 100,
        "text_offset": 5,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 137,
        "text_offset": 8,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 100,
        "text_offset": 13,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 550,
        "text_offset": 16,
        "word_length": 8,
        "text": "Identify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 125,
        "text_offset": 25,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 287,
        "text_offset": 29,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 87,
        "text_offset": 39,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 462,
        "text_offset": 43,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27125000,
        "duration_milliseconds": 237,
        "text_offset": 52,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 275,
        "text_offset": 59,
        "word_length": 5,
        "text": "among",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 112,
        "text_offset": 65,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34000000,
        "duration_milliseconds": 112,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 650,
        "text_offset": 73,
        "word_length": 10,
        "text": "calculated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42125000,
        "duration_milliseconds": 362,
        "text_offset": 84,
        "word_length": 5,
        "text": "tours",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 75,
        "text_offset": 90,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46875000,
        "duration_milliseconds": 100,
        "text_offset": 94,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 262,
        "text_offset": 98,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 262,
        "text_offset": 103,
        "word_length": 5,
        "text": "found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53750000,
        "duration_milliseconds": 112,
        "text_offset": 109,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 87,
        "text_offset": 114,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 462,
        "text_offset": 118,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60875000,
        "duration_milliseconds": 262,
        "text_offset": 127,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 112,
        "text_offset": 134,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65000000,
        "duration_milliseconds": 100,
        "text_offset": 137,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 412,
        "text_offset": 141,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70625000,
        "duration_milliseconds": 412,
        "text_offset": 149,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75000000,
        "duration_milliseconds": 87,
        "text_offset": 158,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76125000,
        "duration_milliseconds": 100,
        "text_offset": 161,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77250000,
        "duration_milliseconds": 675,
        "text_offset": 165,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84250000,
        "duration_milliseconds": 100,
        "text_offset": 168,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-need-to-identify-the-tour-with-the-shortest-d5cb1df4.mp3",
    "final_audio": "now-we-need-to-identify-the-tour-with-the-shortest-d5cb1df4.mp3"
  },
  {
    "input_text": "The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.",
    "input_data": {
      "input_text": "The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "duration_milliseconds": 225,
        "text_offset": 4,
        "word_length": 5,
        "text": "Brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 262,
        "text_offset": 10,
        "word_length": 5,
        "text": "Force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 337,
        "text_offset": 16,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 100,
        "text_offset": 23,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 62,
        "text_offset": 26,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "duration_milliseconds": 737,
        "text_offset": 28,
        "word_length": 15,
        "text": "straightforward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 150,
        "text_offset": 44,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 725,
        "text_offset": 48,
        "word_length": 14,
        "text": "time-consuming",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29875000,
        "duration_milliseconds": 387,
        "text_offset": 63,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34000000,
        "duration_milliseconds": 100,
        "text_offset": 72,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35250000,
        "duration_milliseconds": 412,
        "text_offset": 75,
        "word_length": 7,
        "text": "solving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 100,
        "text_offset": 83,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40625000,
        "duration_milliseconds": 712,
        "text_offset": 87,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "duration_milliseconds": 100,
        "text_offset": 90,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 56625000,
        "duration_milliseconds": 150,
        "text_offset": 92,
        "word_length": 2,
        "text": "It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58375000,
        "duration_milliseconds": 400,
        "text_offset": 95,
        "word_length": 8,
        "text": "involves",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62500000,
        "duration_milliseconds": 300,
        "text_offset": 104,
        "word_length": 6,
        "text": "trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65750000,
        "duration_milliseconds": 150,
        "text_offset": 111,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67375000,
        "duration_milliseconds": 187,
        "text_offset": 115,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69375000,
        "duration_milliseconds": 487,
        "text_offset": 119,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74500000,
        "duration_milliseconds": 375,
        "text_offset": 128,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79125000,
        "duration_milliseconds": 50,
        "text_offset": 135,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 79625000,
        "duration_milliseconds": 787,
        "text_offset": 136,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88375000,
        "duration_milliseconds": 75,
        "text_offset": 148,
        "word_length": 1,
        "text": ")",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 89125000,
        "duration_milliseconds": 137,
        "text_offset": 150,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90750000,
        "duration_milliseconds": 200,
        "text_offset": 153,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92875000,
        "duration_milliseconds": 112,
        "text_offset": 159,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94125000,
        "duration_milliseconds": 362,
        "text_offset": 163,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97875000,
        "duration_milliseconds": 137,
        "text_offset": 170,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99375000,
        "duration_milliseconds": 112,
        "text_offset": 174,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100625000,
        "duration_milliseconds": 437,
        "text_offset": 177,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105250000,
        "duration_milliseconds": 100,
        "text_offset": 185,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106500000,
        "duration_milliseconds": 675,
        "text_offset": 189,
        "word_length": 11,
        "text": "calculating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113500000,
        "duration_milliseconds": 112,
        "text_offset": 201,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114875000,
        "duration_milliseconds": 250,
        "text_offset": 205,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117500000,
        "duration_milliseconds": 75,
        "text_offset": 212,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118500000,
        "duration_milliseconds": 100,
        "text_offset": 215,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119750000,
        "duration_milliseconds": 312,
        "text_offset": 219,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123125000,
        "duration_milliseconds": 187,
        "text_offset": 224,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125250000,
        "duration_milliseconds": 162,
        "text_offset": 228,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127125000,
        "duration_milliseconds": 87,
        "text_offset": 233,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128250000,
        "duration_milliseconds": 187,
        "text_offset": 236,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130375000,
        "duration_milliseconds": 450,
        "text_offset": 242,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135125000,
        "duration_milliseconds": 100,
        "text_offset": 248,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 143625000,
        "duration_milliseconds": 137,
        "text_offset": 250,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145125000,
        "duration_milliseconds": 437,
        "text_offset": 254,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149750000,
        "duration_milliseconds": 237,
        "text_offset": 263,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152250000,
        "duration_milliseconds": 287,
        "text_offset": 268,
        "word_length": 5,
        "text": "found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155375000,
        "duration_milliseconds": 250,
        "text_offset": 274,
        "word_length": 5,
        "text": "among",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158125000,
        "duration_milliseconds": 187,
        "text_offset": 280,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160125000,
        "duration_milliseconds": 812,
        "text_offset": 286,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168375000,
        "duration_milliseconds": 125,
        "text_offset": 299,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169875000,
        "duration_milliseconds": 525,
        "text_offset": 302,
        "word_length": 8,
        "text": "accepted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175375000,
        "duration_milliseconds": 150,
        "text_offset": 311,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177125000,
        "duration_milliseconds": 100,
        "text_offset": 314,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178250000,
        "duration_milliseconds": 562,
        "text_offset": 318,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184125000,
        "duration_milliseconds": 100,
        "text_offset": 326,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-brute-force-method-is-a-straightforward-but-f4759899.mp3",
    "final_audio": "the-brute-force-method-is-a-straightforward-but-f4759899.mp3"
  },
  {
    "input_text": "First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.",
    "input_data": {
      "input_text": "First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 350,
        "text_offset": 0,
        "word_length": 5,
        "text": "First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 87,
        "text_offset": 6,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 162,
        "text_offset": 9,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 500,
        "text_offset": 16,
        "word_length": 8,
        "text": "generate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 250,
        "text_offset": 25,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16250000,
        "duration_milliseconds": 512,
        "text_offset": 29,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 787,
        "text_offset": 38,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 62,
        "text_offset": 51,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 100,
        "text_offset": 54,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 500,
        "text_offset": 58,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37125000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 45625000,
        "duration_milliseconds": 237,
        "text_offset": 66,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 262,
        "text_offset": 71,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 475,
        "text_offset": 77,
        "word_length": 8,
        "text": "creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55875000,
        "duration_milliseconds": 175,
        "text_offset": 86,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57875000,
        "duration_milliseconds": 350,
        "text_offset": 90,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61625000,
        "duration_milliseconds": 350,
        "text_offset": 100,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65375000,
        "duration_milliseconds": 112,
        "text_offset": 107,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66750000,
        "duration_milliseconds": 212,
        "text_offset": 110,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "duration_milliseconds": 125,
        "text_offset": 116,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70375000,
        "duration_milliseconds": 375,
        "text_offset": 120,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74375000,
        "duration_milliseconds": 150,
        "text_offset": 127,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76000000,
        "duration_milliseconds": 112,
        "text_offset": 131,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 500,
        "text_offset": 134,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82625000,
        "duration_milliseconds": 100,
        "text_offset": 141,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "first-of-all-we-generate-all-possible-permutations-87b2f022.mp3",
    "final_audio": "first-of-all-we-generate-all-possible-permutations-87b2f022.mp3"
  },
  {
    "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
    "input_data": {
      "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 362,
        "text_offset": 0,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 162,
        "text_offset": 6,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 562,
        "text_offset": 15,
        "word_length": 9,
        "text": "generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 725,
        "text_offset": 25,
        "word_length": 11,
        "text": "permutation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24000000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 550,
        "text_offset": 41,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 112,
        "text_offset": 51,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 250,
        "text_offset": 55,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36250000,
        "duration_milliseconds": 87,
        "text_offset": 62,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 100,
        "text_offset": 65,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38625000,
        "duration_milliseconds": 312,
        "text_offset": 69,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "duration_milliseconds": 137,
        "text_offset": 74,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 362,
        "text_offset": 77,
        "word_length": 7,
        "text": "summing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 112,
        "text_offset": 85,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48750000,
        "duration_milliseconds": 562,
        "text_offset": 89,
        "word_length": 9,
        "text": "distances",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54625000,
        "duration_milliseconds": 337,
        "text_offset": 99,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58250000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59375000,
        "duration_milliseconds": 400,
        "text_offset": 111,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 487,
        "text_offset": 119,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "then-for-each-generated-permutation-we-calculate-c2a7132c.mp3",
    "final_audio": "then-for-each-generated-permutation-we-calculate-c2a7132c.mp3"
  },
  {
    "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.",
    "input_data": {
      "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 325,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 100,
        "text_offset": 5,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 137,
        "text_offset": 8,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 100,
        "text_offset": 13,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 550,
        "text_offset": 16,
        "word_length": 8,
        "text": "Identify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 125,
        "text_offset": 25,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 287,
        "text_offset": 29,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 87,
        "text_offset": 39,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 462,
        "text_offset": 43,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27125000,
        "duration_milliseconds": 237,
        "text_offset": 52,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 275,
        "text_offset": 59,
        "word_length": 5,
        "text": "among",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 112,
        "text_offset": 65,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34000000,
        "duration_milliseconds": 112,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 650,
        "text_offset": 73,
        "word_length": 10,
        "text": "calculated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42125000,
        "duration_milliseconds": 362,
        "text_offset": 84,
        "word_length": 5,
        "text": "tours",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 75,
        "text_offset": 90,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46875000,
        "duration_milliseconds": 100,
        "text_offset": 94,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 262,
        "text_offset": 98,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 262,
        "text_offset": 103,
        "word_length": 5,
        "text": "found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53750000,
        "duration_milliseconds": 112,
        "text_offset": 109,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 87,
        "text_offset": 114,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 462,
        "text_offset": 118,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60875000,
        "duration_milliseconds": 262,
        "text_offset": 127,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 112,
        "text_offset": 134,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65000000,
        "duration_milliseconds": 100,
        "text_offset": 137,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 412,
        "text_offset": 141,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70625000,
        "duration_milliseconds": 412,
        "text_offset": 149,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75000000,
        "duration_milliseconds": 87,
        "text_offset": 158,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76125000,
        "duration_milliseconds": 100,
        "text_offset": 161,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77250000,
        "duration_milliseconds": 675,
        "text_offset": 165,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84250000,
        "duration_milliseconds": 100,
        "text_offset": 168,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-need-to-identify-the-tour-with-the-shortest-d5cb1df4.mp3",
    "final_audio": "now-we-need-to-identify-the-tour-with-the-shortest-d5cb1df4.mp3"
  },
  {
    "input_text": "The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.",
    "input_data": {
      "input_text": "The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "duration_milliseconds": 225,
        "text_offset": 4,
        "word_length": 5,
        "text": "Brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 262,
        "text_offset": 10,
        "word_length": 5,
        "text": "Force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 337,
        "text_offset": 16,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 100,
        "text_offset": 23,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 62,
        "text_offset": 26,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "duration_milliseconds": 737,
        "text_offset": 28,
        "word_length": 15,
        "text": "straightforward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 150,
        "text_offset": 44,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 725,
        "text_offset": 48,
        "word_length": 14,
        "text": "time-consuming",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29875000,
        "duration_milliseconds": 387,
        "text_offset": 63,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34000000,
        "duration_milliseconds": 100,
        "text_offset": 72,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35250000,
        "duration_milliseconds": 412,
        "text_offset": 75,
        "word_length": 7,
        "text": "solving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 100,
        "text_offset": 83,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40625000,
        "duration_milliseconds": 712,
        "text_offset": 87,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "duration_milliseconds": 100,
        "text_offset": 90,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 56625000,
        "duration_milliseconds": 150,
        "text_offset": 92,
        "word_length": 2,
        "text": "It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58375000,
        "duration_milliseconds": 400,
        "text_offset": 95,
        "word_length": 8,
        "text": "involves",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62500000,
        "duration_milliseconds": 300,
        "text_offset": 104,
        "word_length": 6,
        "text": "trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65750000,
        "duration_milliseconds": 150,
        "text_offset": 111,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67375000,
        "duration_milliseconds": 187,
        "text_offset": 115,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69375000,
        "duration_milliseconds": 487,
        "text_offset": 119,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74500000,
        "duration_milliseconds": 375,
        "text_offset": 128,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79125000,
        "duration_milliseconds": 50,
        "text_offset": 135,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 79625000,
        "duration_milliseconds": 787,
        "text_offset": 136,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88375000,
        "duration_milliseconds": 75,
        "text_offset": 148,
        "word_length": 1,
        "text": ")",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 89125000,
        "duration_milliseconds": 137,
        "text_offset": 150,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90750000,
        "duration_milliseconds": 200,
        "text_offset": 153,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92875000,
        "duration_milliseconds": 112,
        "text_offset": 159,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94125000,
        "duration_milliseconds": 362,
        "text_offset": 163,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97875000,
        "duration_milliseconds": 137,
        "text_offset": 170,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99375000,
        "duration_milliseconds": 112,
        "text_offset": 174,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100625000,
        "duration_milliseconds": 437,
        "text_offset": 177,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105250000,
        "duration_milliseconds": 100,
        "text_offset": 185,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106500000,
        "duration_milliseconds": 675,
        "text_offset": 189,
        "word_length": 11,
        "text": "calculating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113500000,
        "duration_milliseconds": 112,
        "text_offset": 201,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114875000,
        "duration_milliseconds": 250,
        "text_offset": 205,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117500000,
        "duration_milliseconds": 75,
        "text_offset": 212,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118500000,
        "duration_milliseconds": 100,
        "text_offset": 215,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119750000,
        "duration_milliseconds": 312,
        "text_offset": 219,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123125000,
        "duration_milliseconds": 187,
        "text_offset": 224,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125250000,
        "duration_milliseconds": 162,
        "text_offset": 228,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127125000,
        "duration_milliseconds": 87,
        "text_offset": 233,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128250000,
        "duration_milliseconds": 187,
        "text_offset": 236,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130375000,
        "duration_milliseconds": 450,
        "text_offset": 242,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135125000,
        "duration_milliseconds": 100,
        "text_offset": 248,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 143625000,
        "duration_milliseconds": 137,
        "text_offset": 250,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145125000,
        "duration_milliseconds": 437,
        "text_offset": 254,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149750000,
        "duration_milliseconds": 237,
        "text_offset": 263,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152250000,
        "duration_milliseconds": 287,
        "text_offset": 268,
        "word_length": 5,
        "text": "found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155375000,
        "duration_milliseconds": 250,
        "text_offset": 274,
        "word_length": 5,
        "text": "among",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158125000,
        "duration_milliseconds": 187,
        "text_offset": 280,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160125000,
        "duration_milliseconds": 812,
        "text_offset": 286,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168375000,
        "duration_milliseconds": 125,
        "text_offset": 299,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169875000,
        "duration_milliseconds": 525,
        "text_offset": 302,
        "word_length": 8,
        "text": "accepted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175375000,
        "duration_milliseconds": 150,
        "text_offset": 311,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177125000,
        "duration_milliseconds": 100,
        "text_offset": 314,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178250000,
        "duration_milliseconds": 562,
        "text_offset": 318,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184125000,
        "duration_milliseconds": 100,
        "text_offset": 326,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-brute-force-method-is-a-straightforward-but-f4759899.mp3",
    "final_audio": "the-brute-force-method-is-a-straightforward-but-f4759899.mp3"
  },
  {
    "input_text": "First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.",
    "input_data": {
      "input_text": "First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 350,
        "text_offset": 0,
        "word_length": 5,
        "text": "First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 87,
        "text_offset": 6,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 162,
        "text_offset": 9,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 500,
        "text_offset": 16,
        "word_length": 8,
        "text": "generate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 250,
        "text_offset": 25,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16250000,
        "duration_milliseconds": 512,
        "text_offset": 29,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 787,
        "text_offset": 38,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 62,
        "text_offset": 51,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 100,
        "text_offset": 54,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 500,
        "text_offset": 58,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37125000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 45625000,
        "duration_milliseconds": 237,
        "text_offset": 66,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 262,
        "text_offset": 71,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 475,
        "text_offset": 77,
        "word_length": 8,
        "text": "creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55875000,
        "duration_milliseconds": 175,
        "text_offset": 86,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57875000,
        "duration_milliseconds": 350,
        "text_offset": 90,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61625000,
        "duration_milliseconds": 350,
        "text_offset": 100,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65375000,
        "duration_milliseconds": 112,
        "text_offset": 107,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66750000,
        "duration_milliseconds": 212,
        "text_offset": 110,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "duration_milliseconds": 125,
        "text_offset": 116,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70375000,
        "duration_milliseconds": 375,
        "text_offset": 120,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74375000,
        "duration_milliseconds": 150,
        "text_offset": 127,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76000000,
        "duration_milliseconds": 112,
        "text_offset": 131,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 500,
        "text_offset": 134,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82625000,
        "duration_milliseconds": 100,
        "text_offset": 141,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "first-of-all-we-generate-all-possible-permutations-87b2f022.mp3",
    "final_audio": "first-of-all-we-generate-all-possible-permutations-87b2f022.mp3"
  },
  {
    "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
    "input_data": {
      "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 362,
        "text_offset": 0,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 162,
        "text_offset": 6,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 562,
        "text_offset": 15,
        "word_length": 9,
        "text": "generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 725,
        "text_offset": 25,
        "word_length": 11,
        "text": "permutation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24000000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 550,
        "text_offset": 41,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 112,
        "text_offset": 51,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 250,
        "text_offset": 55,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36250000,
        "duration_milliseconds": 87,
        "text_offset": 62,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 100,
        "text_offset": 65,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38625000,
        "duration_milliseconds": 312,
        "text_offset": 69,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "duration_milliseconds": 137,
        "text_offset": 74,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 362,
        "text_offset": 77,
        "word_length": 7,
        "text": "summing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 112,
        "text_offset": 85,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48750000,
        "duration_milliseconds": 562,
        "text_offset": 89,
        "word_length": 9,
        "text": "distances",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54625000,
        "duration_milliseconds": 337,
        "text_offset": 99,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58250000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59375000,
        "duration_milliseconds": 400,
        "text_offset": 111,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 487,
        "text_offset": 119,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "then-for-each-generated-permutation-we-calculate-c2a7132c.mp3",
    "final_audio": "then-for-each-generated-permutation-we-calculate-c2a7132c.mp3"
  },
  {
    "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.",
    "input_data": {
      "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 325,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 100,
        "text_offset": 5,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 137,
        "text_offset": 8,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 100,
        "text_offset": 13,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 550,
        "text_offset": 16,
        "word_length": 8,
        "text": "Identify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 125,
        "text_offset": 25,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 287,
        "text_offset": 29,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 87,
        "text_offset": 39,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 462,
        "text_offset": 43,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27125000,
        "duration_milliseconds": 237,
        "text_offset": 52,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 275,
        "text_offset": 59,
        "word_length": 5,
        "text": "among",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 112,
        "text_offset": 65,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34000000,
        "duration_milliseconds": 112,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 650,
        "text_offset": 73,
        "word_length": 10,
        "text": "calculated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42125000,
        "duration_milliseconds": 362,
        "text_offset": 84,
        "word_length": 5,
        "text": "tours",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 75,
        "text_offset": 90,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46875000,
        "duration_milliseconds": 100,
        "text_offset": 94,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 262,
        "text_offset": 98,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 262,
        "text_offset": 103,
        "word_length": 5,
        "text": "found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53750000,
        "duration_milliseconds": 112,
        "text_offset": 109,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 87,
        "text_offset": 114,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 462,
        "text_offset": 118,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60875000,
        "duration_milliseconds": 262,
        "text_offset": 127,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 112,
        "text_offset": 134,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65000000,
        "duration_milliseconds": 100,
        "text_offset": 137,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 412,
        "text_offset": 141,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70625000,
        "duration_milliseconds": 412,
        "text_offset": 149,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75000000,
        "duration_milliseconds": 87,
        "text_offset": 158,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76125000,
        "duration_milliseconds": 100,
        "text_offset": 161,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77250000,
        "duration_milliseconds": 675,
        "text_offset": 165,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84250000,
        "duration_milliseconds": 100,
        "text_offset": 168,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-need-to-identify-the-tour-with-the-shortest-d5cb1df4.mp3",
    "final_audio": "now-we-need-to-identify-the-tour-with-the-shortest-d5cb1df4.mp3"
  },
  {
    "input_text": "We can calculate the time complexity as the number of possible permutations of n elements when each permutation is counted as a separate operation",
    "input_data": {
      "input_text": "We can calculate the time complexity as the number of possible permutations of n elements when each permutation is counted as a separate operation",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">We can calculate the time complexity as the number of possible permutations of n elements when each permutation is counted as a separate operation</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">We can calculate the time complexity as the number of possible permutations of n elements when each permutation is counted as a separate operation</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 200,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 162,
        "text_offset": 3,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 550,
        "text_offset": 7,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 100,
        "text_offset": 17,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11375000,
        "duration_milliseconds": 262,
        "text_offset": 21,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14125000,
        "duration_milliseconds": 687,
        "text_offset": 26,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 125,
        "text_offset": 37,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22750000,
        "duration_milliseconds": 87,
        "text_offset": 40,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 325,
        "text_offset": 44,
        "word_length": 6,
        "text": "number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 100,
        "text_offset": 51,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28500000,
        "duration_milliseconds": 500,
        "text_offset": 54,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33750000,
        "duration_milliseconds": 800,
        "text_offset": 63,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41875000,
        "duration_milliseconds": 87,
        "text_offset": 76,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "duration_milliseconds": 137,
        "text_offset": 79,
        "word_length": 1,
        "text": "n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44625000,
        "duration_milliseconds": 425,
        "text_offset": 81,
        "word_length": 8,
        "text": "elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49125000,
        "duration_milliseconds": 162,
        "text_offset": 90,
        "word_length": 4,
        "text": "when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 175,
        "text_offset": 95,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53000000,
        "duration_milliseconds": 687,
        "text_offset": 100,
        "word_length": 11,
        "text": "permutation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60125000,
        "duration_milliseconds": 112,
        "text_offset": 112,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61500000,
        "duration_milliseconds": 375,
        "text_offset": 115,
        "word_length": 7,
        "text": "counted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65500000,
        "duration_milliseconds": 150,
        "text_offset": 123,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67250000,
        "duration_milliseconds": 62,
        "text_offset": 126,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "duration_milliseconds": 400,
        "text_offset": 128,
        "word_length": 8,
        "text": "separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72250000,
        "duration_milliseconds": 662,
        "text_offset": 137,
        "word_length": 9,
        "text": "operation",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "we-can-calculate-the-time-complexity-as-the-number-1dd1a0b1.mp3",
    "final_audio": "we-can-calculate-the-time-complexity-as-the-number-1dd1a0b1.mp3"
  },
  {
    "input_text": "For the example we've ssen before we used 5 nodes, so we get 12 possible routes.",
    "input_data": {
      "input_text": "For the example we've ssen before we used 5 nodes, so we get 12 possible routes.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">For the example we've ssen before we used 5 nodes, so we get 12 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">For the example we've ssen before we used 5 nodes, so we get 12 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 150,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2250000,
        "duration_milliseconds": 62,
        "text_offset": 4,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 525,
        "text_offset": 8,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 175,
        "text_offset": 16,
        "word_length": 5,
        "text": "we've",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 275,
        "text_offset": 22,
        "word_length": 4,
        "text": "ssen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13375000,
        "duration_milliseconds": 337,
        "text_offset": 27,
        "word_length": 6,
        "text": "before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17000000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18375000,
        "duration_milliseconds": 225,
        "text_offset": 37,
        "word_length": 4,
        "text": "used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 262,
        "text_offset": 42,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23500000,
        "duration_milliseconds": 362,
        "text_offset": 44,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28000000,
        "duration_milliseconds": 137,
        "text_offset": 49,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 100,
        "text_offset": 51,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30500000,
        "duration_milliseconds": 112,
        "text_offset": 54,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 175,
        "text_offset": 57,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 300,
        "text_offset": 61,
        "word_length": 2,
        "text": "12",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36875000,
        "duration_milliseconds": 475,
        "text_offset": 64,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41875000,
        "duration_milliseconds": 400,
        "text_offset": 73,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-the-example-we-ve-ssen-before-we-used-5-nodes-b0ef6ba3.mp3",
    "final_audio": "for-the-example-we-ve-ssen-before-we-used-5-nodes-b0ef6ba3.mp3"
  },
  {
    "input_text": "If we just increase the number of nodes by 1, we already get 6\u00df possible routes.",
    "input_data": {
      "input_text": "If we just increase the number of nodes by 1, we already get 6\u00df possible routes.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">If we just increase the number of nodes by 1, we already get 6\u00df possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">If we just increase the number of nodes by 1, we already get 6\u00df possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4000000,
        "duration_milliseconds": 237,
        "text_offset": 6,
        "word_length": 4,
        "text": "just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 375,
        "text_offset": 11,
        "word_length": 8,
        "text": "increase",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10625000,
        "duration_milliseconds": 100,
        "text_offset": 20,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 300,
        "text_offset": 24,
        "word_length": 6,
        "text": "number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15125000,
        "duration_milliseconds": 75,
        "text_offset": 31,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 262,
        "text_offset": 34,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18875000,
        "duration_milliseconds": 125,
        "text_offset": 40,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20375000,
        "duration_milliseconds": 312,
        "text_offset": 43,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "duration_milliseconds": 150,
        "text_offset": 44,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26125000,
        "duration_milliseconds": 112,
        "text_offset": 46,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27375000,
        "duration_milliseconds": 375,
        "text_offset": 49,
        "word_length": 7,
        "text": "already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 175,
        "text_offset": 57,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33375000,
        "duration_milliseconds": 700,
        "text_offset": 61,
        "word_length": 2,
        "text": "6\u00df",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40625000,
        "duration_milliseconds": 475,
        "text_offset": 64,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45625000,
        "duration_milliseconds": 387,
        "text_offset": 73,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49625000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "if-we-just-increase-the-number-of-nodes-by-1-we-9f01172f.mp3",
    "final_audio": "if-we-just-increase-the-number-of-nodes-by-1-we-9f01172f.mp3"
  },
  {
    "input_text": "For 10 nodes, it's already 181440 potential shortest paths!!",
    "input_data": {
      "input_text": "For 10 nodes, it's already 181440 potential shortest paths!!",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">For 10 nodes, it's already 181440 potential shortest paths!!</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">For 10 nodes, it's already 181440 potential shortest paths!!</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 212,
        "text_offset": 4,
        "word_length": 2,
        "text": "10",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 337,
        "text_offset": 7,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 75,
        "text_offset": 12,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 137,
        "text_offset": 14,
        "word_length": 4,
        "text": "it's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 362,
        "text_offset": 19,
        "word_length": 7,
        "text": "already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 537,
        "text_offset": 27,
        "word_length": 6,
        "text": "181440",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41000000,
        "duration_milliseconds": 500,
        "text_offset": 34,
        "word_length": 9,
        "text": "potential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 362,
        "text_offset": 44,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50125000,
        "duration_milliseconds": 475,
        "text_offset": 53,
        "word_length": 5,
        "text": "paths",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 100,
        "text_offset": 58,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-10-nodes-it-s-already-181440-potential-bae42521.mp3",
    "final_audio": "for-10-nodes-it-s-already-181440-potential-bae42521.mp3"
  },
  {
    "input_text": "We can calculate the time complexity as the number of possible permutations of n elements when each permutation is counted as a separate operation",
    "input_data": {
      "input_text": "We can calculate the time complexity as the number of possible permutations of n elements when each permutation is counted as a separate operation",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">We can calculate the time complexity as the number of possible permutations of n elements when each permutation is counted as a separate operation</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">We can calculate the time complexity as the number of possible permutations of n elements when each permutation is counted as a separate operation</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 200,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 162,
        "text_offset": 3,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 550,
        "text_offset": 7,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 100,
        "text_offset": 17,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11375000,
        "duration_milliseconds": 262,
        "text_offset": 21,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14125000,
        "duration_milliseconds": 687,
        "text_offset": 26,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 125,
        "text_offset": 37,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22750000,
        "duration_milliseconds": 87,
        "text_offset": 40,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 325,
        "text_offset": 44,
        "word_length": 6,
        "text": "number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 100,
        "text_offset": 51,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28500000,
        "duration_milliseconds": 500,
        "text_offset": 54,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33750000,
        "duration_milliseconds": 800,
        "text_offset": 63,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41875000,
        "duration_milliseconds": 87,
        "text_offset": 76,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "duration_milliseconds": 137,
        "text_offset": 79,
        "word_length": 1,
        "text": "n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44625000,
        "duration_milliseconds": 425,
        "text_offset": 81,
        "word_length": 8,
        "text": "elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49125000,
        "duration_milliseconds": 162,
        "text_offset": 90,
        "word_length": 4,
        "text": "when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 175,
        "text_offset": 95,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53000000,
        "duration_milliseconds": 687,
        "text_offset": 100,
        "word_length": 11,
        "text": "permutation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60125000,
        "duration_milliseconds": 112,
        "text_offset": 112,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61500000,
        "duration_milliseconds": 375,
        "text_offset": 115,
        "word_length": 7,
        "text": "counted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65500000,
        "duration_milliseconds": 150,
        "text_offset": 123,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67250000,
        "duration_milliseconds": 62,
        "text_offset": 126,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "duration_milliseconds": 400,
        "text_offset": 128,
        "word_length": 8,
        "text": "separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72250000,
        "duration_milliseconds": 662,
        "text_offset": 137,
        "word_length": 9,
        "text": "operation",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "we-can-calculate-the-time-complexity-as-the-number-1dd1a0b1.mp3",
    "final_audio": "we-can-calculate-the-time-complexity-as-the-number-1dd1a0b1.mp3"
  },
  {
    "input_text": "For the example we've ssen before we used 5 nodes, so we get 12 possible routes.",
    "input_data": {
      "input_text": "For the example we've ssen before we used 5 nodes, so we get 12 possible routes.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">For the example we've ssen before we used 5 nodes, so we get 12 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">For the example we've ssen before we used 5 nodes, so we get 12 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 150,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2250000,
        "duration_milliseconds": 62,
        "text_offset": 4,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 525,
        "text_offset": 8,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 175,
        "text_offset": 16,
        "word_length": 5,
        "text": "we've",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 275,
        "text_offset": 22,
        "word_length": 4,
        "text": "ssen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13375000,
        "duration_milliseconds": 337,
        "text_offset": 27,
        "word_length": 6,
        "text": "before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17000000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18375000,
        "duration_milliseconds": 225,
        "text_offset": 37,
        "word_length": 4,
        "text": "used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 262,
        "text_offset": 42,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23500000,
        "duration_milliseconds": 362,
        "text_offset": 44,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28000000,
        "duration_milliseconds": 137,
        "text_offset": 49,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 100,
        "text_offset": 51,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30500000,
        "duration_milliseconds": 112,
        "text_offset": 54,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31750000,
        "duration_milliseconds": 175,
        "text_offset": 57,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 300,
        "text_offset": 61,
        "word_length": 2,
        "text": "12",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36875000,
        "duration_milliseconds": 475,
        "text_offset": 64,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41875000,
        "duration_milliseconds": 400,
        "text_offset": 73,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46000000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-the-example-we-ve-ssen-before-we-used-5-nodes-b0ef6ba3.mp3",
    "final_audio": "for-the-example-we-ve-ssen-before-we-used-5-nodes-b0ef6ba3.mp3"
  },
  {
    "input_text": "If we just increase the number of nodes by 1, we already get 60 possible routes.",
    "input_data": {
      "input_text": "If we just increase the number of nodes by 1, we already get 60 possible routes.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">If we just increase the number of nodes by 1, we already get 60 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">If we just increase the number of nodes by 1, we already get 60 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3875000,
        "duration_milliseconds": 237,
        "text_offset": 6,
        "word_length": 4,
        "text": "just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 375,
        "text_offset": 11,
        "word_length": 8,
        "text": "increase",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 100,
        "text_offset": 20,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11750000,
        "duration_milliseconds": 300,
        "text_offset": 24,
        "word_length": 6,
        "text": "number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 75,
        "text_offset": 31,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16000000,
        "duration_milliseconds": 262,
        "text_offset": 34,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 125,
        "text_offset": 40,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 312,
        "text_offset": 43,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24250000,
        "duration_milliseconds": 162,
        "text_offset": 44,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 112,
        "text_offset": 46,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 387,
        "text_offset": 49,
        "word_length": 7,
        "text": "already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 175,
        "text_offset": 57,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33375000,
        "duration_milliseconds": 412,
        "text_offset": 61,
        "word_length": 2,
        "text": "60",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37625000,
        "duration_milliseconds": 487,
        "text_offset": 64,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42750000,
        "duration_milliseconds": 387,
        "text_offset": 73,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "if-we-just-increase-the-number-of-nodes-by-1-we-36e56846.mp3",
    "final_audio": "if-we-just-increase-the-number-of-nodes-by-1-we-36e56846.mp3"
  },
  {
    "input_text": "For 10 nodes, it's already 181440 potential shortest paths!! This is because we got an ??exponential?? time complexity.",
    "input_data": {
      "input_text": "For 10 nodes, it's already 181440 potential shortest paths!! This is because we got an ??exponential?? time complexity.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">For 10 nodes, it's already 181440 potential shortest paths!! This is because we got an ??exponential?? time complexity.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">For 10 nodes, it's already 181440 potential shortest paths!! This is because we got an ??exponential?? time complexity.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 212,
        "text_offset": 4,
        "word_length": 2,
        "text": "10",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 337,
        "text_offset": 7,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 75,
        "text_offset": 12,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 137,
        "text_offset": 14,
        "word_length": 4,
        "text": "it's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 362,
        "text_offset": 19,
        "word_length": 7,
        "text": "already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 537,
        "text_offset": 27,
        "word_length": 6,
        "text": "181440",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41000000,
        "duration_milliseconds": 500,
        "text_offset": 34,
        "word_length": 9,
        "text": "potential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 362,
        "text_offset": 44,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50125000,
        "duration_milliseconds": 475,
        "text_offset": 53,
        "word_length": 5,
        "text": "paths",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 100,
        "text_offset": 58,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 63500000,
        "duration_milliseconds": 275,
        "text_offset": 61,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66375000,
        "duration_milliseconds": 137,
        "text_offset": 66,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "duration_milliseconds": 350,
        "text_offset": 69,
        "word_length": 7,
        "text": "because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71625000,
        "duration_milliseconds": 137,
        "text_offset": 77,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73250000,
        "duration_milliseconds": 237,
        "text_offset": 80,
        "word_length": 3,
        "text": "got",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75750000,
        "duration_milliseconds": 187,
        "text_offset": 84,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77875000,
        "duration_milliseconds": 100,
        "text_offset": 87,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 86500000,
        "duration_milliseconds": 962,
        "text_offset": 89,
        "word_length": 11,
        "text": "exponential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96250000,
        "duration_milliseconds": 100,
        "text_offset": 100,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 104750000,
        "duration_milliseconds": 300,
        "text_offset": 103,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108000000,
        "duration_milliseconds": 875,
        "text_offset": 108,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116875000,
        "duration_milliseconds": 100,
        "text_offset": 118,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-10-nodes-it-s-already-181440-potential-a541ff7a.mp3",
    "final_audio": "for-10-nodes-it-s-already-181440-potential-a541ff7a.mp3"
  },
  {
    "input_text": "We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node and draw a line back to the starting point.",
    "input_data": {
      "input_text": "We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node and draw a line back to the starting point.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node and draw a line back to the starting point.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node and draw a line back to the starting point.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 287,
        "text_offset": 3,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 87,
        "text_offset": 9,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 62,
        "text_offset": 12,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 487,
        "text_offset": 14,
        "word_length": 8,
        "text": "specific",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12625000,
        "duration_milliseconds": 375,
        "text_offset": 23,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 87,
        "text_offset": 28,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 18125000,
        "duration_milliseconds": 237,
        "text_offset": 29,
        "word_length": 3,
        "text": "any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 312,
        "text_offset": 33,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24125000,
        "duration_milliseconds": 150,
        "text_offset": 38,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25875000,
        "duration_milliseconds": 125,
        "text_offset": 42,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 112,
        "text_offset": 45,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 375,
        "text_offset": 49,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32625000,
        "duration_milliseconds": 375,
        "text_offset": 58,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36500000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 45125000,
        "duration_milliseconds": 212,
        "text_offset": 66,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 100,
        "text_offset": 71,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 237,
        "text_offset": 74,
        "word_length": 5,
        "text": "check",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51250000,
        "duration_milliseconds": 100,
        "text_offset": 80,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52375000,
        "duration_milliseconds": 425,
        "text_offset": 84,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56875000,
        "duration_milliseconds": 287,
        "text_offset": 93,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60000000,
        "duration_milliseconds": 100,
        "text_offset": 98,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61250000,
        "duration_milliseconds": 175,
        "text_offset": 102,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63250000,
        "duration_milliseconds": 162,
        "text_offset": 106,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65125000,
        "duration_milliseconds": 250,
        "text_offset": 111,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67875000,
        "duration_milliseconds": 75,
        "text_offset": 117,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 112,
        "text_offset": 120,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "duration_milliseconds": 437,
        "text_offset": 124,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74625000,
        "duration_milliseconds": 100,
        "text_offset": 128,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 83250000,
        "duration_milliseconds": 300,
        "text_offset": 130,
        "word_length": 4,
        "text": "Same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86500000,
        "duration_milliseconds": 87,
        "text_offset": 135,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87500000,
        "duration_milliseconds": 75,
        "text_offset": 139,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88375000,
        "duration_milliseconds": 250,
        "text_offset": 143,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91000000,
        "duration_milliseconds": 187,
        "text_offset": 148,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93000000,
        "duration_milliseconds": 100,
        "text_offset": 153,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94250000,
        "duration_milliseconds": 250,
        "text_offset": 157,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97000000,
        "duration_milliseconds": 150,
        "text_offset": 160,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99375000,
        "duration_milliseconds": 137,
        "text_offset": 163,
        "word_length": 3,
        "text": "...",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 100750000,
        "duration_milliseconds": 125,
        "text_offset": 167,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102250000,
        "duration_milliseconds": 337,
        "text_offset": 170,
        "word_length": 6,
        "text": "repeat",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105875000,
        "duration_milliseconds": 187,
        "text_offset": 177,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107875000,
        "duration_milliseconds": 262,
        "text_offset": 182,
        "word_length": 5,
        "text": "until",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110625000,
        "duration_milliseconds": 150,
        "text_offset": 188,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112375000,
        "duration_milliseconds": 112,
        "text_offset": 194,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113750000,
        "duration_milliseconds": 212,
        "text_offset": 197,
        "word_length": 2,
        "text": "no",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "duration_milliseconds": 537,
        "text_offset": 200,
        "word_length": 9,
        "text": "unvisited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121500000,
        "duration_milliseconds": 225,
        "text_offset": 210,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124000000,
        "duration_milliseconds": 75,
        "text_offset": 215,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125000000,
        "duration_milliseconds": 187,
        "text_offset": 219,
        "word_length": 4,
        "text": "draw",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127125000,
        "duration_milliseconds": 62,
        "text_offset": 224,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "duration_milliseconds": 225,
        "text_offset": 226,
        "word_length": 4,
        "text": "line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130375000,
        "duration_milliseconds": 225,
        "text_offset": 231,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132750000,
        "duration_milliseconds": 87,
        "text_offset": 236,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133750000,
        "duration_milliseconds": 87,
        "text_offset": 239,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134875000,
        "duration_milliseconds": 362,
        "text_offset": 243,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138750000,
        "duration_milliseconds": 337,
        "text_offset": 252,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 142375000,
        "duration_milliseconds": 100,
        "text_offset": 257,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-start-at-a-specific-city-any-city-can-be-the-3fbbe127.mp3",
    "final_audio": "we-start-at-a-specific-city-any-city-can-be-the-3fbbe127.mp3"
  },
  {
    "input_text": "We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node and draw a line back to the starting point.",
    "input_data": {
      "input_text": "We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node and draw a line back to the starting point.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node and draw a line back to the starting point.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node and draw a line back to the starting point.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 287,
        "text_offset": 3,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 87,
        "text_offset": 9,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 62,
        "text_offset": 12,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 487,
        "text_offset": 14,
        "word_length": 8,
        "text": "specific",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12625000,
        "duration_milliseconds": 375,
        "text_offset": 23,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 87,
        "text_offset": 28,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 18125000,
        "duration_milliseconds": 237,
        "text_offset": 29,
        "word_length": 3,
        "text": "any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 312,
        "text_offset": 33,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24125000,
        "duration_milliseconds": 150,
        "text_offset": 38,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25875000,
        "duration_milliseconds": 125,
        "text_offset": 42,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 112,
        "text_offset": 45,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 375,
        "text_offset": 49,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32625000,
        "duration_milliseconds": 375,
        "text_offset": 58,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36500000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 45125000,
        "duration_milliseconds": 212,
        "text_offset": 66,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 100,
        "text_offset": 71,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 237,
        "text_offset": 74,
        "word_length": 5,
        "text": "check",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51250000,
        "duration_milliseconds": 100,
        "text_offset": 80,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52375000,
        "duration_milliseconds": 425,
        "text_offset": 84,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56875000,
        "duration_milliseconds": 287,
        "text_offset": 93,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60000000,
        "duration_milliseconds": 100,
        "text_offset": 98,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61250000,
        "duration_milliseconds": 175,
        "text_offset": 102,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63250000,
        "duration_milliseconds": 162,
        "text_offset": 106,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65125000,
        "duration_milliseconds": 250,
        "text_offset": 111,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67875000,
        "duration_milliseconds": 75,
        "text_offset": 117,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 112,
        "text_offset": 120,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "duration_milliseconds": 437,
        "text_offset": 124,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74625000,
        "duration_milliseconds": 100,
        "text_offset": 128,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 83250000,
        "duration_milliseconds": 300,
        "text_offset": 130,
        "word_length": 4,
        "text": "Same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86500000,
        "duration_milliseconds": 87,
        "text_offset": 135,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87500000,
        "duration_milliseconds": 75,
        "text_offset": 139,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88375000,
        "duration_milliseconds": 250,
        "text_offset": 143,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91000000,
        "duration_milliseconds": 187,
        "text_offset": 148,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93000000,
        "duration_milliseconds": 100,
        "text_offset": 153,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94250000,
        "duration_milliseconds": 250,
        "text_offset": 157,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97000000,
        "duration_milliseconds": 150,
        "text_offset": 160,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99375000,
        "duration_milliseconds": 137,
        "text_offset": 163,
        "word_length": 3,
        "text": "...",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 100750000,
        "duration_milliseconds": 125,
        "text_offset": 167,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102250000,
        "duration_milliseconds": 337,
        "text_offset": 170,
        "word_length": 6,
        "text": "repeat",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105875000,
        "duration_milliseconds": 187,
        "text_offset": 177,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 107875000,
        "duration_milliseconds": 262,
        "text_offset": 182,
        "word_length": 5,
        "text": "until",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110625000,
        "duration_milliseconds": 150,
        "text_offset": 188,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112375000,
        "duration_milliseconds": 112,
        "text_offset": 194,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113750000,
        "duration_milliseconds": 212,
        "text_offset": 197,
        "word_length": 2,
        "text": "no",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116000000,
        "duration_milliseconds": 537,
        "text_offset": 200,
        "word_length": 9,
        "text": "unvisited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 121500000,
        "duration_milliseconds": 225,
        "text_offset": 210,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 124000000,
        "duration_milliseconds": 75,
        "text_offset": 215,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125000000,
        "duration_milliseconds": 187,
        "text_offset": 219,
        "word_length": 4,
        "text": "draw",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127125000,
        "duration_milliseconds": 62,
        "text_offset": 224,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128000000,
        "duration_milliseconds": 225,
        "text_offset": 226,
        "word_length": 4,
        "text": "line",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130375000,
        "duration_milliseconds": 225,
        "text_offset": 231,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 132750000,
        "duration_milliseconds": 87,
        "text_offset": 236,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 133750000,
        "duration_milliseconds": 87,
        "text_offset": 239,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 134875000,
        "duration_milliseconds": 362,
        "text_offset": 243,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 138750000,
        "duration_milliseconds": 337,
        "text_offset": 252,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 142375000,
        "duration_milliseconds": 100,
        "text_offset": 257,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-start-at-a-specific-city-any-city-can-be-the-3fbbe127.mp3",
    "final_audio": "we-start-at-a-specific-city-any-city-can-be-the-3fbbe127.mp3"
  },
  {
    "input_text": "We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node.",
    "input_data": {
      "input_text": "We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 287,
        "text_offset": 3,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 87,
        "text_offset": 9,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 62,
        "text_offset": 12,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 487,
        "text_offset": 14,
        "word_length": 8,
        "text": "specific",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12625000,
        "duration_milliseconds": 375,
        "text_offset": 23,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 87,
        "text_offset": 28,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 18125000,
        "duration_milliseconds": 237,
        "text_offset": 29,
        "word_length": 3,
        "text": "any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 312,
        "text_offset": 33,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24125000,
        "duration_milliseconds": 150,
        "text_offset": 38,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25875000,
        "duration_milliseconds": 125,
        "text_offset": 42,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 112,
        "text_offset": 45,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 375,
        "text_offset": 49,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32625000,
        "duration_milliseconds": 375,
        "text_offset": 58,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36500000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 45125000,
        "duration_milliseconds": 212,
        "text_offset": 66,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 100,
        "text_offset": 71,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 237,
        "text_offset": 74,
        "word_length": 5,
        "text": "check",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51250000,
        "duration_milliseconds": 100,
        "text_offset": 80,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52375000,
        "duration_milliseconds": 425,
        "text_offset": 84,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56875000,
        "duration_milliseconds": 287,
        "text_offset": 93,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60000000,
        "duration_milliseconds": 100,
        "text_offset": 98,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61250000,
        "duration_milliseconds": 175,
        "text_offset": 102,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63250000,
        "duration_milliseconds": 162,
        "text_offset": 106,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65125000,
        "duration_milliseconds": 250,
        "text_offset": 111,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67875000,
        "duration_milliseconds": 75,
        "text_offset": 117,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 112,
        "text_offset": 120,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "duration_milliseconds": 437,
        "text_offset": 124,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74625000,
        "duration_milliseconds": 100,
        "text_offset": 128,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 83250000,
        "duration_milliseconds": 312,
        "text_offset": 130,
        "word_length": 4,
        "text": "Same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86625000,
        "duration_milliseconds": 87,
        "text_offset": 135,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87625000,
        "duration_milliseconds": 75,
        "text_offset": 139,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88500000,
        "duration_milliseconds": 275,
        "text_offset": 143,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91500000,
        "duration_milliseconds": 200,
        "text_offset": 148,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93625000,
        "duration_milliseconds": 87,
        "text_offset": 153,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94750000,
        "duration_milliseconds": 250,
        "text_offset": 157,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 162,
        "text_offset": 160,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "duration_milliseconds": 137,
        "text_offset": 163,
        "word_length": 3,
        "text": "...",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 101375000,
        "duration_milliseconds": 125,
        "text_offset": 167,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102875000,
        "duration_milliseconds": 337,
        "text_offset": 170,
        "word_length": 6,
        "text": "repeat",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106500000,
        "duration_milliseconds": 187,
        "text_offset": 177,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108500000,
        "duration_milliseconds": 262,
        "text_offset": 182,
        "word_length": 5,
        "text": "until",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111250000,
        "duration_milliseconds": 162,
        "text_offset": 188,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113125000,
        "duration_milliseconds": 125,
        "text_offset": 194,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114500000,
        "duration_milliseconds": 212,
        "text_offset": 197,
        "word_length": 2,
        "text": "no",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116750000,
        "duration_milliseconds": 537,
        "text_offset": 200,
        "word_length": 9,
        "text": "unvisited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122250000,
        "duration_milliseconds": 337,
        "text_offset": 210,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125875000,
        "duration_milliseconds": 100,
        "text_offset": 214,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-start-at-a-specific-city-any-city-can-be-the-f27a8aa7.mp3",
    "final_audio": "we-start-at-a-specific-city-any-city-can-be-the-f27a8aa7.mp3"
  },
  {
    "input_text": "Finally, we draw a connection back to the starting point.",
    "input_data": {
      "input_text": "Finally, we draw a connection back to the starting point.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Finally, we draw a connection back to the starting point.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Finally, we draw a connection back to the starting point.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 525,
        "text_offset": 0,
        "word_length": 7,
        "text": "Finally",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 112,
        "text_offset": 7,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 112,
        "text_offset": 9,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 225,
        "text_offset": 12,
        "word_length": 4,
        "text": "draw",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 62,
        "text_offset": 17,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 475,
        "text_offset": 19,
        "word_length": 10,
        "text": "connection",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17750000,
        "duration_milliseconds": 237,
        "text_offset": 30,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 87,
        "text_offset": 35,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21375000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22750000,
        "duration_milliseconds": 400,
        "text_offset": 42,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27000000,
        "duration_milliseconds": 350,
        "text_offset": 51,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 100,
        "text_offset": 56,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "finally-we-draw-a-connection-back-to-the-starting-e268e76e.mp3",
    "final_audio": "finally-we-draw-a-connection-back-to-the-starting-e268e76e.mp3"
  },
  {
    "input_text": "If we add more cities, the time complexity still stays good, but in most cases we won't find the optimal shortest path.",
    "input_data": {
      "input_text": "If we add more cities, the time complexity still stays good, but in most cases we won't find the optimal shortest path.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">If we add more cities, the time complexity still stays good, but in most cases we won't find the optimal shortest path.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">If we add more cities, the time complexity still stays good, but in most cases we won't find the optimal shortest path.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 125,
        "text_offset": 3,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4000000,
        "duration_milliseconds": 137,
        "text_offset": 6,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 387,
        "text_offset": 15,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 100,
        "text_offset": 21,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 13500000,
        "duration_milliseconds": 125,
        "text_offset": 23,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 237,
        "text_offset": 27,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 587,
        "text_offset": 32,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 237,
        "text_offset": 43,
        "word_length": 5,
        "text": "still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26250000,
        "duration_milliseconds": 262,
        "text_offset": 49,
        "word_length": 5,
        "text": "stays",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 275,
        "text_offset": 55,
        "word_length": 4,
        "text": "good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 137,
        "text_offset": 59,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 34125000,
        "duration_milliseconds": 125,
        "text_offset": 61,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35625000,
        "duration_milliseconds": 87,
        "text_offset": 65,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36750000,
        "duration_milliseconds": 262,
        "text_offset": 68,
        "word_length": 4,
        "text": "most",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39625000,
        "duration_milliseconds": 350,
        "text_offset": 73,
        "word_length": 5,
        "text": "cases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43375000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44625000,
        "duration_milliseconds": 225,
        "text_offset": 82,
        "word_length": 5,
        "text": "won't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47125000,
        "duration_milliseconds": 250,
        "text_offset": 88,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49750000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 400,
        "text_offset": 97,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55125000,
        "duration_milliseconds": 350,
        "text_offset": 105,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58875000,
        "duration_milliseconds": 412,
        "text_offset": 114,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63250000,
        "duration_milliseconds": 100,
        "text_offset": 118,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "if-we-add-more-cities-the-time-complexity-still-2d9c12c7.mp3",
    "final_audio": "if-we-add-more-cities-the-time-complexity-still-2d9c12c7.mp3"
  },
  {
    "input_text": "Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.",
    "input_data": {
      "input_text": "Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Welcome back guys! Today, we're diving into the Traveling Salesperson Problem.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 450,
        "text_offset": 0,
        "word_length": 7,
        "text": "Welcome",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 262,
        "text_offset": 8,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8125000,
        "duration_milliseconds": 487,
        "text_offset": 13,
        "word_length": 4,
        "text": "guys",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 100,
        "text_offset": 17,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 21750000,
        "duration_milliseconds": 412,
        "text_offset": 19,
        "word_length": 5,
        "text": "Today",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26875000,
        "duration_milliseconds": 125,
        "text_offset": 24,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 28125000,
        "duration_milliseconds": 137,
        "text_offset": 26,
        "word_length": 5,
        "text": "we're",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 375,
        "text_offset": 32,
        "word_length": 6,
        "text": "diving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 150,
        "text_offset": 39,
        "word_length": 4,
        "text": "into",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 112,
        "text_offset": 44,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36750000,
        "duration_milliseconds": 425,
        "text_offset": 48,
        "word_length": 9,
        "text": "Traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41250000,
        "duration_milliseconds": 712,
        "text_offset": 58,
        "word_length": 11,
        "text": "Salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 450,
        "text_offset": 70,
        "word_length": 7,
        "text": "Problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53250000,
        "duration_milliseconds": 100,
        "text_offset": 77,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "welcome-back-guys-today-we-re-diving-into-the-30a61223.mp3",
    "final_audio": "welcome-back-guys-today-we-re-diving-into-the-30a61223.mp3"
  },
  {
    "input_text": "Imagine we have a traveling salesperson - tasked with selling your products in various cities.",
    "input_data": {
      "input_text": "Imagine we have a traveling salesperson - tasked with selling your products in various cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Imagine we have a traveling salesperson - tasked with selling your products in various cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Imagine we have a traveling salesperson - tasked with selling your products in various cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 512,
        "text_offset": 0,
        "word_length": 7,
        "text": "Imagine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5875000,
        "duration_milliseconds": 112,
        "text_offset": 8,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 137,
        "text_offset": 11,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 62,
        "text_offset": 16,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 425,
        "text_offset": 18,
        "word_length": 9,
        "text": "traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13875000,
        "duration_milliseconds": 712,
        "text_offset": 28,
        "word_length": 11,
        "text": "salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22125000,
        "duration_milliseconds": 350,
        "text_offset": 42,
        "word_length": 6,
        "text": "tasked",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25875000,
        "duration_milliseconds": 112,
        "text_offset": 49,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 312,
        "text_offset": 54,
        "word_length": 7,
        "text": "selling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 137,
        "text_offset": 62,
        "word_length": 4,
        "text": "your",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32250000,
        "duration_milliseconds": 437,
        "text_offset": 67,
        "word_length": 8,
        "text": "products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36875000,
        "duration_milliseconds": 125,
        "text_offset": 76,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38375000,
        "duration_milliseconds": 375,
        "text_offset": 79,
        "word_length": 7,
        "text": "various",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 450,
        "text_offset": 87,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47125000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "imagine-we-have-a-traveling-salesperson-tasked-2b28348e.mp3",
    "final_audio": "imagine-we-have-a-traveling-salesperson-tasked-2b28348e.mp3"
  },
  {
    "input_text": "This guy is Alex, a salesperson with a big challenge.",
    "input_data": {
      "input_text": "This guy is Alex, a salesperson with a big challenge.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">This guy is Alex, a salesperson with a big challenge.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">This guy is Alex, a salesperson with a big challenge.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 225,
        "text_offset": 0,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2875000,
        "duration_milliseconds": 175,
        "text_offset": 5,
        "word_length": 3,
        "text": "guy",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 150,
        "text_offset": 9,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 362,
        "text_offset": 12,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 62,
        "text_offset": 16,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 62,
        "text_offset": 18,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 712,
        "text_offset": 20,
        "word_length": 11,
        "text": "salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20000000,
        "duration_milliseconds": 137,
        "text_offset": 32,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 62,
        "text_offset": 37,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 200,
        "text_offset": 39,
        "word_length": 3,
        "text": "big",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24625000,
        "duration_milliseconds": 550,
        "text_offset": 43,
        "word_length": 9,
        "text": "challenge",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 100,
        "text_offset": 52,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "this-guy-is-alex-a-salesperson-with-a-big-77e59bca.mp3",
    "final_audio": "this-guy-is-alex-a-salesperson-with-a-big-77e59bca.mp3"
  },
  {
    "input_text": "Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.",
    "input_data": {
      "input_text": "Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Alex has to sell products in various cities and wants to take the shortest route to save time. But how does Alex figure out the best route? Let's dive in and help Alex solve this puzzle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 375,
        "text_offset": 0,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 175,
        "text_offset": 5,
        "word_length": 3,
        "text": "has",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 87,
        "text_offset": 9,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 237,
        "text_offset": 12,
        "word_length": 4,
        "text": "sell",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10250000,
        "duration_milliseconds": 425,
        "text_offset": 17,
        "word_length": 8,
        "text": "products",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 112,
        "text_offset": 26,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 375,
        "text_offset": 29,
        "word_length": 7,
        "text": "various",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20125000,
        "duration_milliseconds": 337,
        "text_offset": 37,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 100,
        "text_offset": 44,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24875000,
        "duration_milliseconds": 237,
        "text_offset": 48,
        "word_length": 5,
        "text": "wants",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27500000,
        "duration_milliseconds": 87,
        "text_offset": 54,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 200,
        "text_offset": 57,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30875000,
        "duration_milliseconds": 87,
        "text_offset": 62,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 437,
        "text_offset": 66,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36500000,
        "duration_milliseconds": 175,
        "text_offset": 75,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38500000,
        "duration_milliseconds": 100,
        "text_offset": 81,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39625000,
        "duration_milliseconds": 262,
        "text_offset": 84,
        "word_length": 4,
        "text": "save",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 375,
        "text_offset": 89,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46375000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 150,
        "text_offset": 95,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56750000,
        "duration_milliseconds": 125,
        "text_offset": 99,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58125000,
        "duration_milliseconds": 200,
        "text_offset": 103,
        "word_length": 4,
        "text": "does",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60375000,
        "duration_milliseconds": 375,
        "text_offset": 108,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64375000,
        "duration_milliseconds": 362,
        "text_offset": 113,
        "word_length": 6,
        "text": "figure",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68250000,
        "duration_milliseconds": 125,
        "text_offset": 120,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69750000,
        "duration_milliseconds": 100,
        "text_offset": 124,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70875000,
        "duration_milliseconds": 250,
        "text_offset": 128,
        "word_length": 4,
        "text": "best",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73625000,
        "duration_milliseconds": 362,
        "text_offset": 133,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 100,
        "text_offset": 138,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 85875000,
        "duration_milliseconds": 300,
        "text_offset": 140,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 89000000,
        "duration_milliseconds": 300,
        "text_offset": 146,
        "word_length": 4,
        "text": "dive",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92250000,
        "duration_milliseconds": 162,
        "text_offset": 151,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "duration_milliseconds": 87,
        "text_offset": 154,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95125000,
        "duration_milliseconds": 212,
        "text_offset": 158,
        "word_length": 4,
        "text": "help",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 350,
        "text_offset": 163,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 101250000,
        "duration_milliseconds": 250,
        "text_offset": 168,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103875000,
        "duration_milliseconds": 175,
        "text_offset": 174,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105750000,
        "duration_milliseconds": 462,
        "text_offset": 179,
        "word_length": 6,
        "text": "puzzle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110625000,
        "duration_milliseconds": 100,
        "text_offset": 185,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "alex-has-to-sell-products-in-various-cities-and-00726738.mp3",
    "final_audio": "alex-has-to-sell-products-in-various-cities-and-00726738.mp3"
  },
  {
    "input_text": "Let's say he needs to visit 4 cities.",
    "input_data": {
      "input_text": "Let's say he needs to visit 4 cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Let's say he needs to visit 4 cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Let's say he needs to visit 4 cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 275,
        "text_offset": 0,
        "word_length": 5,
        "text": "Let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3500000,
        "duration_milliseconds": 187,
        "text_offset": 6,
        "word_length": 3,
        "text": "say",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 125,
        "text_offset": 10,
        "word_length": 2,
        "text": "he",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7125000,
        "duration_milliseconds": 262,
        "text_offset": 13,
        "word_length": 5,
        "text": "needs",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 100,
        "text_offset": 19,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11250000,
        "duration_milliseconds": 312,
        "text_offset": 22,
        "word_length": 5,
        "text": "visit",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14625000,
        "duration_milliseconds": 225,
        "text_offset": 28,
        "word_length": 1,
        "text": "4",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17125000,
        "duration_milliseconds": 512,
        "text_offset": 30,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "let-s-say-he-needs-to-visit-4-cities-7180ac72.mp3",
    "final_audio": "let-s-say-he-needs-to-visit-4-cities-7180ac72.mp3"
  },
  {
    "input_text": "Sounds straightforward, right? What do you think happens if we add one more city to Alex's route?",
    "input_data": {
      "input_text": "Sounds straightforward, right? What do you think happens if we add one more city to Alex's route?",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Sounds straightforward, right? What do you think happens if we add one more city to Alex's route?</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Sounds straightforward, right? What do you think happens if we add one more city to Alex's route?</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 387,
        "text_offset": 0,
        "word_length": 6,
        "text": "Sounds",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 787,
        "text_offset": 7,
        "word_length": 15,
        "text": "straightforward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 100,
        "text_offset": 22,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 387,
        "text_offset": 24,
        "word_length": 5,
        "text": "right",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18250000,
        "duration_milliseconds": 100,
        "text_offset": 29,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26750000,
        "duration_milliseconds": 200,
        "text_offset": 31,
        "word_length": 4,
        "text": "What",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28875000,
        "duration_milliseconds": 62,
        "text_offset": 36,
        "word_length": 2,
        "text": "do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29625000,
        "duration_milliseconds": 100,
        "text_offset": 39,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30875000,
        "duration_milliseconds": 212,
        "text_offset": 43,
        "word_length": 5,
        "text": "think",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33250000,
        "duration_milliseconds": 412,
        "text_offset": 49,
        "word_length": 7,
        "text": "happens",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37625000,
        "duration_milliseconds": 112,
        "text_offset": 57,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39000000,
        "duration_milliseconds": 137,
        "text_offset": 60,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40500000,
        "duration_milliseconds": 162,
        "text_offset": 63,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42375000,
        "duration_milliseconds": 212,
        "text_offset": 67,
        "word_length": 3,
        "text": "one",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44750000,
        "duration_milliseconds": 175,
        "text_offset": 71,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 287,
        "text_offset": 76,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49875000,
        "duration_milliseconds": 125,
        "text_offset": 81,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51250000,
        "duration_milliseconds": 487,
        "text_offset": 84,
        "word_length": 6,
        "text": "Alex's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56375000,
        "duration_milliseconds": 362,
        "text_offset": 91,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60125000,
        "duration_milliseconds": 100,
        "text_offset": 96,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "sounds-straightforward-right-what-do-you-think-eb8b3be8.mp3",
    "final_audio": "sounds-straightforward-right-what-do-you-think-eb8b3be8.mp3"
  },
  {
    "input_text": "Of course, if we add more cities it get's more complex. So how do you determine the shortest possible route that connects all these cities?",
    "input_data": {
      "input_text": "Of course, if we add more cities it get's more complex. So how do you determine the shortest possible route that connects all these cities?",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Of course, if we add more cities it get's more complex. So how do you determine the shortest possible route that connects all these cities?</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Of course, if we add more cities it get's more complex. So how do you determine the shortest possible route that connects all these cities?</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "Of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 325,
        "text_offset": 3,
        "word_length": 6,
        "text": "course",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 12,
        "text_offset": 9,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 112,
        "text_offset": 11,
        "word_length": 2,
        "text": "if",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 137,
        "text_offset": 14,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9750000,
        "duration_milliseconds": 150,
        "text_offset": 17,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 187,
        "text_offset": 21,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 375,
        "text_offset": 26,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 87,
        "text_offset": 33,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 212,
        "text_offset": 36,
        "word_length": 5,
        "text": "get's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21000000,
        "duration_milliseconds": 200,
        "text_offset": 42,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 625,
        "text_offset": 47,
        "word_length": 7,
        "text": "complex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29500000,
        "duration_milliseconds": 100,
        "text_offset": 54,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 38000000,
        "duration_milliseconds": 187,
        "text_offset": 56,
        "word_length": 2,
        "text": "So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "duration_milliseconds": 125,
        "text_offset": 59,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41375000,
        "duration_milliseconds": 75,
        "text_offset": 63,
        "word_length": 2,
        "text": "do",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42250000,
        "duration_milliseconds": 87,
        "text_offset": 66,
        "word_length": 3,
        "text": "you",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43250000,
        "duration_milliseconds": 462,
        "text_offset": 70,
        "word_length": 9,
        "text": "determine",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 87,
        "text_offset": 80,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49125000,
        "duration_milliseconds": 437,
        "text_offset": 84,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53625000,
        "duration_milliseconds": 487,
        "text_offset": 93,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58750000,
        "duration_milliseconds": 200,
        "text_offset": 102,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61000000,
        "duration_milliseconds": 137,
        "text_offset": 108,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62625000,
        "duration_milliseconds": 375,
        "text_offset": 113,
        "word_length": 8,
        "text": "connects",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66625000,
        "duration_milliseconds": 137,
        "text_offset": 122,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68250000,
        "duration_milliseconds": 187,
        "text_offset": 126,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 475,
        "text_offset": 132,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75250000,
        "duration_milliseconds": 100,
        "text_offset": 138,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "of-course-if-we-add-more-cities-it-get-s-more-e1a245dc.mp3",
    "final_audio": "of-course-if-we-add-more-cities-it-get-s-more-e1a245dc.mp3"
  },
  {
    "input_text": "One approach is to try out every possible route. But here lies the problem: Complexity! So, with every new city Alex adds to the trip, the challenge of finding the shortest route grows significantly.",
    "input_data": {
      "input_text": "One approach is to try out every possible route. But here lies the problem: Complexity! So, with every new city Alex adds to the trip, the challenge of finding the shortest route grows significantly.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">One approach is to try out every possible route. But here lies the problem: Complexity! So, with every new city Alex adds to the trip, the challenge of finding the shortest route grows significantly.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">One approach is to try out every possible route. But here lies the problem: Complexity! So, with every new city Alex adds to the trip, the challenge of finding the shortest route grows significantly.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 262,
        "text_offset": 0,
        "word_length": 3,
        "text": "One",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3375000,
        "duration_milliseconds": 375,
        "text_offset": 4,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 87,
        "text_offset": 16,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 275,
        "text_offset": 19,
        "word_length": 3,
        "text": "try",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 175,
        "text_offset": 23,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 237,
        "text_offset": 27,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17375000,
        "duration_milliseconds": 512,
        "text_offset": 33,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22750000,
        "duration_milliseconds": 337,
        "text_offset": 42,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26375000,
        "duration_milliseconds": 100,
        "text_offset": 47,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 162,
        "text_offset": 49,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36750000,
        "duration_milliseconds": 187,
        "text_offset": 53,
        "word_length": 4,
        "text": "here",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38875000,
        "duration_milliseconds": 250,
        "text_offset": 58,
        "word_length": 4,
        "text": "lies",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41625000,
        "duration_milliseconds": 112,
        "text_offset": 63,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "duration_milliseconds": 462,
        "text_offset": 67,
        "word_length": 7,
        "text": "problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 62,
        "text_offset": 74,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 49375000,
        "duration_milliseconds": 800,
        "text_offset": 76,
        "word_length": 10,
        "text": "Complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57625000,
        "duration_milliseconds": 100,
        "text_offset": 86,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 325,
        "text_offset": 88,
        "word_length": 2,
        "text": "So",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70375000,
        "duration_milliseconds": 75,
        "text_offset": 90,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 71125000,
        "duration_milliseconds": 162,
        "text_offset": 92,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73000000,
        "duration_milliseconds": 212,
        "text_offset": 97,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75375000,
        "duration_milliseconds": 137,
        "text_offset": 103,
        "word_length": 3,
        "text": "new",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77000000,
        "duration_milliseconds": 312,
        "text_offset": 107,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 80250000,
        "duration_milliseconds": 337,
        "text_offset": 112,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83750000,
        "duration_milliseconds": 250,
        "text_offset": 117,
        "word_length": 4,
        "text": "adds",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86375000,
        "duration_milliseconds": 87,
        "text_offset": 122,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87500000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88625000,
        "duration_milliseconds": 300,
        "text_offset": 129,
        "word_length": 4,
        "text": "trip",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92500000,
        "duration_milliseconds": 187,
        "text_offset": 133,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 94375000,
        "duration_milliseconds": 112,
        "text_offset": 135,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 95625000,
        "duration_milliseconds": 400,
        "text_offset": 139,
        "word_length": 9,
        "text": "challenge",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99750000,
        "duration_milliseconds": 75,
        "text_offset": 149,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100750000,
        "duration_milliseconds": 350,
        "text_offset": 152,
        "word_length": 7,
        "text": "finding",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104500000,
        "duration_milliseconds": 87,
        "text_offset": 160,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105500000,
        "duration_milliseconds": 450,
        "text_offset": 164,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 110250000,
        "duration_milliseconds": 187,
        "text_offset": 173,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 112375000,
        "duration_milliseconds": 275,
        "text_offset": 179,
        "word_length": 5,
        "text": "grows",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 115375000,
        "duration_milliseconds": 800,
        "text_offset": 185,
        "word_length": 13,
        "text": "significantly",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123625000,
        "duration_milliseconds": 100,
        "text_offset": 198,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "one-approach-is-to-try-out-every-possible-route-5e4be449.mp3",
    "final_audio": "one-approach-is-to-try-out-every-possible-route-5e4be449.mp3"
  },
  {
    "input_text": "The Problem to find the shortest way between multiple points is called the Traveling Salesperson Problem (TSP)",
    "input_data": {
      "input_text": "The Problem to find the shortest way between multiple points is called the Traveling Salesperson Problem (TSP)",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">The Problem to find the shortest way between multiple points is called the Traveling Salesperson Problem (TSP)</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">The Problem to find the shortest way between multiple points is called the Traveling Salesperson Problem (TSP)</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2125000,
        "duration_milliseconds": 362,
        "text_offset": 4,
        "word_length": 7,
        "text": "Problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 100,
        "text_offset": 12,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 262,
        "text_offset": 15,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 75,
        "text_offset": 20,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 462,
        "text_offset": 24,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 137,
        "text_offset": 33,
        "word_length": 3,
        "text": "way",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 350,
        "text_offset": 37,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 462,
        "text_offset": 45,
        "word_length": 8,
        "text": "multiple",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26125000,
        "duration_milliseconds": 350,
        "text_offset": 54,
        "word_length": 6,
        "text": "points",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29875000,
        "duration_milliseconds": 112,
        "text_offset": 61,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31250000,
        "duration_milliseconds": 237,
        "text_offset": 64,
        "word_length": 6,
        "text": "called",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33875000,
        "duration_milliseconds": 75,
        "text_offset": 71,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34875000,
        "duration_milliseconds": 412,
        "text_offset": 75,
        "word_length": 9,
        "text": "Traveling",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39250000,
        "duration_milliseconds": 687,
        "text_offset": 85,
        "word_length": 11,
        "text": "Salesperson",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 437,
        "text_offset": 97,
        "word_length": 7,
        "text": "Problem",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51500000,
        "duration_milliseconds": 50,
        "text_offset": 105,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 52000000,
        "duration_milliseconds": 687,
        "text_offset": 106,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59125000,
        "duration_milliseconds": 100,
        "text_offset": 109,
        "word_length": 1,
        "text": ")",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-problem-to-find-the-shortest-way-between-fcf4dc2d.mp3",
    "final_audio": "the-problem-to-find-the-shortest-way-between-fcf4dc2d.mp3"
  },
  {
    "input_text": "To solve it, we'll think of each city as a point, or 'node', on a graph. The edges symbolize possible paths Alex can take.",
    "input_data": {
      "input_text": "To solve it, we'll think of each city as a point, or 'node', on a graph. The edges symbolize possible paths Alex can take.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">To solve it, we'll think of each city as a point, or 'node', on a graph. The edges symbolize possible paths Alex can take.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">To solve it, we'll think of each city as a point, or 'node', on a graph. The edges symbolize possible paths Alex can take.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 125,
        "text_offset": 0,
        "word_length": 2,
        "text": "To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 1875000,
        "duration_milliseconds": 300,
        "text_offset": 3,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 100,
        "text_offset": 9,
        "word_length": 2,
        "text": "it",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 62,
        "text_offset": 11,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 150,
        "text_offset": 13,
        "word_length": 5,
        "text": "we'll",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 212,
        "text_offset": 19,
        "word_length": 5,
        "text": "think",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11625000,
        "duration_milliseconds": 100,
        "text_offset": 25,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12875000,
        "duration_milliseconds": 175,
        "text_offset": 28,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14875000,
        "duration_milliseconds": 287,
        "text_offset": 33,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18000000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19375000,
        "duration_milliseconds": 62,
        "text_offset": 41,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 300,
        "text_offset": 43,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24250000,
        "duration_milliseconds": 100,
        "text_offset": 48,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 25250000,
        "duration_milliseconds": 112,
        "text_offset": 50,
        "word_length": 2,
        "text": "or",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26625000,
        "duration_milliseconds": 300,
        "text_offset": 54,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 87,
        "text_offset": 59,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 112,
        "text_offset": 61,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32875000,
        "duration_milliseconds": 50,
        "text_offset": 64,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33625000,
        "duration_milliseconds": 637,
        "text_offset": 66,
        "word_length": 5,
        "text": "graph",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40250000,
        "duration_milliseconds": 100,
        "text_offset": 71,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 48875000,
        "duration_milliseconds": 137,
        "text_offset": 73,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50500000,
        "duration_milliseconds": 312,
        "text_offset": 77,
        "word_length": 5,
        "text": "edges",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53875000,
        "duration_milliseconds": 475,
        "text_offset": 83,
        "word_length": 9,
        "text": "symbolize",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58750000,
        "duration_milliseconds": 500,
        "text_offset": 93,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64000000,
        "duration_milliseconds": 400,
        "text_offset": 102,
        "word_length": 5,
        "text": "paths",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68125000,
        "duration_milliseconds": 325,
        "text_offset": 108,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71500000,
        "duration_milliseconds": 150,
        "text_offset": 113,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73250000,
        "duration_milliseconds": 387,
        "text_offset": 117,
        "word_length": 4,
        "text": "take",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 100,
        "text_offset": 121,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "to-solve-it-we-ll-think-of-each-city-as-a-point-or-ca4ec489.mp3",
    "final_audio": "to-solve-it-we-ll-think-of-each-city-as-a-point-or-ca4ec489.mp3"
  },
  {
    "input_text": "It's complete, this means there's a direct path from every city to every other city.",
    "input_data": {
      "input_text": "It's complete, this means there's a direct path from every city to every other city.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">It's complete, this means there's a direct path from every city to every other city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">It's complete, this means there's a direct path from every city to every other city.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 200,
        "text_offset": 0,
        "word_length": 4,
        "text": "It's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2750000,
        "duration_milliseconds": 462,
        "text_offset": 5,
        "word_length": 8,
        "text": "complete",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 150,
        "text_offset": 13,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 187,
        "text_offset": 15,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 237,
        "text_offset": 20,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 200,
        "text_offset": 26,
        "word_length": 7,
        "text": "there's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 62,
        "text_offset": 34,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17625000,
        "duration_milliseconds": 337,
        "text_offset": 36,
        "word_length": 6,
        "text": "direct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 300,
        "text_offset": 43,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24500000,
        "duration_milliseconds": 175,
        "text_offset": 48,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 250,
        "text_offset": 53,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29250000,
        "duration_milliseconds": 300,
        "text_offset": 59,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32500000,
        "duration_milliseconds": 137,
        "text_offset": 64,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34125000,
        "duration_milliseconds": 300,
        "text_offset": 67,
        "word_length": 5,
        "text": "every",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 212,
        "text_offset": 73,
        "word_length": 5,
        "text": "other",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39750000,
        "duration_milliseconds": 412,
        "text_offset": 79,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44125000,
        "duration_milliseconds": 100,
        "text_offset": 83,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "it-s-complete-this-means-there-s-a-direct-path-34754395.mp3",
    "final_audio": "it-s-complete-this-means-there-s-a-direct-path-34754395.mp3"
  },
  {
    "input_text": "Our TSP is symmetric. It means the distance from city A to B is identical to the distance from B to A.",
    "input_data": {
      "input_text": "Our TSP is symmetric. It means the distance from city A to B is identical to the distance from B to A.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Our TSP is symmetric. It means the distance from city A to B is identical to the distance from B to A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Our TSP is symmetric. It means the distance from city A to B is identical to the distance from B to A.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 237,
        "text_offset": 0,
        "word_length": 3,
        "text": "Our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3000000,
        "duration_milliseconds": 700,
        "text_offset": 4,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 150,
        "text_offset": 8,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 637,
        "text_offset": 11,
        "word_length": 9,
        "text": "symmetric",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 100,
        "text_offset": 20,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 27000000,
        "duration_milliseconds": 175,
        "text_offset": 22,
        "word_length": 2,
        "text": "It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 262,
        "text_offset": 25,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 125,
        "text_offset": 31,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33250000,
        "duration_milliseconds": 425,
        "text_offset": 35,
        "word_length": 8,
        "text": "distance",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 200,
        "text_offset": 44,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40000000,
        "duration_milliseconds": 337,
        "text_offset": 49,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 112,
        "text_offset": 54,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45000000,
        "duration_milliseconds": 100,
        "text_offset": 56,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46125000,
        "duration_milliseconds": 125,
        "text_offset": 59,
        "word_length": 1,
        "text": "B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47625000,
        "duration_milliseconds": 125,
        "text_offset": 61,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49125000,
        "duration_milliseconds": 562,
        "text_offset": 64,
        "word_length": 9,
        "text": "identical",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 87,
        "text_offset": 74,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 125,
        "text_offset": 77,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57375000,
        "duration_milliseconds": 412,
        "text_offset": 81,
        "word_length": 8,
        "text": "distance",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61750000,
        "duration_milliseconds": 187,
        "text_offset": 90,
        "word_length": 4,
        "text": "from",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63875000,
        "duration_milliseconds": 150,
        "text_offset": 95,
        "word_length": 1,
        "text": "B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65625000,
        "duration_milliseconds": 125,
        "text_offset": 97,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67000000,
        "duration_milliseconds": 312,
        "text_offset": 100,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 100,
        "text_offset": 101,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "our-tsp-is-symmetric-it-means-the-distance-from-0fc1642f.mp3",
    "final_audio": "our-tsp-is-symmetric-it-means-the-distance-from-0fc1642f.mp3"
  },
  {
    "input_text": "Also, in our model, the direct path between any two cities is always the shortest. This means for two cities A and B there is no path with an added point that is shorter than the direct connection. adhering to the triangle inequality principle.",
    "input_data": {
      "input_text": "Also, in our model, the direct path between any two cities is always the shortest. This means for two cities A and B there is no path with an added point that is shorter than the direct connection. adhering to the triangle inequality principle.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Also, in our model, the direct path between any two cities is always the shortest. This means for two cities A and B there is no path with an added point that is shorter than the direct connection. adhering to the triangle inequality principle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Also, in our model, the direct path between any two cities is always the shortest. This means for two cities A and B there is no path with an added point that is shorter than the direct connection. adhering to the triangle inequality principle.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 462,
        "text_offset": 0,
        "word_length": 4,
        "text": "Also",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6000000,
        "duration_milliseconds": 87,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6875000,
        "duration_milliseconds": 112,
        "text_offset": 6,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 100,
        "text_offset": 9,
        "word_length": 3,
        "text": "our",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 362,
        "text_offset": 13,
        "word_length": 5,
        "text": "model",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14125000,
        "duration_milliseconds": 62,
        "text_offset": 18,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 14750000,
        "duration_milliseconds": 112,
        "text_offset": 20,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 350,
        "text_offset": 24,
        "word_length": 6,
        "text": "direct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 300,
        "text_offset": 31,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23125000,
        "duration_milliseconds": 387,
        "text_offset": 36,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 187,
        "text_offset": 44,
        "word_length": 3,
        "text": "any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29375000,
        "duration_milliseconds": 175,
        "text_offset": 48,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 400,
        "text_offset": 52,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35500000,
        "duration_milliseconds": 125,
        "text_offset": 59,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 337,
        "text_offset": 62,
        "word_length": 6,
        "text": "always",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40625000,
        "duration_milliseconds": 87,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41625000,
        "duration_milliseconds": 537,
        "text_offset": 73,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47250000,
        "duration_milliseconds": 100,
        "text_offset": 81,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 55750000,
        "duration_milliseconds": 200,
        "text_offset": 83,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57875000,
        "duration_milliseconds": 225,
        "text_offset": 88,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60375000,
        "duration_milliseconds": 150,
        "text_offset": 94,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62125000,
        "duration_milliseconds": 175,
        "text_offset": 98,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 64125000,
        "duration_milliseconds": 412,
        "text_offset": 102,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68500000,
        "duration_milliseconds": 150,
        "text_offset": 109,
        "word_length": 1,
        "text": "A",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70250000,
        "duration_milliseconds": 112,
        "text_offset": 111,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71625000,
        "duration_milliseconds": 137,
        "text_offset": 115,
        "word_length": 1,
        "text": "B",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73125000,
        "duration_milliseconds": 187,
        "text_offset": 117,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75250000,
        "duration_milliseconds": 125,
        "text_offset": 123,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76750000,
        "duration_milliseconds": 175,
        "text_offset": 126,
        "word_length": 2,
        "text": "no",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 78625000,
        "duration_milliseconds": 325,
        "text_offset": 129,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82125000,
        "duration_milliseconds": 125,
        "text_offset": 134,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 83500000,
        "duration_milliseconds": 100,
        "text_offset": 139,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84750000,
        "duration_milliseconds": 300,
        "text_offset": 142,
        "word_length": 5,
        "text": "added",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88000000,
        "duration_milliseconds": 262,
        "text_offset": 148,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90875000,
        "duration_milliseconds": 125,
        "text_offset": 154,
        "word_length": 4,
        "text": "that",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92250000,
        "duration_milliseconds": 75,
        "text_offset": 159,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93250000,
        "duration_milliseconds": 350,
        "text_offset": 162,
        "word_length": 7,
        "text": "shorter",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96875000,
        "duration_milliseconds": 125,
        "text_offset": 170,
        "word_length": 4,
        "text": "than",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98375000,
        "duration_milliseconds": 87,
        "text_offset": 175,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99500000,
        "duration_milliseconds": 325,
        "text_offset": 179,
        "word_length": 6,
        "text": "direct",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 103000000,
        "duration_milliseconds": 550,
        "text_offset": 186,
        "word_length": 10,
        "text": "connection",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108750000,
        "duration_milliseconds": 100,
        "text_offset": 196,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 117375000,
        "duration_milliseconds": 500,
        "text_offset": 198,
        "word_length": 8,
        "text": "adhering",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122500000,
        "duration_milliseconds": 100,
        "text_offset": 207,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123750000,
        "duration_milliseconds": 125,
        "text_offset": 210,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125250000,
        "duration_milliseconds": 587,
        "text_offset": 214,
        "word_length": 8,
        "text": "triangle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 131250000,
        "duration_milliseconds": 637,
        "text_offset": 223,
        "word_length": 10,
        "text": "inequality",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 137875000,
        "duration_milliseconds": 675,
        "text_offset": 234,
        "word_length": 9,
        "text": "principle",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 144750000,
        "duration_milliseconds": 100,
        "text_offset": 243,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "also-in-our-model-the-direct-path-between-any-two-415263cc.mp3",
    "final_audio": "also-in-our-model-the-direct-path-between-any-two-415263cc.mp3"
  },
  {
    "input_text": "With these rules in mind, let's explore how Alex can find the shortest route.",
    "input_data": {
      "input_text": "With these rules in mind, let's explore how Alex can find the shortest route.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">With these rules in mind, let's explore how Alex can find the shortest route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">With these rules in mind, let's explore how Alex can find the shortest route.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 4,
        "text": "With",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 187,
        "text_offset": 5,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4750000,
        "duration_milliseconds": 262,
        "text_offset": 11,
        "word_length": 5,
        "text": "rules",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 87,
        "text_offset": 17,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8750000,
        "duration_milliseconds": 337,
        "text_offset": 20,
        "word_length": 4,
        "text": "mind",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13125000,
        "duration_milliseconds": 112,
        "text_offset": 24,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 14250000,
        "duration_milliseconds": 162,
        "text_offset": 26,
        "word_length": 5,
        "text": "let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16125000,
        "duration_milliseconds": 450,
        "text_offset": 32,
        "word_length": 7,
        "text": "explore",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20875000,
        "duration_milliseconds": 137,
        "text_offset": 40,
        "word_length": 3,
        "text": "how",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22500000,
        "duration_milliseconds": 362,
        "text_offset": 44,
        "word_length": 4,
        "text": "Alex",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26375000,
        "duration_milliseconds": 137,
        "text_offset": 49,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28000000,
        "duration_milliseconds": 262,
        "text_offset": 53,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30750000,
        "duration_milliseconds": 62,
        "text_offset": 58,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 437,
        "text_offset": 62,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36125000,
        "duration_milliseconds": 312,
        "text_offset": 71,
        "word_length": 5,
        "text": "route",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 100,
        "text_offset": 76,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "with-these-rules-in-mind-let-s-explore-how-alex-cdc003e5.mp3",
    "final_audio": "with-these-rules-in-mind-let-s-explore-how-alex-cdc003e5.mp3"
  },
  {
    "input_text": "To solve TSP, we have two primary approaches: the Optimal and the Approximation methods.",
    "input_data": {
      "input_text": "To solve TSP, we have two primary approaches: the Optimal and the Approximation methods.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">To solve TSP, we have two primary approaches: the Optimal and the Approximation methods.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">To solve TSP, we have two primary approaches: the Optimal and the Approximation methods.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 125,
        "text_offset": 0,
        "word_length": 2,
        "text": "To",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "duration_milliseconds": 300,
        "text_offset": 3,
        "word_length": 5,
        "text": "solve",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5250000,
        "duration_milliseconds": 600,
        "text_offset": 9,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 100,
        "text_offset": 12,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 100,
        "text_offset": 14,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14500000,
        "duration_milliseconds": 150,
        "text_offset": 17,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16250000,
        "duration_milliseconds": 187,
        "text_offset": 22,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18375000,
        "duration_milliseconds": 512,
        "text_offset": 26,
        "word_length": 7,
        "text": "primary",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23750000,
        "duration_milliseconds": 562,
        "text_offset": 34,
        "word_length": 10,
        "text": "approaches",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 100,
        "text_offset": 44,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 112,
        "text_offset": 46,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 437,
        "text_offset": 50,
        "word_length": 7,
        "text": "Optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 75,
        "text_offset": 58,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38375000,
        "duration_milliseconds": 100,
        "text_offset": 62,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 775,
        "text_offset": 66,
        "word_length": 13,
        "text": "Approximation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47375000,
        "duration_milliseconds": 462,
        "text_offset": 80,
        "word_length": 7,
        "text": "methods",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52125000,
        "duration_milliseconds": 100,
        "text_offset": 87,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "to-solve-tsp-we-have-two-primary-approaches-the-9dbc8eea.mp3",
    "final_audio": "to-solve-tsp-we-have-two-primary-approaches-the-9dbc8eea.mp3"
  },
  {
    "input_text": "In the Optimal category, we have two prominent algorithms: Brute Force and Branch and Bound.",
    "input_data": {
      "input_text": "In the Optimal category, we have two prominent algorithms: Brute Force and Branch and Bound.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">In the Optimal category, we have two prominent algorithms: Brute Force and Branch and Bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">In the Optimal category, we have two prominent algorithms: Brute Force and Branch and Bound.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 2,
        "text": "In",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3625000,
        "duration_milliseconds": 412,
        "text_offset": 7,
        "word_length": 7,
        "text": "Optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 550,
        "text_offset": 15,
        "word_length": 8,
        "text": "category",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14375000,
        "duration_milliseconds": 125,
        "text_offset": 23,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 15625000,
        "duration_milliseconds": 100,
        "text_offset": 25,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 150,
        "text_offset": 28,
        "word_length": 4,
        "text": "have",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18500000,
        "duration_milliseconds": 187,
        "text_offset": 33,
        "word_length": 3,
        "text": "two",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 450,
        "text_offset": 37,
        "word_length": 9,
        "text": "prominent",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25375000,
        "duration_milliseconds": 662,
        "text_offset": 47,
        "word_length": 10,
        "text": "algorithms",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33000000,
        "duration_milliseconds": 150,
        "text_offset": 57,
        "word_length": 1,
        "text": ":",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 34500000,
        "duration_milliseconds": 225,
        "text_offset": 59,
        "word_length": 5,
        "text": "Brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37000000,
        "duration_milliseconds": 325,
        "text_offset": 65,
        "word_length": 5,
        "text": "Force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40375000,
        "duration_milliseconds": 112,
        "text_offset": 71,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41750000,
        "duration_milliseconds": 350,
        "text_offset": 75,
        "word_length": 6,
        "text": "Branch",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45375000,
        "duration_milliseconds": 100,
        "text_offset": 82,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46625000,
        "duration_milliseconds": 450,
        "text_offset": 86,
        "word_length": 5,
        "text": "Bound",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51375000,
        "duration_milliseconds": 100,
        "text_offset": 91,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "in-the-optimal-category-we-have-two-prominent-2d65f998.mp3",
    "final_audio": "in-the-optimal-category-we-have-two-prominent-2d65f998.mp3"
  },
  {
    "input_text": "Moving on to the Approximation approach, we'll explain the three algorithms k nearest neighbors (kNN), Christofides and Lin Kernighan. But let's start with the optimal solutions first.",
    "input_data": {
      "input_text": "Moving on to the Approximation approach, we'll explain the three algorithms k nearest neighbors (kNN), Christofides and Lin Kernighan. But let's start with the optimal solutions first.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Moving on to the Approximation approach, we'll explain the three algorithms k nearest neighbors (kNN), Christofides and Lin Kernighan. But let's start with the optimal solutions first.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Moving on to the Approximation approach, we'll explain the three algorithms k nearest neighbors (kNN), Christofides and Lin Kernighan. But let's start with the optimal solutions first.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 337,
        "text_offset": 0,
        "word_length": 6,
        "text": "Moving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4125000,
        "duration_milliseconds": 100,
        "text_offset": 7,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 100,
        "text_offset": 10,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7875000,
        "duration_milliseconds": 737,
        "text_offset": 17,
        "word_length": 13,
        "text": "Approximation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15500000,
        "duration_milliseconds": 425,
        "text_offset": 31,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 125,
        "text_offset": 39,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 22000000,
        "duration_milliseconds": 137,
        "text_offset": 41,
        "word_length": 5,
        "text": "we'll",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 375,
        "text_offset": 47,
        "word_length": 7,
        "text": "explain",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27625000,
        "duration_milliseconds": 112,
        "text_offset": 55,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28875000,
        "duration_milliseconds": 250,
        "text_offset": 59,
        "word_length": 5,
        "text": "three",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31625000,
        "duration_milliseconds": 587,
        "text_offset": 65,
        "word_length": 10,
        "text": "algorithms",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37750000,
        "duration_milliseconds": 187,
        "text_offset": 76,
        "word_length": 1,
        "text": "k",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39750000,
        "duration_milliseconds": 337,
        "text_offset": 78,
        "word_length": 7,
        "text": "nearest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43250000,
        "duration_milliseconds": 437,
        "text_offset": 86,
        "word_length": 9,
        "text": "neighbors",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48500000,
        "duration_milliseconds": 12,
        "text_offset": 96,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 48875000,
        "duration_milliseconds": 512,
        "text_offset": 97,
        "word_length": 3,
        "text": "kNN",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54875000,
        "duration_milliseconds": 100,
        "text_offset": 101,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 825,
        "text_offset": 103,
        "word_length": 12,
        "text": "Christofides",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65750000,
        "duration_milliseconds": 75,
        "text_offset": 116,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66750000,
        "duration_milliseconds": 187,
        "text_offset": 120,
        "word_length": 3,
        "text": "Lin",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68875000,
        "duration_milliseconds": 587,
        "text_offset": 124,
        "word_length": 9,
        "text": "Kernighan",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75000000,
        "duration_milliseconds": 100,
        "text_offset": 133,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 83625000,
        "duration_milliseconds": 175,
        "text_offset": 135,
        "word_length": 3,
        "text": "But",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 85625000,
        "duration_milliseconds": 212,
        "text_offset": 139,
        "word_length": 5,
        "text": "let's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87875000,
        "duration_milliseconds": 312,
        "text_offset": 145,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91250000,
        "duration_milliseconds": 125,
        "text_offset": 151,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92750000,
        "duration_milliseconds": 100,
        "text_offset": 156,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94000000,
        "duration_milliseconds": 425,
        "text_offset": 160,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 98500000,
        "duration_milliseconds": 525,
        "text_offset": 168,
        "word_length": 9,
        "text": "solutions",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 104000000,
        "duration_milliseconds": 500,
        "text_offset": 178,
        "word_length": 5,
        "text": "first",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 109250000,
        "duration_milliseconds": 100,
        "text_offset": 183,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "moving-on-to-the-approximation-approach-we-ll-775d34ee.mp3",
    "final_audio": "moving-on-to-the-approximation-approach-we-ll-775d34ee.mp3"
  },
  {
    "input_text": "The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.",
    "input_data": {
      "input_text": "The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">The Brute Force method is a straightforward but time-consuming approach to solving the TSP. It involves trying out all possible orders (permutations) in which the cities can be visited and calculating the length of the tour for each of these orders. The shortest tour found among these permutations is accepted as the solution.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 137,
        "text_offset": 0,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2000000,
        "duration_milliseconds": 225,
        "text_offset": 4,
        "word_length": 5,
        "text": "Brute",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 262,
        "text_offset": 10,
        "word_length": 5,
        "text": "Force",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7375000,
        "duration_milliseconds": 337,
        "text_offset": 16,
        "word_length": 6,
        "text": "method",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11000000,
        "duration_milliseconds": 100,
        "text_offset": 23,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12250000,
        "duration_milliseconds": 62,
        "text_offset": 26,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13000000,
        "duration_milliseconds": 737,
        "text_offset": 28,
        "word_length": 15,
        "text": "straightforward",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20625000,
        "duration_milliseconds": 150,
        "text_offset": 44,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22375000,
        "duration_milliseconds": 725,
        "text_offset": 48,
        "word_length": 14,
        "text": "time-consuming",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29875000,
        "duration_milliseconds": 387,
        "text_offset": 63,
        "word_length": 8,
        "text": "approach",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34000000,
        "duration_milliseconds": 100,
        "text_offset": 72,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35250000,
        "duration_milliseconds": 412,
        "text_offset": 75,
        "word_length": 7,
        "text": "solving",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39500000,
        "duration_milliseconds": 100,
        "text_offset": 83,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 40625000,
        "duration_milliseconds": 712,
        "text_offset": 87,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48000000,
        "duration_milliseconds": 100,
        "text_offset": 90,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 56625000,
        "duration_milliseconds": 150,
        "text_offset": 92,
        "word_length": 2,
        "text": "It",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58375000,
        "duration_milliseconds": 400,
        "text_offset": 95,
        "word_length": 8,
        "text": "involves",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 62500000,
        "duration_milliseconds": 300,
        "text_offset": 104,
        "word_length": 6,
        "text": "trying",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65750000,
        "duration_milliseconds": 150,
        "text_offset": 111,
        "word_length": 3,
        "text": "out",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67375000,
        "duration_milliseconds": 187,
        "text_offset": 115,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69375000,
        "duration_milliseconds": 487,
        "text_offset": 119,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74500000,
        "duration_milliseconds": 375,
        "text_offset": 128,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 79125000,
        "duration_milliseconds": 50,
        "text_offset": 135,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 79625000,
        "duration_milliseconds": 787,
        "text_offset": 136,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88375000,
        "duration_milliseconds": 75,
        "text_offset": 148,
        "word_length": 1,
        "text": ")",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 89125000,
        "duration_milliseconds": 137,
        "text_offset": 150,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 90750000,
        "duration_milliseconds": 200,
        "text_offset": 153,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 92875000,
        "duration_milliseconds": 112,
        "text_offset": 159,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94125000,
        "duration_milliseconds": 362,
        "text_offset": 163,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97875000,
        "duration_milliseconds": 137,
        "text_offset": 170,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 99375000,
        "duration_milliseconds": 112,
        "text_offset": 174,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100625000,
        "duration_milliseconds": 437,
        "text_offset": 177,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 105250000,
        "duration_milliseconds": 100,
        "text_offset": 185,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106500000,
        "duration_milliseconds": 675,
        "text_offset": 189,
        "word_length": 11,
        "text": "calculating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113500000,
        "duration_milliseconds": 112,
        "text_offset": 201,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114875000,
        "duration_milliseconds": 250,
        "text_offset": 205,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 117500000,
        "duration_milliseconds": 75,
        "text_offset": 212,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 118500000,
        "duration_milliseconds": 100,
        "text_offset": 215,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 119750000,
        "duration_milliseconds": 312,
        "text_offset": 219,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 123125000,
        "duration_milliseconds": 187,
        "text_offset": 224,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125250000,
        "duration_milliseconds": 162,
        "text_offset": 228,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 127125000,
        "duration_milliseconds": 87,
        "text_offset": 233,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 128250000,
        "duration_milliseconds": 187,
        "text_offset": 236,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 130375000,
        "duration_milliseconds": 450,
        "text_offset": 242,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 135125000,
        "duration_milliseconds": 100,
        "text_offset": 248,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 143625000,
        "duration_milliseconds": 137,
        "text_offset": 250,
        "word_length": 3,
        "text": "The",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 145125000,
        "duration_milliseconds": 437,
        "text_offset": 254,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 149750000,
        "duration_milliseconds": 237,
        "text_offset": 263,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 152250000,
        "duration_milliseconds": 287,
        "text_offset": 268,
        "word_length": 5,
        "text": "found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 155375000,
        "duration_milliseconds": 250,
        "text_offset": 274,
        "word_length": 5,
        "text": "among",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 158125000,
        "duration_milliseconds": 187,
        "text_offset": 280,
        "word_length": 5,
        "text": "these",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 160125000,
        "duration_milliseconds": 812,
        "text_offset": 286,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 168375000,
        "duration_milliseconds": 125,
        "text_offset": 299,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 169875000,
        "duration_milliseconds": 525,
        "text_offset": 302,
        "word_length": 8,
        "text": "accepted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 175375000,
        "duration_milliseconds": 150,
        "text_offset": 311,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 177125000,
        "duration_milliseconds": 100,
        "text_offset": 314,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 178250000,
        "duration_milliseconds": 562,
        "text_offset": 318,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 184125000,
        "duration_milliseconds": 100,
        "text_offset": 326,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "the-brute-force-method-is-a-straightforward-but-f4759899.mp3",
    "final_audio": "the-brute-force-method-is-a-straightforward-but-f4759899.mp3"
  },
  {
    "input_text": "First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.",
    "input_data": {
      "input_text": "First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">First of all we generate all possible permutations of the cities. This means creating all different orders in which the cities can be visited.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 350,
        "text_offset": 0,
        "word_length": 5,
        "text": "First",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4250000,
        "duration_milliseconds": 87,
        "text_offset": 6,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5375000,
        "duration_milliseconds": 162,
        "text_offset": 9,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7250000,
        "duration_milliseconds": 112,
        "text_offset": 13,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8500000,
        "duration_milliseconds": 500,
        "text_offset": 16,
        "word_length": 8,
        "text": "generate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13625000,
        "duration_milliseconds": 250,
        "text_offset": 25,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16250000,
        "duration_milliseconds": 512,
        "text_offset": 29,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21625000,
        "duration_milliseconds": 787,
        "text_offset": 38,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 62,
        "text_offset": 51,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 100,
        "text_offset": 54,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31875000,
        "duration_milliseconds": 500,
        "text_offset": 58,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37125000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 45625000,
        "duration_milliseconds": 237,
        "text_offset": 66,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 262,
        "text_offset": 71,
        "word_length": 5,
        "text": "means",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 475,
        "text_offset": 77,
        "word_length": 8,
        "text": "creating",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55875000,
        "duration_milliseconds": 175,
        "text_offset": 86,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 57875000,
        "duration_milliseconds": 350,
        "text_offset": 90,
        "word_length": 9,
        "text": "different",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61625000,
        "duration_milliseconds": 350,
        "text_offset": 100,
        "word_length": 6,
        "text": "orders",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65375000,
        "duration_milliseconds": 112,
        "text_offset": 107,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66750000,
        "duration_milliseconds": 212,
        "text_offset": 110,
        "word_length": 5,
        "text": "which",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 69000000,
        "duration_milliseconds": 125,
        "text_offset": 116,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70375000,
        "duration_milliseconds": 375,
        "text_offset": 120,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74375000,
        "duration_milliseconds": 150,
        "text_offset": 127,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76000000,
        "duration_milliseconds": 112,
        "text_offset": 131,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77375000,
        "duration_milliseconds": 500,
        "text_offset": 134,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 82625000,
        "duration_milliseconds": 100,
        "text_offset": 141,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "first-of-all-we-generate-all-possible-permutations-87b2f022.mp3",
    "final_audio": "first-of-all-we-generate-all-possible-permutations-87b2f022.mp3"
  },
  {
    "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
    "input_data": {
      "input_text": "Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Then, For each generated permutation, we calculate the length of the tour by summing the distances between the visited cities.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 362,
        "text_offset": 0,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5000000,
        "duration_milliseconds": 112,
        "text_offset": 4,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 6125000,
        "duration_milliseconds": 162,
        "text_offset": 6,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10000000,
        "duration_milliseconds": 562,
        "text_offset": 15,
        "word_length": 9,
        "text": "generated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15875000,
        "duration_milliseconds": 725,
        "text_offset": 25,
        "word_length": 11,
        "text": "permutation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24000000,
        "duration_milliseconds": 100,
        "text_offset": 36,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 25125000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26500000,
        "duration_milliseconds": 550,
        "text_offset": 41,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32125000,
        "duration_milliseconds": 112,
        "text_offset": 51,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33500000,
        "duration_milliseconds": 250,
        "text_offset": 55,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36250000,
        "duration_milliseconds": 87,
        "text_offset": 62,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37375000,
        "duration_milliseconds": 100,
        "text_offset": 65,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 38625000,
        "duration_milliseconds": 312,
        "text_offset": 69,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42000000,
        "duration_milliseconds": 137,
        "text_offset": 74,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43625000,
        "duration_milliseconds": 362,
        "text_offset": 77,
        "word_length": 7,
        "text": "summing",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 112,
        "text_offset": 85,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48750000,
        "duration_milliseconds": 562,
        "text_offset": 89,
        "word_length": 9,
        "text": "distances",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 54625000,
        "duration_milliseconds": 337,
        "text_offset": 99,
        "word_length": 7,
        "text": "between",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58250000,
        "duration_milliseconds": 87,
        "text_offset": 107,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 59375000,
        "duration_milliseconds": 400,
        "text_offset": 111,
        "word_length": 7,
        "text": "visited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 487,
        "text_offset": 119,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 100,
        "text_offset": 125,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "then-for-each-generated-permutation-we-calculate-c2a7132c.mp3",
    "final_audio": "then-for-each-generated-permutation-we-calculate-c2a7132c.mp3"
  },
  {
    "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.",
    "input_data": {
      "input_text": "Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Now, we need to Identify the tour with the shortest length among all the calculated tours and the tour found with the shortest length is the optimal solution to the TSP.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 325,
        "text_offset": 0,
        "word_length": 3,
        "text": "Now",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4625000,
        "duration_milliseconds": 100,
        "text_offset": 3,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 100,
        "text_offset": 5,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 137,
        "text_offset": 8,
        "word_length": 4,
        "text": "need",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8250000,
        "duration_milliseconds": 100,
        "text_offset": 13,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9500000,
        "duration_milliseconds": 550,
        "text_offset": 16,
        "word_length": 8,
        "text": "Identify",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15250000,
        "duration_milliseconds": 125,
        "text_offset": 25,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 287,
        "text_offset": 29,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 19875000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 87,
        "text_offset": 39,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22250000,
        "duration_milliseconds": 462,
        "text_offset": 43,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27125000,
        "duration_milliseconds": 237,
        "text_offset": 52,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29750000,
        "duration_milliseconds": 275,
        "text_offset": 59,
        "word_length": 5,
        "text": "among",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 112,
        "text_offset": 65,
        "word_length": 3,
        "text": "all",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 34000000,
        "duration_milliseconds": 112,
        "text_offset": 69,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35375000,
        "duration_milliseconds": 650,
        "text_offset": 73,
        "word_length": 10,
        "text": "calculated",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42125000,
        "duration_milliseconds": 362,
        "text_offset": 84,
        "word_length": 5,
        "text": "tours",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45875000,
        "duration_milliseconds": 75,
        "text_offset": 90,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46875000,
        "duration_milliseconds": 100,
        "text_offset": 94,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48125000,
        "duration_milliseconds": 262,
        "text_offset": 98,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 262,
        "text_offset": 103,
        "word_length": 5,
        "text": "found",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53750000,
        "duration_milliseconds": 112,
        "text_offset": 109,
        "word_length": 4,
        "text": "with",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 87,
        "text_offset": 114,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56000000,
        "duration_milliseconds": 462,
        "text_offset": 118,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60875000,
        "duration_milliseconds": 262,
        "text_offset": 127,
        "word_length": 6,
        "text": "length",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63625000,
        "duration_milliseconds": 112,
        "text_offset": 134,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65000000,
        "duration_milliseconds": 100,
        "text_offset": 137,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66250000,
        "duration_milliseconds": 412,
        "text_offset": 141,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70625000,
        "duration_milliseconds": 412,
        "text_offset": 149,
        "word_length": 8,
        "text": "solution",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75000000,
        "duration_milliseconds": 87,
        "text_offset": 158,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 76125000,
        "duration_milliseconds": 100,
        "text_offset": 161,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77250000,
        "duration_milliseconds": 675,
        "text_offset": 165,
        "word_length": 3,
        "text": "TSP",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 84250000,
        "duration_milliseconds": 100,
        "text_offset": 168,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "now-we-need-to-identify-the-tour-with-the-shortest-d5cb1df4.mp3",
    "final_audio": "now-we-need-to-identify-the-tour-with-the-shortest-d5cb1df4.mp3"
  },
  {
    "input_text": "We can calculate the time complexity as the number of possible permutations of n elements when each permutation is counted as a separate operation",
    "input_data": {
      "input_text": "We can calculate the time complexity as the number of possible permutations of n elements when each permutation is counted as a separate operation",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">We can calculate the time complexity as the number of possible permutations of n elements when each permutation is counted as a separate operation</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">We can calculate the time complexity as the number of possible permutations of n elements when each permutation is counted as a separate operation</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 200,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2625000,
        "duration_milliseconds": 162,
        "text_offset": 3,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4500000,
        "duration_milliseconds": 550,
        "text_offset": 7,
        "word_length": 9,
        "text": "calculate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10125000,
        "duration_milliseconds": 100,
        "text_offset": 17,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11375000,
        "duration_milliseconds": 262,
        "text_offset": 21,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 14125000,
        "duration_milliseconds": 687,
        "text_offset": 26,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21250000,
        "duration_milliseconds": 125,
        "text_offset": 37,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22750000,
        "duration_milliseconds": 87,
        "text_offset": 40,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23875000,
        "duration_milliseconds": 325,
        "text_offset": 44,
        "word_length": 6,
        "text": "number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 100,
        "text_offset": 51,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28500000,
        "duration_milliseconds": 500,
        "text_offset": 54,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33750000,
        "duration_milliseconds": 800,
        "text_offset": 63,
        "word_length": 12,
        "text": "permutations",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41875000,
        "duration_milliseconds": 87,
        "text_offset": 76,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43000000,
        "duration_milliseconds": 137,
        "text_offset": 79,
        "word_length": 1,
        "text": "n",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44625000,
        "duration_milliseconds": 425,
        "text_offset": 81,
        "word_length": 8,
        "text": "elements",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49125000,
        "duration_milliseconds": 162,
        "text_offset": 90,
        "word_length": 4,
        "text": "when",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 175,
        "text_offset": 95,
        "word_length": 4,
        "text": "each",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 53000000,
        "duration_milliseconds": 687,
        "text_offset": 100,
        "word_length": 11,
        "text": "permutation",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60125000,
        "duration_milliseconds": 112,
        "text_offset": 112,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61500000,
        "duration_milliseconds": 375,
        "text_offset": 115,
        "word_length": 7,
        "text": "counted",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65500000,
        "duration_milliseconds": 150,
        "text_offset": 123,
        "word_length": 2,
        "text": "as",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67250000,
        "duration_milliseconds": 62,
        "text_offset": 126,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "duration_milliseconds": 400,
        "text_offset": 128,
        "word_length": 8,
        "text": "separate",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 72250000,
        "duration_milliseconds": 662,
        "text_offset": 137,
        "word_length": 9,
        "text": "operation",
        "boundary_type": "Word"
      }
    ],
    "original_audio": "we-can-calculate-the-time-complexity-as-the-number-1dd1a0b1.mp3",
    "final_audio": "we-can-calculate-the-time-complexity-as-the-number-1dd1a0b1.mp3"
  },
  {
    "input_text": "For the example we've seen before we used 5 nodes, so we get 12 possible routes.",
    "input_data": {
      "input_text": "For the example we've seen before we used 5 nodes, so we get 12 possible routes.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">For the example we've seen before we used 5 nodes, so we get 12 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">For the example we've seen before we used 5 nodes, so we get 12 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 162,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2375000,
        "duration_milliseconds": 62,
        "text_offset": 4,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3125000,
        "duration_milliseconds": 525,
        "text_offset": 8,
        "word_length": 7,
        "text": "example",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 8625000,
        "duration_milliseconds": 162,
        "text_offset": 16,
        "word_length": 5,
        "text": "we've",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 250,
        "text_offset": 22,
        "word_length": 4,
        "text": "seen",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 13250000,
        "duration_milliseconds": 325,
        "text_offset": 27,
        "word_length": 6,
        "text": "before",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16750000,
        "duration_milliseconds": 112,
        "text_offset": 34,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18125000,
        "duration_milliseconds": 212,
        "text_offset": 37,
        "word_length": 4,
        "text": "used",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20500000,
        "duration_milliseconds": 262,
        "text_offset": 42,
        "word_length": 1,
        "text": "5",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23250000,
        "duration_milliseconds": 362,
        "text_offset": 44,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27750000,
        "duration_milliseconds": 137,
        "text_offset": 49,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 29125000,
        "duration_milliseconds": 100,
        "text_offset": 51,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30250000,
        "duration_milliseconds": 112,
        "text_offset": 54,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31500000,
        "duration_milliseconds": 175,
        "text_offset": 57,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33375000,
        "duration_milliseconds": 300,
        "text_offset": 61,
        "word_length": 2,
        "text": "12",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36625000,
        "duration_milliseconds": 475,
        "text_offset": 64,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41625000,
        "duration_milliseconds": 387,
        "text_offset": 73,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 45625000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-the-example-we-ve-seen-before-we-used-5-nodes-e1e8ae32.mp3",
    "final_audio": "for-the-example-we-ve-seen-before-we-used-5-nodes-e1e8ae32.mp3"
  },
  {
    "input_text": "If we just increase the number of nodes by 1, we already get 60 possible routes.",
    "input_data": {
      "input_text": "If we just increase the number of nodes by 1, we already get 60 possible routes.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">If we just increase the number of nodes by 1, we already get 60 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">If we just increase the number of nodes by 1, we already get 60 possible routes.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 112,
        "text_offset": 3,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 3875000,
        "duration_milliseconds": 237,
        "text_offset": 6,
        "word_length": 4,
        "text": "just",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6500000,
        "duration_milliseconds": 375,
        "text_offset": 11,
        "word_length": 8,
        "text": "increase",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 10500000,
        "duration_milliseconds": 100,
        "text_offset": 20,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11750000,
        "duration_milliseconds": 300,
        "text_offset": 24,
        "word_length": 6,
        "text": "number",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 75,
        "text_offset": 31,
        "word_length": 2,
        "text": "of",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 16000000,
        "duration_milliseconds": 262,
        "text_offset": 34,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 18750000,
        "duration_milliseconds": 125,
        "text_offset": 40,
        "word_length": 2,
        "text": "by",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 312,
        "text_offset": 43,
        "word_length": 1,
        "text": "1",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24250000,
        "duration_milliseconds": 162,
        "text_offset": 44,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 26000000,
        "duration_milliseconds": 112,
        "text_offset": 46,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 387,
        "text_offset": 49,
        "word_length": 7,
        "text": "already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 31375000,
        "duration_milliseconds": 175,
        "text_offset": 57,
        "word_length": 3,
        "text": "get",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 33375000,
        "duration_milliseconds": 412,
        "text_offset": 61,
        "word_length": 2,
        "text": "60",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 37625000,
        "duration_milliseconds": 487,
        "text_offset": 64,
        "word_length": 8,
        "text": "possible",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 42750000,
        "duration_milliseconds": 387,
        "text_offset": 73,
        "word_length": 6,
        "text": "routes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46750000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "if-we-just-increase-the-number-of-nodes-by-1-we-36e56846.mp3",
    "final_audio": "if-we-just-increase-the-number-of-nodes-by-1-we-36e56846.mp3"
  },
  {
    "input_text": "For 10 nodes, it's already 181440 potential shortest paths!! This is because we got an ??exponential?? time complexity.",
    "input_data": {
      "input_text": "For 10 nodes, it's already 181440 potential shortest paths!! This is because we got an ??exponential?? time complexity.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">For 10 nodes, it's already 181440 potential shortest paths!! This is because we got an ??exponential?? time complexity.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">For 10 nodes, it's already 181440 potential shortest paths!! This is because we got an ??exponential?? time complexity.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 187,
        "text_offset": 0,
        "word_length": 3,
        "text": "For",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 212,
        "text_offset": 4,
        "word_length": 2,
        "text": "10",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4875000,
        "duration_milliseconds": 337,
        "text_offset": 7,
        "word_length": 5,
        "text": "nodes",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9125000,
        "duration_milliseconds": 75,
        "text_offset": 12,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 9875000,
        "duration_milliseconds": 137,
        "text_offset": 14,
        "word_length": 4,
        "text": "it's",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11500000,
        "duration_milliseconds": 362,
        "text_offset": 19,
        "word_length": 7,
        "text": "already",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15375000,
        "duration_milliseconds": 537,
        "text_offset": 27,
        "word_length": 6,
        "text": "181440",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 41000000,
        "duration_milliseconds": 500,
        "text_offset": 34,
        "word_length": 9,
        "text": "potential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 46250000,
        "duration_milliseconds": 362,
        "text_offset": 44,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 50125000,
        "duration_milliseconds": 475,
        "text_offset": 53,
        "word_length": 5,
        "text": "paths",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55000000,
        "duration_milliseconds": 100,
        "text_offset": 58,
        "word_length": 1,
        "text": "!",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 63500000,
        "duration_milliseconds": 275,
        "text_offset": 61,
        "word_length": 4,
        "text": "This",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 66375000,
        "duration_milliseconds": 137,
        "text_offset": 66,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68000000,
        "duration_milliseconds": 350,
        "text_offset": 69,
        "word_length": 7,
        "text": "because",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 71625000,
        "duration_milliseconds": 137,
        "text_offset": 77,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 73250000,
        "duration_milliseconds": 237,
        "text_offset": 80,
        "word_length": 3,
        "text": "got",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 75750000,
        "duration_milliseconds": 187,
        "text_offset": 84,
        "word_length": 2,
        "text": "an",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 77875000,
        "duration_milliseconds": 100,
        "text_offset": 87,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 86500000,
        "duration_milliseconds": 962,
        "text_offset": 89,
        "word_length": 11,
        "text": "exponential",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 96250000,
        "duration_milliseconds": 100,
        "text_offset": 100,
        "word_length": 1,
        "text": "?",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 104750000,
        "duration_milliseconds": 300,
        "text_offset": 103,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108000000,
        "duration_milliseconds": 875,
        "text_offset": 108,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116875000,
        "duration_milliseconds": 100,
        "text_offset": 118,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "for-10-nodes-it-s-already-181440-potential-a541ff7a.mp3",
    "final_audio": "for-10-nodes-it-s-already-181440-potential-a541ff7a.mp3"
  },
  {
    "input_text": "We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node.",
    "input_data": {
      "input_text": "We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">We start at a specific city (any city can be the starting point). Then we check the shortest path and add this point to the tour. Same for the next node and so on ... we repeat this until there is no unvisited node.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "We",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 287,
        "text_offset": 3,
        "word_length": 5,
        "text": "start",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 87,
        "text_offset": 9,
        "word_length": 2,
        "text": "at",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6625000,
        "duration_milliseconds": 62,
        "text_offset": 12,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7500000,
        "duration_milliseconds": 487,
        "text_offset": 14,
        "word_length": 8,
        "text": "specific",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12625000,
        "duration_milliseconds": 375,
        "text_offset": 23,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17250000,
        "duration_milliseconds": 87,
        "text_offset": 28,
        "word_length": 1,
        "text": "(",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 18125000,
        "duration_milliseconds": 237,
        "text_offset": 29,
        "word_length": 3,
        "text": "any",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20750000,
        "duration_milliseconds": 312,
        "text_offset": 33,
        "word_length": 4,
        "text": "city",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 24125000,
        "duration_milliseconds": 150,
        "text_offset": 38,
        "word_length": 3,
        "text": "can",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 25875000,
        "duration_milliseconds": 125,
        "text_offset": 42,
        "word_length": 2,
        "text": "be",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27250000,
        "duration_milliseconds": 112,
        "text_offset": 45,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 28625000,
        "duration_milliseconds": 375,
        "text_offset": 49,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32625000,
        "duration_milliseconds": 375,
        "text_offset": 58,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36500000,
        "duration_milliseconds": 100,
        "text_offset": 64,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 45125000,
        "duration_milliseconds": 212,
        "text_offset": 66,
        "word_length": 4,
        "text": "Then",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47500000,
        "duration_milliseconds": 100,
        "text_offset": 71,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 48625000,
        "duration_milliseconds": 237,
        "text_offset": 74,
        "word_length": 5,
        "text": "check",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51250000,
        "duration_milliseconds": 100,
        "text_offset": 80,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 52375000,
        "duration_milliseconds": 425,
        "text_offset": 84,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 56875000,
        "duration_milliseconds": 287,
        "text_offset": 93,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 60000000,
        "duration_milliseconds": 100,
        "text_offset": 98,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 61250000,
        "duration_milliseconds": 175,
        "text_offset": 102,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63250000,
        "duration_milliseconds": 162,
        "text_offset": 106,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 65125000,
        "duration_milliseconds": 250,
        "text_offset": 111,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 67875000,
        "duration_milliseconds": 75,
        "text_offset": 117,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 68750000,
        "duration_milliseconds": 112,
        "text_offset": 120,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 70000000,
        "duration_milliseconds": 437,
        "text_offset": 124,
        "word_length": 4,
        "text": "tour",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 74625000,
        "duration_milliseconds": 100,
        "text_offset": 128,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 83250000,
        "duration_milliseconds": 312,
        "text_offset": 130,
        "word_length": 4,
        "text": "Same",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 86625000,
        "duration_milliseconds": 87,
        "text_offset": 135,
        "word_length": 3,
        "text": "for",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 87625000,
        "duration_milliseconds": 75,
        "text_offset": 139,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 88500000,
        "duration_milliseconds": 275,
        "text_offset": 143,
        "word_length": 4,
        "text": "next",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 91500000,
        "duration_milliseconds": 200,
        "text_offset": 148,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 93625000,
        "duration_milliseconds": 87,
        "text_offset": 153,
        "word_length": 3,
        "text": "and",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 94750000,
        "duration_milliseconds": 250,
        "text_offset": 157,
        "word_length": 2,
        "text": "so",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 97500000,
        "duration_milliseconds": 162,
        "text_offset": 160,
        "word_length": 2,
        "text": "on",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 100000000,
        "duration_milliseconds": 137,
        "text_offset": 163,
        "word_length": 3,
        "text": "...",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 101375000,
        "duration_milliseconds": 125,
        "text_offset": 167,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 102875000,
        "duration_milliseconds": 337,
        "text_offset": 170,
        "word_length": 6,
        "text": "repeat",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 106500000,
        "duration_milliseconds": 187,
        "text_offset": 177,
        "word_length": 4,
        "text": "this",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 108500000,
        "duration_milliseconds": 262,
        "text_offset": 182,
        "word_length": 5,
        "text": "until",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 111250000,
        "duration_milliseconds": 162,
        "text_offset": 188,
        "word_length": 5,
        "text": "there",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 113125000,
        "duration_milliseconds": 125,
        "text_offset": 194,
        "word_length": 2,
        "text": "is",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 114500000,
        "duration_milliseconds": 212,
        "text_offset": 197,
        "word_length": 2,
        "text": "no",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 116750000,
        "duration_milliseconds": 537,
        "text_offset": 200,
        "word_length": 9,
        "text": "unvisited",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 122250000,
        "duration_milliseconds": 337,
        "text_offset": 210,
        "word_length": 4,
        "text": "node",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 125875000,
        "duration_milliseconds": 100,
        "text_offset": 214,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "we-start-at-a-specific-city-any-city-can-be-the-f27a8aa7.mp3",
    "final_audio": "we-start-at-a-specific-city-any-city-can-be-the-f27a8aa7.mp3"
  },
  {
    "input_text": "Finally, we draw a connection back to the starting point.",
    "input_data": {
      "input_text": "Finally, we draw a connection back to the starting point.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Finally, we draw a connection back to the starting point.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">Finally, we draw a connection back to the starting point.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 525,
        "text_offset": 0,
        "word_length": 7,
        "text": "Finally",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 6750000,
        "duration_milliseconds": 112,
        "text_offset": 7,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 8000000,
        "duration_milliseconds": 112,
        "text_offset": 9,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 9375000,
        "duration_milliseconds": 225,
        "text_offset": 12,
        "word_length": 4,
        "text": "draw",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 11875000,
        "duration_milliseconds": 62,
        "text_offset": 17,
        "word_length": 1,
        "text": "a",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12750000,
        "duration_milliseconds": 475,
        "text_offset": 19,
        "word_length": 10,
        "text": "connection",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17750000,
        "duration_milliseconds": 237,
        "text_offset": 30,
        "word_length": 4,
        "text": "back",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 20250000,
        "duration_milliseconds": 87,
        "text_offset": 35,
        "word_length": 2,
        "text": "to",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 21375000,
        "duration_milliseconds": 112,
        "text_offset": 38,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 22750000,
        "duration_milliseconds": 400,
        "text_offset": 42,
        "word_length": 8,
        "text": "starting",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 27000000,
        "duration_milliseconds": 350,
        "text_offset": 51,
        "word_length": 5,
        "text": "point",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 30625000,
        "duration_milliseconds": 100,
        "text_offset": 56,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "finally-we-draw-a-connection-back-to-the-starting-e268e76e.mp3",
    "final_audio": "finally-we-draw-a-connection-back-to-the-starting-e268e76e.mp3"
  },
  {
    "input_text": "If we add more cities, the time complexity still stays good, but in most cases we won't find the optimal shortest path.",
    "input_data": {
      "input_text": "If we add more cities, the time complexity still stays good, but in most cases we won't find the optimal shortest path.",
      "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">If we add more cities, the time complexity still stays good, but in most cases we won't find the optimal shortest path.</mstts:express-as>\n    </voice>\n</speak>\n        ",
      "service": "azure",
      "config": {
        "voice": "en-US-GuyNeural ",
        "style": "newscast-casual",
        "output_format": "Audio48Khz192KBitRateMonoMp3",
        "prosody": null
      }
    },
    "ssml": "<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n    xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"en-US\">\n    <voice name=\"en-US-GuyNeural \">\n        <mstts:express-as style=\"newscast-casual\">If we add more cities, the time complexity still stays good, but in most cases we won't find the optimal shortest path.</mstts:express-as>\n    </voice>\n</speak>\n        ",
    "word_boundaries": [
      {
        "audio_offset": 500000,
        "duration_milliseconds": 175,
        "text_offset": 0,
        "word_length": 2,
        "text": "If",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 2500000,
        "duration_milliseconds": 125,
        "text_offset": 3,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 4000000,
        "duration_milliseconds": 137,
        "text_offset": 6,
        "word_length": 3,
        "text": "add",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 5625000,
        "duration_milliseconds": 175,
        "text_offset": 10,
        "word_length": 4,
        "text": "more",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 7625000,
        "duration_milliseconds": 387,
        "text_offset": 15,
        "word_length": 6,
        "text": "cities",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 12500000,
        "duration_milliseconds": 100,
        "text_offset": 21,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 13500000,
        "duration_milliseconds": 125,
        "text_offset": 23,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 15000000,
        "duration_milliseconds": 237,
        "text_offset": 27,
        "word_length": 4,
        "text": "time",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 17500000,
        "duration_milliseconds": 587,
        "text_offset": 32,
        "word_length": 10,
        "text": "complexity",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 23625000,
        "duration_milliseconds": 237,
        "text_offset": 43,
        "word_length": 5,
        "text": "still",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 26250000,
        "duration_milliseconds": 262,
        "text_offset": 49,
        "word_length": 5,
        "text": "stays",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 29000000,
        "duration_milliseconds": 275,
        "text_offset": 55,
        "word_length": 4,
        "text": "good",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 32750000,
        "duration_milliseconds": 137,
        "text_offset": 59,
        "word_length": 1,
        "text": ",",
        "boundary_type": "Punctuation"
      },
      {
        "audio_offset": 34125000,
        "duration_milliseconds": 125,
        "text_offset": 61,
        "word_length": 3,
        "text": "but",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 35625000,
        "duration_milliseconds": 87,
        "text_offset": 65,
        "word_length": 2,
        "text": "in",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 36750000,
        "duration_milliseconds": 262,
        "text_offset": 68,
        "word_length": 4,
        "text": "most",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 39625000,
        "duration_milliseconds": 350,
        "text_offset": 73,
        "word_length": 5,
        "text": "cases",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 43375000,
        "duration_milliseconds": 100,
        "text_offset": 79,
        "word_length": 2,
        "text": "we",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 44625000,
        "duration_milliseconds": 225,
        "text_offset": 82,
        "word_length": 5,
        "text": "won't",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 47125000,
        "duration_milliseconds": 250,
        "text_offset": 88,
        "word_length": 4,
        "text": "find",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 49750000,
        "duration_milliseconds": 100,
        "text_offset": 93,
        "word_length": 3,
        "text": "the",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 51000000,
        "duration_milliseconds": 400,
        "text_offset": 97,
        "word_length": 7,
        "text": "optimal",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 55125000,
        "duration_milliseconds": 350,
        "text_offset": 105,
        "word_length": 8,
        "text": "shortest",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 58875000,
        "duration_milliseconds": 412,
        "text_offset": 114,
        "word_length": 4,
        "text": "path",
        "boundary_type": "Word"
      },
      {
        "audio_offset": 63250000,
        "duration_milliseconds": 100,
        "text_offset": 118,
        "word_length": 1,
        "text": ".",
        "boundary_type": "Punctuation"
      }
    ],
    "original_audio": "if-we-add-more-cities-the-time-complexity-still-2d9c12c7.mp3",
    "final_audio": "if-we-add-more-cities-the-time-complexity-still-2d9c12c7.mp3"
  }
]